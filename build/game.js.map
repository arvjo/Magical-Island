{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/script/agent/Agent.js","src/script/agent/Character.js","src/script/agent/Hedgehog.js","src/script/agent/Mouse.js","src/script/agent/Panda.js","src/script/backend.js","src/script/game.js","src/script/global.js","src/script/language.js","src/script/logger.js","src/script/objects/Cookies.js","src/script/objects/Counter.js","src/script/objects/Cover.js","src/script/objects/DraggableObject.js","src/script/objects/GoalCookie.js","src/script/objects/GoalObject.js","src/script/objects/Menu.js","src/script/objects/Modal.js","src/script/objects/ObjectPanel.js","src/script/objects/Slider.js","src/script/objects/WaterCan.js","src/script/objects/buttons/ButtonPanel.js","src/script/objects/buttons/GeneralButton.js","src/script/objects/buttons/NumberButton.js","src/script/objects/buttons/SpriteButton.js","src/script/objects/buttons/TextButton.js","src/script/objects/representations/DiceRepresentation.js","src/script/objects/representations/DotsRepresentation.js","src/script/objects/representations/FingerRepresentation.js","src/script/objects/representations/NumberRepresentation.js","src/script/objects/representations/StrikeRepresentation.js","src/script/objects/representations/YesnoRepresentation.js","src/script/player.js","src/script/pubsub.js","src/script/states/AgentSetupState.js","src/script/states/BeachState.js","src/script/states/BootState.js","src/script/states/ChooseScenarioState.js","src/script/states/EntryState.js","src/script/states/GardenState.js","src/script/states/SuperState.js","src/script/states/subgames/BeeFlightBee.js","src/script/states/subgames/BeeFlightGame.js","src/script/states/subgames/NumberGame.js","src/script/states/subgames/SharkGame.js","src/script/states/subgames/SharkGameApe.js","src/script/states/subgames/Subgame.js","src/script/utils.js"],"names":[],"mappingslzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzpMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpnhvjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtrvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtvhDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzjhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACztlxpxbxdfrQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrjfile":"game.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Character = require('./Character.js');\nvar GLOBAL = require('../global.js');\nvar LANG = require('../language.js');\nvar EventSystem = require('../pubsub.js');\nvar utils = require('../utils.js');\nvar WaterCan = require('../objects/WaterCan.js');\n\nmodule.exports = Agent;\n\nAgent.prototype = Object.create(Character.prototype);\nAgent.prototype.constructor = Agent;\n\n/*\n * The super class for agent objects.\n * (See Panda for sub classing template)\n *\n * In a subclass, set up the following:\n * <SubAgent>.prototype.id = string, for reference in LANG files.\n * <SubAgent>.prototype.agentName = string, name of the agent.\n * this.coords\n *\n * The subagent's sprite atlas and audio should be loaded in the boot state.\n * The sprite atlas should be named the same as the id of the subagent.\n * It should at least have the following: arm, leg, body, eye,\n *                                        mouth0 (neutral), mouth1 (open), mouth2 (happy), mouth3 (sad)\n *\n * @param {Object} game - A reference to the Phaser game.\n * @return {Object} Itself\n */\nfunction Agent (game) {\n\tCharacter.call(this, game); // Parent constructor.\n\n\tthis.coords = this.coords || {};\n\tthis.coords.anim = {\n\t\tarm: {\n\t\t\torigin: -0.8,\n\t\t\twave: { from: -0.1, to: 0.2, durUp: 0.3, dur: 0.2 },\n\t\t\tpump: { angle: 0.5, move: 50, durUp: 0.5, dur: 0.25 },\n\t\t\twater: { angle: 0, back: -2, canAngle: -0.5, durBack: 0.2, durUp: 0.5, durCan: 0.5 }\n\t\t}\n\t};\n\n\tthis.leftArm = this.game.add.group(this);\n\tthis.leftArm.x = this.coords.arm.left.x;\n\tthis.leftArm.y = this.coords.arm.left.y;\n\tthis.leftArm.rotation = this.coords.anim.arm.origin;\n\tthis.leftArm.create(0, 0, this.id, 'arm').anchor.set(1, 0.5);\n\n\tthis.rightArm = this.game.add.group(this);\n\tthis.rightArm.x = this.coords.arm.right.x;\n\tthis.rightArm.y = this.coords.arm.right.y;\n\tthis.rightArm.rotation = -this.coords.anim.arm.origin;\n\tvar rightarm = this.rightArm.create(0, 0, this.id, 'arm');\n\trightarm.anchor.set(1, 0.5);\n\trightarm.scale.x = -1;\n\n\tthis.leftLeg = this.game.add.group(this);\n\tthis.leftLeg.x = this.coords.leg.left.x;\n\tthis.leftLeg.y = this.coords.leg.left.y;\n\tthis.leftLeg.create(0, 0, this.id, 'leg').anchor.set(0.5, 0);\n\n\tthis.rightLeg = this.game.add.group(this);\n\tthis.rightLeg.x = this.coords.leg.right.x;\n\tthis.rightLeg.y = this.coords.leg.right.y;\n\tvar rightleg = this.rightLeg.create(0, 0, this.id, 'leg');\n\trightleg.anchor.set(0.5, 0);\n\trightleg.scale.x = -1;\n\n\tthis.body = this.create(0, 0, this.id, 'body');\n\tthis.body.anchor.set(0.5);\n\n\tthis.leftEye = this.create(this.coords.eye.left.x, this.coords.eye.left.y, this.id, 'eye');\n\tthis.leftEye.anchor.set(0.5);\n\n\tthis.rightEye = this.create(this.coords.eye.right.x, this.coords.eye.right.y, this.id, 'eye');\n\tthis.rightEye.anchor.set(0.5);\n\n\tthis.mouth = this.create(this.coords.mouth.x, this.coords.mouth.y, this.id, 'mouth0');\n\tthis.mouth.anchor.set(0.5, 0);\n\n\n\t/* Character animations */\n\tvar mouthNeutral = this.mouth.frame;\n\tthis.talk = TweenMax.fromTo(this.mouth, 0.2, { frame: mouthNeutral }, {\n\t\tframe: mouthNeutral + 1, roundProps: 'frame', ease: Power0.easeInOut, repeat: -1, yoyo: true, paused: true\n\t});\n\tthis.walk = new TimelineMax({ repeat: -1, paused: true })\n\t\t.to(this.leftLeg, 0.12, { y: '-=50' , ease: Power1.easeInOut, yoyo: true, repeat: 1 }, 0)\n\t\t.to(this.rightLeg, 0.12, { y: '-=50' , ease: Power1.easeInOut, yoyo: true, repeat: 1 }, 0.24);\n\n\t/* Create the speech audio sheet. */\n\tthis.speech = utils.createAudioSheet(this.id + 'Speech', LANG.SPEECH[this.id].markers);\n\n\t/* Save the progress of the player for AI purposes */\n\tvar _this = this;\n\tvar currentMode = null;\n\tthis.playerCorrect = 0;\n\tthis.playerWrong = 0;\n\tthis.playerGuesses = [];\n\tthis.lastGuess = null;\n\n\tEventSystem.subscribe(GLOBAL.EVENT.subgameStarted, function () {\n\t\t_this.playerCorrect = 0;\n\t\t_this.playerWrong = 0;\n\t\t_this.playerGuesses = [];\n\t});\n\n\tEventSystem.subscribe(GLOBAL.EVENT.modeChange, function (mode) {\n\t\tcurrentMode = mode;\n\t});\n\n\tEventSystem.subscribe(GLOBAL.EVENT.tryNumber, function (guess, correct) {\n\t\tif (currentMode === GLOBAL.MODE.playerDo ||\n\t\t\tcurrentMode === GLOBAL.MODE.playerShow) {\n\t\t\t_this.playerGuesses.push([guess, correct]);\n\t\t\tif (guess === correct) {\n\t\t\t\t_this.playerCorrect++;\n\t\t\t} else {\n\t\t\t\t_this.playerWrong++;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn this;\n}\n\n/**\n * @property {number} tint - The tint of the agent.\n */\nObject.defineProperty(Agent.prototype, 'tint', {\n\tget: function() {\n\t\treturn this.body.tint;\n\t},\n\tset: function(value) {\n\t\tthis.body.tint = value;\n\t\tthis.leftArm.children[0].tint = value;\n\t\tthis.rightArm.children[0].tint = value;\n\t\tthis.leftLeg.children[0].tint = value;\n\t\tthis.rightLeg.children[0].tint = value;\n\t}\n});\n\n/**\n * @property {number} percentWrong - The minimum chance of an agent picking wrong number.\n */\nAgent.prototype.percentWrong = 0.3;\n\n/**\n * Have the agent guess a number.\n * NOTE: This can be overwritten by other AI.\n * Variables that are available:\n *     this.playerGuesses [[guess, correct], ...].\n *     this.playerCorrect Number of correct guesses by the player.\n *     this.playerWrong   Number of incorrect guesses by the player.\n * @param {number} correct - The correct number.\n * @param {number} min - Minimum value to guess.\n * @param {number} max - Maximum value to guess.\n * @returns {number} The agent's guess.\n */\nAgent.prototype.guessing = function (correct, min, max) {\n\tvar perc = 1;\n\tif (this.playerWrong > 0) {\n\t\tperc = Math.random();\n\t}\n\n\t// Guessing correct is relative to how many wrongs you have made.\n\t// There is also always a small chance for the agent to be wrong.\n\tvar guess;\n\tif (perc >= (this.playerWrong / this.playerGuesses.length) && Math.random() > this.percentWrong) {\n\t\tguess = correct;\n\t} else {\n\t\tdo {\n\t\t\tguess = this.game.rnd.integerInRange(min, max);\n\t\t} while (guess === correct && (min < correct || correct < max));\n\t}\n\n\treturn guess;\n};\n\n/**\n * Have the agent guess a number\n * Publishes agentGuess event.\n * @param {number} correct - The correct number.\n * @param {number} min - Minimum value to guess.\n * @param {number} max - Maximum value to guess.\n * @returns {number} The agent's guess (also available in this.lastGuess).\n */\nAgent.prototype.guessNumber = function (correct, min, max) {\n\tthis.lastGuess = this.guessing(correct, min, max);\n\tEventSystem.publish(GLOBAL.EVENT.agentGuess, [this.lastGuess, correct]);\n\treturn this.lastGuess;\n};\n\n\n/**\n * Set the agent to neutral state.\n */\nAgent.prototype.setNeutral = function () {\n\tthis.mouth.frameName = 'mouth0';\n};\n\n/**\n * Set the agent to happy state.\n */\nAgent.prototype.setHappy = function () {\n\tthis.mouth.frameName = 'mouth2';\n};\n\n/**\n * Set the agent to sad state.\n */\nAgent.prototype.setSad = function () {\n\tthis.mouth.frameName = 'mouth3';\n};\n\n/**\n * Add a thought bubble to the agent. Must be called to use the \"think\" function.\n * @param {number} representation - The representation of the guess.\n * @param {boolean} right - If the thought bubble should be to the right instead of left (default false).\n */\nAgent.prototype.addThought = function (representation, right) {\n\tCharacter.prototype.addThought.call(this, right ? 550 : -550, -475, representation, right);\n\tthis.thought.toScale = 2;\n};\n\n/**\n * Animation: Think about the guessed number!\n * NOTE: The addThought must have been called before this function.\n * @param {boolean} sielnt - If the agent should be silent while thinking (optional).\n * @returns {Object} The animation timeline.\n */\nAgent.prototype.think = function (silent) {\n\tif (typeof this.thought === 'undefined' || this.thought === null) {\n\t\treturn;\n\t}\n\n\tvar t = Character.prototype.think.call(this);\n\tt.addCallback(function () { this.thought.guess.number = this.lastGuess; }, 0, null, this);\n\tif (!silent) {\n\t\tt.addSound(this.speech, this, 'hmm', 0);\n\n\t\t// TODO: Sound should be based on confidence\n\t\tt.addSound(this.speech, this, this.game.rnd.pick(['isThisRight', 'itItThisOne', 'hasToBeThis']));\n\t}\n\treturn t;\n};\n\n/**\n * Animation: Pump it up yeah!\n * @param {number} duration - Duration in seconds (default 3).\n * @param {number} arm - -1 = left arm, 0 = both, 1 = right arm (default 0).\n * @returns {Object} The animation timeline.\n */\nAgent.prototype.fistPump = function (duration, arm) {\n\tduration = duration || 3;\n\tarm = arm || 0;\n\n\tvar origin = this.coords.anim.arm.origin;\n\tvar pump = this.coords.anim.arm.pump;\n\tvar upDown = duration / 4;\n\tif (upDown > pump.durUp) { upDown = pump.durUp; }\n\tvar times = TweenMax.prototype.calcYoyo(duration - upDown * 2, pump.dur);\n\n\tvar t = new TimelineMax();\n\tif (arm <= 0) {\n\t\tt.add(new TweenMax(this.leftArm, upDown, { rotation: pump.angle, ease: Power1.easeIn }), 0);\n\t\tt.add(new TweenMax(this.leftArm, pump.dur, { x: '+=' + pump.move, y: '+=' + pump.move, ease: Power1.easeIn, repeat: times, yoyo: true }), 0);\n\t\tt.add(new TweenMax(this.leftArm, upDown, { rotation: origin, ease: Power1.easeOut }), pump.dur * times);\n\t}\n\tif (arm >= 0) {\n\t\tt.add(new TweenMax(this.rightArm, upDown, { rotation: -pump.angle, ease: Power1.easeIn }), 0);\n\t\tt.add(new TweenMax(this.rightArm, pump.dur, { x: '-=' + pump.move, y: '+=' + pump.move, ease: Power1.easeIn, repeat: times, yoyo: true }), 0);\n\t\tt.add(new TweenMax(this.rightArm, upDown, { rotation: -origin, ease: Power1.easeOut }), pump.dur * times);\n\t}\n\treturn t;\n};\n\n/**\n * Animation: Put you hand up in the air and wave it around like you care.\n * @param {number} duration - Duration in seconds (default 3).\n * @param {number} arm - -1 = left arm, 0 = both, 1 = right arm (default 0).\n * @returns {Object} The animation timeline.\n */\nAgent.prototype.wave = function (duration, arm) {\n\tduration = duration || 3;\n\tarm = arm || 0;\n\n\tvar origin = this.coords.anim.arm.origin;\n\tvar wave = this.coords.anim.arm.wave;\n\tvar upDown = duration / 4;\n\tif (upDown > wave.durUp) { upDown = wave.durUp; }\n\tvar times = parseInt((duration - upDown * 2) / wave.dur);\n\ttimes += (times % 2 === 0) ? 1 : 0; // Even numbers do not loop back to origin.\n\n\tvar t = new TimelineMax();\n\tif (arm <= 0) {\n\t\tt.add(new TweenMax(this.leftArm, upDown, { rotation: wave.from, ease: Power1.easeIn }), 0);\n\t\tt.add(new TweenMax(this.leftArm, wave.dur, { rotation: wave.to, ease: Power0.easeOut, repeat: times, yoyo: true }), upDown);\n\t\tt.add(new TweenMax(this.leftArm, upDown, { rotation: origin, ease: Power1.easeOut }), wave.dur * times + upDown);\n\t}\n\tif (arm >= 0) {\n\t\tt.add(new TweenMax(this.rightArm, upDown, { rotation: -wave.from, ease: Power1.easeIn }), 0);\n\t\tt.add(new TweenMax(this.rightArm, wave.dur, { rotation: -wave.to, ease: Power0.easeOut, repeat: times, yoyo: true }), upDown);\n\t\tt.add(new TweenMax(this.rightArm, upDown, { rotation: -origin, ease: Power1.easeOut }), wave.dur * times + upDown);\n\t}\n\treturn t;\n};\n\n/**\n * Animation: Water with a water can.\n * @param {number} duration - Duration in seconds (default 3).\n * @param {number} arm - 1 < left arm, otherwise right arm (default 0).\n * @returns {Object} The animation timeline.\n */\nAgent.prototype.water = function (duration, arm) {\n\tduration = duration || 3;\n\tarm = arm || 0;\n\tvar obj, dir;\n\tif (arm < 1) {\n\t\tobj = this.leftArm;\n\t\tdir = 1;\n\t} else {\n\t\tobj = this.rightArm;\n\t\tdir = -1;\n\t}\n\n\tvar w  = new WaterCan(this.game, -obj.children[0].width + dir * 60, -100);\n\tw.scale.set(-dir * 3, 3);\n\tw.rotation = 0;\n\tw.visible = false;\n\tobj.add(w);\n\n\tvar t = new TimelineMax();\n\tvar water = this.coords.anim.arm.water;\n\tt.add(new TweenMax(obj, water.durBack, { rotation: dir * water.back, ease: Power1.easeIn }));\n\tt.addCallback(function () { w.visible = true; });\n\tt.add(new TweenMax(obj, water.durUp, { rotation: dir * water.angle, ease: Power1.easeOut }));\n\tt.add(new TweenMax(w, water.durCan, { rotation: dir * water.canAngle }));\n\tt.addCallback(this.eyesFollowObject, null, [w.can], this);\n\tt.addLabel('watering');\n\tt.add(w.pour(duration));\n\tt.addCallback(this.eyesStopFollow, null, null, this);\n\tt.add(new TweenMax(obj, water.durUp, { rotation: dir * water.back, ease: Power1.easeIn }));\n\tt.addCallback(function () { w.destroy(); });\n\tt.add(new TweenMax(obj, water.durBack, { rotation: dir * this.coords.anim.arm.origin, ease: Power1.easeOut }));\n\treturn t;\n};\n\n/**\n * Have an eye follow a target.\n * @param {Object} eye - The eye to follow with.\n * @param {Object} targ - The target to follow.\n * @private\n */\nAgent.prototype._eyeFollow = function (eye, targ) {\n\tvar origin = { x: eye.x, y: eye.y };\n\tvar depth = this.coords.eye.depth;\n\tvar maxMove = this.coords.eye.maxMove;\n\tvar agent = this;\n\n\t/* Update functions trigger on every game loop */\n\teye.update = function () {\n\t\tif (!agent.visible) { return; }\n\n\t\tvar o = this.world;\n\t\tvar a = this.game.physics.arcade.angleBetween(o, targ.world ? targ.world : targ);\n\t\tvar d = this.game.physics.arcade.distanceBetween(o, targ.world ? targ.world : targ) / depth;\n\t\tif (d > maxMove) { d = maxMove; }\n\t\tthis.x = Math.cos(a) * d + origin.x;\n\t\tthis.y = Math.sin(a) * d + origin.y;\n\t};\n};\n\n/**\n * Make the agent's eyes follow an object.\n * @param {Object} targ - The target to follow\n */\nAgent.prototype.eyesFollowObject = function (targ) {\n\tthis.eyesStopFollow();\n\n\tthis._eyeFollow(this.leftEye, targ);\n\tthis._eyeFollow(this.rightEye, targ);\n};\n\n/**\n * Make the agent's eyes follow the input pointer.\n */\nAgent.prototype.eyesFollowPointer = function () {\n\tthis.eyesFollowObject(this.game.input.activePointer);\n};\n\n/**\n * Stop the eyes following pointer or object.\n */\nAgent.prototype.eyesStopFollow = function () {\n\tthis.leftEye.x = this.coords.eye.left.x;\n\tthis.leftEye.y = this.coords.eye.left.y;\n\tthis.rightEye.x = this.coords.eye.right.x;\n\tthis.rightEye.y = this.coords.eye.right.y;\n\n\tthis.leftEye.update = function () {};\n\tthis.rightEye.update = function () {};\n};","var NumberButton = require('../objects/buttons/NumberButton.js');\nvar GLOBAL = require('../global.js');\nvar utils = require('../utils.js');\n\nmodule.exports = Character;\n\nCharacter.prototype = Object.create(Phaser.Group.prototype);\nCharacter.prototype.constructor = Character;\n\n/**\n * Superclass for characters.\n * @param {Object} game - A reference to the Phaser game.\n */\nfunction Character (game) {\n\tPhaser.Group.call(this, game, null); // Parent constructor.\n}\n\n/**\n * When you want a sound to be said by a character.\n * NOTE: If the character has a this.talk TweenMax or TimelineMax it will be used.\n * @param {string|Object} what - Key to a sound file or the sound object.\n * @param {string} marker - If you want the speaker to only talk during a specific marker.\n * @returns {Object} The sound object (not started).\n */\nCharacter.prototype.say = function (what, marker) {\n\tvar a = (typeof what === 'string') ? this.game.add.audio(what) : what;\n\n\t/* Check if character has a talk animation. */\n\tif (this.talk) {\n\t\tvar current;\n\t\tvar signals = [];\n\n\t\t/* Functions to run on audio signals. */\n\t\tvar play = function () {\n\t\t\tif (a.currentMarker) {\n\t\t\t\tcurrent = a.currentMarker;\n\t\t\t}\n\t\t\tif (!marker || current === marker) {\n\t\t\t\tthis.talk.play();\n\t\t\t}\n\t\t};\n\n\t\tvar pause = function () {\n\t\t\tif (!marker || current === marker) {\n\t\t\t\tthis.talk.pause(0);\n\t\t\t}\n\t\t};\n\n\t\tvar stop = function () {\n\t\t\tif (!marker || current === marker) {\n\t\t\t\tthis.talk.pause(0);\n\t\t\t\twhile (signals.length > 0) {\n\t\t\t\t\tsignals[0].detach();\n\t\t\t\t\tsignals[0]._destroy();\n\t\t\t\t\tsignals.splice(0, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tsignals.push(a.onPlay.add(play, this));\n\t\tsignals.push(a.onResume.add(play, this));\n\t\tsignals.push(a.onPause.add(pause, this));\n\t\tsignals.push(a.onStop.add(stop, this));\n\t}\n\n\treturn a;\n};\n\n/**\n * Move a character.\n * NOTE: If this.turn property is true, it will turn according to direction.\n * NOTE: If the character has a this.walk TweenMax or TimelineMax it will be used.\n * @param {Object} properties - Properties to tween, set x and/or y to move.\n * @param {number} duration - Duration of the move.\n * @param {number} scale - If a scaling should happen during the move.\n * @returns {Object} The movement timeline.\n */\nCharacter.prototype.move = function (properties, duration, scale) {\n\tproperties.ease = properties.ease || Power1.easeInOut;\n\n\tvar t = new TimelineMax();\n\tt.to(this, duration, properties);\n\n\t/* Check if character has a walk animation. */\n\tif (this.walk) {\n\t\tt.addCallback(function () { this.walk.play(); }, 0, null, this);\n\t\tt.addCallback(function () { this.walk.pause(0); }, '+=0', null, this);\n\t}\n\n\t/* Animate the scale if available. */\n\t/* Scaling is also how we turn the character, so it gets a bit complicated later... */\n\tvar ts = null;\n\tif (scale) {\n\t\tts = new TweenMax(this.scale, duration, { x: scale, y: scale, ease: properties.ease });\n\t}\n\n\t/* Check if the character should be turned when moving. */\n\tif (this.turn) {\n\t\tvar _this = this;\n\t\tvar turnDuration = 0.2;\n\t\tvar percentDuration = turnDuration / duration;\n\n\t\tt.add(new TweenMax(this.scale, turnDuration, {\n\t\t\tease: properties.ease,\n\t\t\tonStart: function () {\n\t\t\t\t// The turn tween needs to be updated in real time,\n\t\t\t\t// otherwise it won't work in Timelines.\n\t\t\t\tvar prop = { x: Math.abs(_this.scale.x), y: Math.abs(_this.scale.y) };\n\n\t\t\t\t// Check if we are scaling along with the movement.\n\t\t\t\t// In that case we scale the turning as well\n\t\t\t\tif (ts) {\n\t\t\t\t\tif (ts.vars.x > _this.scale.x) { // Scaling up\n\t\t\t\t\t\tprop.x += ts.vars.x * percentDuration;\n\t\t\t\t\t} else { // Scaling down\n\t\t\t\t\t\tprop.x -= ts.vars.x * percentDuration;\n\t\t\t\t\t}\n\t\t\t\t\tif (ts.vars.x > _this.scale.x) { // Scaling up\n\t\t\t\t\t\tprop.y += ts.vars.y * percentDuration;\n\t\t\t\t\t} else { // Scaling down\n\t\t\t\t\t\tprop.y -= ts.vars.y * percentDuration;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Set the scale direction\n\t\t\t\t// If we do not change x and we are looking left, keep doing it.\n\t\t\t\tif (typeof properties.x === 'undefined' || properties.x === null ||\n\t\t\t\t\t_this.x === properties.x) {\n\t\t\t\t\tif (_this.scale.x < 0) {\n\t\t\t\t\t\tprop.x *= -1;\n\t\t\t\t\t}\n\t\t\t\t/* If we are going to a position to the left of the current, look left. */\n\t\t\t\t} else if (properties.x < _this.x) {\n\t\t\t\t\tprop.x *= -1;\n\t\t\t\t}\n\n\t\t\t\t/* Update the turn tween with new values */\n\t\t\t\tthis.updateTo({ x: prop.x, y: prop.y });\n\n\t\t\t\t/* Make sure that a scaling tween has the correct direction */\n\t\t\t\tif (ts && prop.x < 0) {\n\t\t\t\t\tts.updateTo({ x: -1 * ts.vars.x });\n\t\t\t\t}\n\t\t\t}\n\t\t}), 0);\n\n\t\tif (ts) {\n\t\t\t/* Update the duration of scaling and add it. */\n\t\t\tts.duration(ts.duration() - turnDuration);\n\t\t\tt.add(ts, turnDuration);\n\t\t}\n\n\t} else if (ts) {\n\t\t/* No turning, just add the scaling. */\n\t\tt.add(ts, 0);\n\t}\n\n\treturn t;\n};\n\n/**\n * Turn around! Every now and then I get a little bit lonely...\n * @param {number} direction - -1 = left, 1 = right, default: opposite of current.\n *                             NOTE: This only takes into account the state when the function is called.\n *                             Making a \"opposite turn\" inside a Timeline might not have the expected result.\n * @returns {Object} The turning tween.\n */\nCharacter.prototype.moveTurn = function (direction) {\n\t// Turn by manipulating the scale.\n\tvar newScale = (direction ? direction * Math.abs(this.scale.x) : -1 * this.scale.x);\n\treturn new TweenMax(this.scale, 0.2, { x: newScale });\n};\n\n\n/**\n * Add a thought bubble to the agent. Must be called to use the \"think\" function.\n * NOTE: You can change the scale for the think function by setting the toScale property.\n * @param {number} x - The x position.\n * @param {number} y - The y position.\n * @param {number} representation - The representation of the guess.\n * @param {boolean} mirror - If the thought bubble should be to the right instead of left (default false).\n */\nCharacter.prototype.addThought = function (x, y, representation, mirror) {\n\tthis.thought = this.game.add.group(this);\n\tthis.thought.x = x;\n\tthis.thought.y = y;\n\tthis.thought.visible = false;\n\tthis.thought.toScale = 1;\n\tthis.thought.bubble = this.thought.create(0, 0, 'objects', 'thought_bubble');\n\tthis.thought.bubble.scale.x = 1;\n\tthis.thought.bubble.anchor.set(0.5);\n\tvar options = {\n\t\tx: -60,\n\t\ty: -55,\n\t\tsize: 100,\n\t\tdisabled: true\n\t};\n\t// Make sure that button background is correct according to method.\n\tif (this.game.state.getCurrentState().method === GLOBAL.METHOD.count ||\n\t\tthis.game.state.getCurrentState().method === GLOBAL.METHOD.incrementalSteps) {\n\t\toptions.background = 'button';\n\t}\n\tthis.thought.guess = new NumberButton(this.game, 1, representation, options);\n\tthis.thought.add(this.thought.guess);\n\tif (mirror) {\n\t\tthis.mirrorThought();\n\t}\n};\n\n/**\n * Mirror the thought bubble 180 degrees horizontally.\n */\nCharacter.prototype.mirrorThought = function () {\n\tthis.thought.guess.x += (this.thought.guess.x > -60) ? -20 : 20;\n\tthis.thought.bubble.scale.x *= -1;\n};\n\n/**\n * Animation: Think about the guessed number!\n * NOTE: The addThought must have been called before this function.\n * @returns {Object} The animation timeline.\n */\nCharacter.prototype.think = function () {\n\tif (typeof this.thought === 'undefined' || this.thought === null) {\n\t\treturn;\n\t}\n\n\tvar t = new TimelineMax();\n\tt.addCallback(function () { this.thought.guess.visible = false; }, null, null, this);\n\tt.add(utils.fade(this.thought, true));\n\tt.add(TweenMax.fromTo(this.thought.scale, 1.5,\n\t\t{ x: 0, y: 0 },\n\t\t{ x: this.thought.toScale, y: this.thought.toScale, ease: Elastic.easeOut }\n\t), 0);\n\tt.add(utils.fade(this.thought.guess, true, 1), 0.5);\n\n\treturn t;\n};","var Agent = require('./Agent.js');\nvar LANG = require('../language.js');\n\nmodule.exports = Hedgehog;\n\nHedgehog.prototype = Object.create(Agent.prototype);\nHedgehog.prototype.constructor = Hedgehog;\n\nHedgehog.prototype.id = 'hedgehog'; // Reference for LANG files and asset files\nHedgehog.prototype.agentName = LANG.TEXT.hedgehogName;\n\n/**\n * The hedgehog agent.\n * The asset files are loaded in the boot state using key: *.prototype.id.\n * @param {Object} game - A reference to the Phaser game.\n * @return Itself\n */\nfunction Hedgehog (game) {\n\tthis.coords = {\n\t\tarm: {\n\t\t\tleft: { x: -100, y: -80 },\n\t\t\tright: { x: 100, y: -80 }\n\t\t},\n\t\tleg: {\n\t\t\tleft: { x: -150, y: 300 },\n\t\t\tright: { x: 150, y: 300 }\n\t\t},\n\t\teye: {\n\t\t\tleft: { x: -53, y: -272 },\n\t\t\tright: { x: 35, y: -272 },\n\t\t\tdepth: 20,\n\t\t\tmaxMove: 7\n\t\t},\n\t\tmouth: {\n\t\t\tx: -6, y: -205\n\t\t}\n\t};\n\n\tAgent.call(this, game); // Call parent constructor.\n\n\tvar leftEyeSocket = this.create(this.coords.eye.left.x + 1, this.coords.eye.left.y - 8, this.id, 'socket');\n\tleftEyeSocket.anchor.set(0.5);\n\tthis.bringToTop(this.leftEye);\n\n\tvar rightEyeSocket = this.create(this.coords.eye.right.x - 1, this.coords.eye.right.y - 8, this.id, 'socket');\n\trightEyeSocket.anchor.set(0.5);\n\trightEyeSocket.scale.set(-1, 1);\n\tthis.bringToTop(this.rightEye);\n\n\tvar nose = this.create(this.coords.mouth.x - 2, this.coords.mouth.y - 15, this.id, 'nose');\n\tnose.anchor.set(0.5);\n\t\n\tvar back = this.create(0, 0, this.id, 'back');\n\tback.anchor.set(0.5);\n\tthis.sendToBack(back);\n\n\treturn this;\n}","var Agent = require('./Agent.js');\nvar LANG = require('../language.js');\n\nmodule.exports = Mouse;\n\nMouse.prototype = Object.create(Agent.prototype);\nMouse.prototype.constructor = Mouse;\n\nMouse.prototype.id = 'mouse'; // Reference for LANG files and asset files\nMouse.prototype.agentName = LANG.TEXT.mouseName;\n\n/**\n * The mouse agent.\n * The asset files are loaded in the boot state using key: *.prototype.id.\n * @param {Object} game - A reference to the Phaser game.\n * @return Itself\n */\nfunction Mouse (game) {\n\tthis.coords = {\n\t\tarm: {\n\t\t\tleft: { x: -110, y: -40 },\n\t\t\tright: { x: 110, y: -40 }\n\t\t},\n\t\tleg: {\n\t\t\tleft: { x: -150, y: 350 },\n\t\t\tright: { x: 150, y: 350 }\n\t\t},\n\t\teye: {\n\t\t\tleft: { x: -50, y: -240 },\n\t\t\tright: { x: 50, y: -240 },\n\t\t\tdepth: 20,\n\t\t\tmaxMove: 9\n\t\t},\n\t\tmouth: {\n\t\t\tx: 0, y: -150\n\t\t}\n\t};\n\n\tAgent.call(this, game); // Call parent constructor.\n\n\tvar leftEyeSocket = this.create(this.coords.eye.left.x + 1, this.coords.eye.left.y - 8, this.id, 'socket');\n\tleftEyeSocket.anchor.set(0.5);\n\tthis.bringToTop(this.leftEye);\n\n\tvar rightEyeSocket = this.create(this.coords.eye.right.x - 1, this.coords.eye.right.y - 8, this.id, 'socket');\n\trightEyeSocket.anchor.set(0.5);\n\trightEyeSocket.scale.set(-1, 1);\n\tthis.bringToTop(this.rightEye);\n\n\tvar nose = this.create(this.coords.mouth.x - 1, this.coords.mouth.y - 17, this.id, 'nose');\n\tnose.anchor.set(0.5);\n\n\treturn this;\n}","var Agent = require('./Agent.js');\nvar LANG = require('../language.js');\n\nmodule.exports = Panda;\n\nPanda.prototype = Object.create(Agent.prototype);\nPanda.prototype.constructor = Panda;\n\nPanda.prototype.id = 'panda'; // Reference for LANG files and asset files\nPanda.prototype.agentName = LANG.TEXT.pandaName;\n\n/**\n * The panda agent.\n * The asset files are loaded in the boot state using key: *.prototype.id.\n * @param {Object} game - A reference to the Phaser game.\n * @return Itself\n */\nfunction Panda (game) {\n\tthis.coords = {\n\t\tarm: {\n\t\t\tleft: { x: -150, y: -20 },\n\t\t\tright: { x: 150, y: -20 }\n\t\t},\n\t\tleg: {\n\t\t\tleft: { x: -130, y: 320 },\n\t\t\tright: { x: 130, y: 320 }\n\t\t},\n\t\teye: {\n\t\t\tleft: { x: -65, y: -238 },\n\t\t\tright: { x: 65, y: -238 },\n\t\t\tdepth: 20,\n\t\t\tmaxMove: 9\n\t\t},\n\t\tmouth: {\n\t\t\tx: 0, y: -142\n\t\t}\n\t};\n\n\tAgent.call(this, game); // Call parent constructor.\n\n\treturn this;\n}","var GLOBAL = require('./global.js');\nvar EventSystem = require('./pubsub.js');\n\n/**\n * Handles the communication with the backend.\n * The communication needs a Route object set, that object will tell where\n * to send the different get and post requests.\n * @global\n */\nmodule.exports = {\n\t/**\n\t * @property {Object} _maxTries - Max tries to send requests.\n\t * @default\n\t * @private\n\t */\n\t_maxTries: 10,\n\n\t/**\n\t * @property {Object} _rnd - A random data generator (we have no access to game object here).\n\t * @private\n\t */\n\t_rnd: new Phaser.RandomDataGenerator(),\n\n\t/**\n\t * @property {Object} _previous - The previous scenario.\n\t * @private\n\t */\n\t_previous: -1,\n\n\t/**\n\t * Basic ajax call.\n\t * Publishes connection event if ajax call fail.\n\t * @param {Object} settings - An object with settings to jQuery ajax call\n\t * @param {number} tries - Amount of times to resend if something goes wrong.\n\t *                         Default value is max tries.\n\t *                         NOTE: If server code is between 400 and 500 it will not retry.\n\t * @return {Array} A promise to the ajax request.\n\t *                 NOTE: This has a fail function set which will show connection lost.\n\t */\n\tajax: function (settings, tries) {\n\t\tif (isNaN(tries) || tries === null) {\n\t\t\ttries = this._maxTries;\n\t\t}\n\t\ttries--;\n\n\t\tvar _this = this;\n\t\treturn $.ajax(settings).fail(function (jqXHR) {\n\t\t\tif (jqXHR.status >= 400 && jqXHR.status < 500) {\n\t\t\t\ttries = 0;\n\t\t\t}\n\n\t\t\tif (tries > 0) {\n\t\t\t\tEventSystem.publish(GLOBAL.EVENT.connection, [false]);\n\t\t\t\tsetTimeout(function () { _this.ajax(settings, tries); },\n\t\t\t\t\t(_this._maxTries - tries) * 1000);\n\t\t\t} else {\n\t\t\t\tEventSystem.publish(GLOBAL.EVENT.connectionLost);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * GET request.\n\t * Publishes connection event when get is done.\n\t * NOTE: This request is sent synchronous.\n\t * @param {String} routeName - The name of the route function.\n\t * @param {*} parameters - optional parameters for the route action.\n\t * @return {Object} The object returned from the ajax request.\n\t **/\n\tget: function (routeName, parameters) {\n\t\tvar ret = null;\n\n\t\tif (typeof Routes !== 'undefined' && Routes[routeName]) {\n\t\t\tvar settings = {\n\t\t\t\turl: Routes[routeName](parameters),\n\t\t\t\tasync: false\n\t\t\t};\n\n\t\t\tthis.ajax(settings).done(function (data) {\n\t\t\t\tret = data;\n\t\t\t\tEventSystem.publish(GLOBAL.EVENT.connection, [true]);\n\t\t\t});\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\t/**\n\t * POST data.\n\t * Publishes connection event when post is done.\n\t * @param {String} routeName - The name of the route function.\n\t * @param {Object} data - The data to send (will be transformed to JSON-format).\n\t */\n\tpost: function (routeName, data, callback) {\n\t\t/* We wrap the data in \"magic\" to make it easier to find at the server. */\n\t\tvar stringified = JSON.stringify({ magic: data });\n\n\t\tif (typeof Routes !== 'undefined' && Routes[routeName]) {\n\t\t\tvar settings = {\n\t\t\t\turl: Routes[routeName](),\n\t\t\t\ttype: 'POST',\n\t\t\t\tdataType: 'json',\n\t\t\t\tcontentType: 'application/json',\n\t\t\t\tdata: stringified\n\t\t\t};\n\n\t\t\tthis.ajax(settings).done(function (data) {\n\t\t\t\tEventSystem.publish(GLOBAL.EVENT.connection, [true]);\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback(data);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\t/* This should only be used when in local mode. */\n\t\t\tconsole.log('POST (' + routeName + '): ' + stringified);\n\t\t}\n\t},\n\n\n\t/**\n\t * GET the data of the player.\n\t * @return {Object} An object with data about the player.\n\t */\n\tgetPlayer: function () {\n\t\treturn this.get('current_api_players_path');\n\t},\n\n\t/**\n\t * GET the garden appearance.\n\t * @return {Object} An object with data about the garden.\n\t */\n\tgetGarden: function () {\n\t\treturn this.get('current_api_gardens_path');\n\t},\n\n\t/**\n\t * GET the next game that should be played.\n\t * @return {Object} An object with data about the next game.\n\t */\n\tgetScenario: function () {\n\t\tvar data = this.get('current_api_scenarios_path');\n\n\t\tif (data) {\n\t\t\t// Setup subgame. First check if we should pick a random game.\n\t\t\tif (data.subgame === GLOBAL.STATE.random) {\n\t\t\t\tdo {\n\t\t\t\t\tdata.subgame = this._rnd.pick(GLOBAL.STATE.randomGames);\n\t\t\t\t} while (data.subgame === this._previous);\n\t\t\t}\n\t\t\tthis._previous = data.subgame;\n\n\t\t\t// Representations are only one integer, but can include several representations.\n\t\t\t// Every position holds its own representation, see global.js for more info.\n\t\t\tvar rep = [];\n\t\t\twhile (data.representation >= 10) {\n\t\t\t\trep.unshift(data.representation % 10);\n\t\t\t\tdata.representation = Math.floor(data.representation/10);\n\t\t\t}\n\t\t\trep.unshift(data.representation);\n\t\t\tdata.representation = rep;\n\n\t\t\t// Add intro and outro for the game.\n\t\t\tdata.mode.unshift(GLOBAL.MODE.intro);\n\t\t\tdata.mode.push(GLOBAL.MODE.outro);\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t * POST agent updates.\n\t * @param {Object} data - The agent updates.\n\t */\n\tputAgent: function (data) {\n\t\tthis.post('update_agent_api_players_path', data);\n\t},\n\n\t/**\n\t * POST garden updates.\n\t * Publishes plantUpgrade event.\n\t * @param {Object} data - The garden updates.\n\t */\n\tputUpgradePlant: function (data) {\n\t\tthis.post('upgrade_field_api_gardens_path', data, function (data) {\n\t\t\tEventSystem.publish(GLOBAL.EVENT.plantUpgrade, [data]);\n\t\t});\n\t},\n\n\t/**\n\t * POST player session results.\n\t * @param {Object} data - The session results.\n\t */\n\tputSession: function (data) {\n\t\tthis.post('register_api_player_sessions_path', data);\n\t}\n};","var GLOBAL = require('./global.js');\nvar Player = require('./player.js');\nvar Hedgehog = require('./agent/Hedgehog.js');\nvar Mouse = require('./agent/Mouse.js');\nvar Panda = require('./agent/Panda.js');\nvar BootState = require('./states/BootState.js');\nvar EntryState = require('./states/EntryState.js');\nvar AgentSetupState = require('./states/AgentSetupState.js');\nvar GardenState = require('./states/GardenState.js');\nvar BeachState = require('./states/BeachState.js');\nvar SharkGame = require('./states/subgames/SharkGame.js');\n/*var LizardJungleGame = require('./states/subgames/LizardJungleGame.js');\nvar BirdheroGame = require('./states/subgames/BirdheroGame.js');\nvar BalloonGame = require('./states/subgames/BalloonGame.js');*/\nvar BeeFlightGame = require('./states/subgames/BeeFlightGame.js');\nvar ChooseScenarioState = require('./states/ChooseScenarioState.js');\n\nrequire('./logger.js'); // Start logger\nrequire('./utils.js'); // Setup prototype functions.\n\n/**\n * This is the entrance point to the game.\n * This is where all the states/games are added.\n * BootState will run after this.\n */\nwindow.onload = function () {\n\n\t// Only start game if the element to put it in exist.\n\tif (document.querySelector('#game')) {\n\n\t\t// If running locally we enter debug mode.\n\t\tif (window.location.hostname.toLowerCase() === 'localhost' || window.location.hostname === '127.0.0.1') {\n\t\t\tGLOBAL.debug = true;\n\t\t}\n\n\t\t// Create game object.\n\t\tvar game = new Phaser.Game(1024, 768, Phaser.AUTO, 'game');\n\n\t\t// Cache game object among GLOBALs, use this only if necessary.\n\t\t// TODO: This is not a pretty solution, but it becomes very complicated in utils otherwise.\n\t\tGLOBAL.game = game;\n\n\t\t/* Setup agent lookup globals */\n\t\tGLOBAL.AGENT = {\n\t\t\t0: Panda,\n\t\t\t1: Hedgehog,\n\t\t\t2: Mouse\n\t\t};\n\n\t\t// Cache player object in the game object for easy access.\n\t\tgame.player = new Player(game);\n\n\t\t// Setup game states.\n\t\tgame.state.add('Boot', BootState);\n\t\tgame.state.add(GLOBAL.STATE.entry,        EntryState);\n\t\tgame.state.add(GLOBAL.STATE.agentSetup,   AgentSetupState);\n\t\tgame.state.add(GLOBAL.STATE.garden,       GardenState);\n\t\tgame.state.add(GLOBAL.STATE.beach,        BeachState);\n\t\tgame.state.add(GLOBAL.STATE.sharkGame,\t  SharkGame);\n\t\t/*game.state.add(GLOBAL.STATE.lizardGame,   LizardJungleGame);\n\t\tgame.state.add(GLOBAL.STATE.birdheroGame, BirdheroGame);\n\t\tgame.state.add(GLOBAL.STATE.balloonGame,  BalloonGame);*/\n\t\tgame.state.add(GLOBAL.STATE.beeGame,      BeeFlightGame);\n\t\tgame.state.add(GLOBAL.STATE.scenario,     ChooseScenarioState);\n\n\t\t// Run the boot state.\n\t\tgame.state.start('Boot');\n\t}\n};","/* Used for the publish-subscribe system */\nexports.EVENT = {\n\tstateShutDown:     'stateShutDown',     // [state]\n\n\tsubgameStarted:    'subgameStarted',    // [game type, session token]\n\tnumbergameStarted: 'numbergameStarted', // [method, maxAmount, representation]\n\tmodeChange:        'modeChange',        // [new mode]\n\ttryNumber:         'tryNumber',         // [guess, correct number]\n\tagentGuess:        'agentGuess',        // [guess, correct number]\n\tnumberPress:       'numberPress',       // [number, representations]\n\twaterAdded:        'waterAdded',        // [total amount, added amount]\n\tdisabled:          'disabled',          // [true/false]\n\n\tplantPress:        'plantPress',        // [garden plant]\n\twaterPlant:        'waterPlant',        // [garden plant]\n\tplantUpgrade:      'plantUpgrade',      // [backend data]\n\n\tskippable:         'skippable',         // [TimelineMax object]\n\tconnection:        'connection',        // [status]\n\tconnectionLost:    'connectionLost'\n};\n\n/* The different Phaser states, some are the subgames for scenarios */\nexports.STATE = {\n\tentry:        'Entry',\n\tagentSetup:   'AgentSetup',\n\tgarden:       'Garden',\n\tbeach:\t\t  'Beach',\n\t0:            'Lizard',\n\tlizardGame:   'Lizard',\n\t1:            'Mountain',\n\tmountainGame: 'Mountain',\n\t2:            'Birdhero',\n\tbirdheroGame: 'Birdhero',\n\t3:            'Balloon',\n\tballoonGame:  'Balloon',\n\t4:            'BeeFlight',\n\tsharkGame:\t  'SharkGame',\n\tbeeGame:      'BeeFlight',\n\tscenario:     'Scenario',\n\trandom:       100,         // Not an actual state.\n\trandomGames:  [0, 2, 3, 4] // Not an actual state, it will randomly pick one in the array.\n};\nexports.STATE_KEYS = null; // Used to clear a subgame, saved when subgame is booted.\n\n/* Method for scenario */\nexports.METHOD = {\n\tcount: 0,              // All numbers displayed at the same time\n\tincrementalSteps: 1,   // One number that you increment or decrement, ex: (- 1 +)\n\taddition: 2,           // Start with one number and choose what to add\n\tsubtraction: 3,        // Start with one number and choose what to subtract\n\tadditionSubtraction: 4 // Start with one number and choose what to add or subtract\n};\n\n/* Number representation for scenario */\nexports.NUMBER_REPRESENTATION = {\n\tnone:       0,\n\tdots:       1,\n\tfingers:    2,\n\tstrikes:    3,\n\tobjects:    4,\n\tnumbers:    5,\n\tdice:       6,\n\tmixed:      9,\n\t// Multiple representations will be formed as concatenations, such as:\n\t// fingers + dots = 21\n\t// So if representations go above 10 there will be problems in Backend.js.\n\tyesno:   1000 // Special for yes/no: odd values = yes, even values = no\n};\n\n\nexports.NUMBER_RANGE = {\n\t0: 4, // Range 1-4\n\t1: 9  // Range 1-9\n};\n\n/* The different modes of a subgame */\nexports.MODE = {\n\tplayerDo:   0,\n\tplayerShow: 1,\n\tagentTry:   2,\n\tagentDo:    3,\n\tintro:      10,\n\toutro:      11\n};\n\n// Default button color.\nexports.BUTTON_COLOR = 0xc2a12d;\n\n// Font to use in the game.\nexports.FONT = 'Coming Soon';","/**\n * This is the language variable for the game.\n * All text and speech files for the game should be here.\n * Text strings are in LANG.TEXT.\n * Speech sound files are in LANG.SPEECH.\n * For the agent, use LANG.SPEECH.AGENT.\n *\n * It was developed with switching languages in mind.\n * To do so use function LANG.change.\n * Swedish is the default language and should be used as a\n * template for other languages.\n *\n * NOTE: GLOBAL.FONT specifies which font that is used.\n *\n * *** A NOTE ABOUT AUDIO FILE SIZE ***\n * This project uses web audio, which in turn uses huge memory amounts.\n * This is a problem for our speech on devices with restricted memory.\n * I, Erik, have investigated how to lower this usage:\n * Has effect:\n * 1) Reducing the amount of channels, such as from stereo to mono.\n * 2) Removing unused speech.\n * 3) Never have any unused sound loaded in memory.\n * \n * Has NO effect:\n * 1) Reducing sample rate or bitrate (web audio decodes to 44100 32bit).\n *    However, file size is reduced by this which gives faster loading times.\n * 2) Modifying format (same reason as previous).\n *    However, some formats cannot be played on all devices, so backup is needed.\n * 3) Removing pauses (or at least has a very marginal effect).\n *\n * @global\n */\nvar LANG = {};\n\nmodule.exports = LANG;\n\n/**\n * Change the language.\n * NOTE: A warning is set if text or speech are missing translations.\n * @param {Object} text - The text.\n * @param {Object} speech - The speech markers.\n */\nLANG.change = function (text, speech, player) {\n\tfunction replacer (orig, plus, missing, prefix) {\n\t\tmissing = missing || [];\n\t\tif (!prefix) { prefix = ''; }\n\t\telse { prefix += '/'; }\n\n\t\tfor (var p in orig) {\n\t\t\tif (p === 'AGENT') { continue; } // AGENT is special case\n\n\t\t\tif (!plus.hasOwnProperty(p)) {\n\t\t\t\tmissing.push(prefix + p);\n\t\t\t} else if (typeof orig[p] !== 'string') {\n\t\t\t\treplacer(orig[p], plus[p], missing, prefix + p);\n\t\t\t} else {\n\t\t\t\torig[p] = plus[p];\n\t\t\t}\n\t\t}\n\n\t\treturn missing;\n\t}\n\n\tvar m = replacer(LANG.TEXT, text);\n\tif (m.length > 0) {\n\t\tconsole.warn('TEXT is missing: ' + m);\n\t}\n\n\tm = replacer(LANG.SPEECH, speech);\n\tif (m.length > 0) {\n\t\tconsole.warn('SPEECH is missing: ' + m);\n\t}\n\n\tif (player && player.agent && player.agent.prototype.id) {\n\t\tLANG.setAgent(player.agent.prototype.id);\n\t} else { // Use panda as default agent.\n\t\tLANG.setAgent('panda');\n\t}\n};\n\n/**\n * Set the speech for the agent.\n * @param {Object} id - The id of the agent.\n */\nLANG.setAgent = function (id) {\n\tLANG.SPEECH.AGENT = LANG.SPEECH[id];\n};\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                        Swedish language (default)                         */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\n\nLANG.swedish = {};\nLANG.swedish.text = {\n\t/* General */\n\tok: 'Ok',\n\tdecoding: 'Snart klar...', // When decoding sound files\n\tconnectionLost: 'Ingen anslutning',\n\tconnectionLostMessage: 'Ajdå. Vi tappade anslutningen till servern.',\n\n\t/* Entry state */\n\ttitle: 'Magical Garden',\n\tstart: 'Starta!',\n\tcontinuePlaying: 'Fortsätt',\n\tchangeAgent: 'Byt ut ', // Followed by agent name\n\tcredits: 'Skapat av',\n\tanonymous: 'Anonym',\n\tlogOut: 'Logga ut',\n\n\t/* Credits */\n\tcreditsMade: 'Detta spelet är skapat vid Lunds Universitet',\n\tcreditsDeveloped: 'Idé och utformning',\n\tcreditsProgramming: 'Programmering',\n\tcreditsGraphics: 'Grafik',\n\tcreditsVoices: 'Röster',\n\tcreditsVoicePanda: 'Igis Gulz-Haake',\n\tcreditsVoiceHedgehog: 'Agneta Gulz',\n\tcreditsVoiceMouse: 'Sebastian Gulz-Haake',\n\tcreditsVoiceWoodlouse: 'Igis Gulz-Haake',\n\tcreditsVoiceLizard: 'Igis Gulz-Haake',\n\tcreditsVoiceBumblebee: 'Agneta Gulz',\n\tcreditsVoiceBird: 'Igis Gulz-Haake',\n\tcreditsMusic: 'Musik',\n\tcreditsSfx: 'Ljudeffekter',\n\tcreditsThanks: 'Tack till',\n\n\t/* Garden state */\n\tmaxLevel: 'MAX!',\n\n\t/* Player setup state */\n\tpickFriend: 'Vem vill du bli kompis med?',\n\tconfirmFriend: 'Välj ', // Followed by agent name\n\tchangeColor: 'Byt färg',\n\n\t/* Menu items */\n\tmenu: 'MENY',\n\tresume: 'Fortsätt',\n\tgotoGarden: 'Gå till trädgården',\n\tquit: 'Avsluta spelet',\n\n\t/* Agents and characters */\n\tpandaName: 'Panders',\n\thedgehogName: 'Igis',\n\tmouseName: 'Mille',\n\twoodlouseName: 'Grålle',\n\tlizardName: 'Kamilla',\n\tbumblebeeName: 'Humfrid',\n\tbirdName: 'Fålia'\n};\n\nLANG.swedish.speech = {\n\t/* Agent intro */\n\tagentIntro: {\n\t\tspeech: [\n\t\t\t'audio/agent/swedishIntro.m4a',\n\t\t\t'audio/agent/swedishIntro.ogg',\n\t\t\t'audio/agent/swedishIntro.mp3'\n\t\t],\n\t\tmarkers: {\n\t\t\tpandaHello:          [ 0.0, 1.7],\n\t\t\tpandaFunTogether:    [ 2.8, 2.0],\n\t\t\thedgehogHello:       [ 5.7, 2.4],\n\t\t\thedgehogFunTogether: [ 8.9, 3.0],\n\t\t\tmouseHello:          [12.3, 1.7],\n\t\t\tmouseFunTogether:    [14.4, 1.9]\n\t\t}\n\t},\n\n\t/* Subgames */\n\tbirdhero: {\n\t\tspeech: [\n\t\t\t'audio/subgames/birdhero/swedish.m4a',\n\t\t\t'audio/subgames/birdhero/swedish.ogg',\n\t\t\t'audio/subgames/birdhero/swedish.mp3'\n\t\t],\n\t\tmarkers: {\n\t\t\tthisFloor:     [ 0.2, 1.9],\n\t\t\thelpMeHome:    [ 2.6, 2.0],\n\t\t\tdontLiveHere:  [ 5.9, 1.7],\n\t\t\tnotMyParent:   [ 9.1, 2.3],\n\t\t\thigher:        [13.0, 1.9],\n\t\t\tlower:         [16.3, 1.8],\n\t\t\tthankYou:      [19.7, 1.5],\n\t\t\tblownOut:      [23.2, 7.8],\n\t\t\tcountFeathers: [32.2, 3.3],\n\t\t\tpushButton:    [37.0, 2.9],\n\t\t\tuseMyself:     [41.2, 2.5],\n\t\t\thowMuchHigher: [45.2, 2.0],\n\t\t\thowMuchLower:  [48.3, 2.1],\n\t\t\tthinkItIs:     [51.1, 2.8],\n\t\t\thigherOrLower: [55.6, 2.7]\n\t\t}\n\t},\n\n\tballoongame: {\n\t\tspeech: [\n\t\t\t'audio/subgames/balloongame/swedish.m4a',\n\t\t\t'audio/subgames/balloongame/swedish.ogg',\n\t\t\t'audio/subgames/balloongame/swedish.mp3'\n\t\t],\n\t\tmarkers: {\n\t\t\tyippie1:        [  0.1, 1.3],\n\t\t\tyippie2:        [  2.2, 0.8],\n\t\t\tloveTreasures:  [  4.0, 1.6],\n\t\t\thelpToCave:     [  6.6, 4.4],\n\t\t\tlookAtMap:      [ 12.0, 2.8],\n\t\t\tpresetBalloons: [ 15.7, 3.4],\n\t\t\tguessBalloons:  [ 20.4, 4.5],\n\t\t\twhatDoYouThink: [ 25.4, 0.6],\n\t\t\tcanYouDrag:     [ 27.1, 1.5],\n\t\t\tfloor1:         [ 29.6, 2.6],\n\t\t\tfloor2:         [ 33.1, 2.1],\n\t\t\tfloor3:         [ 36.3, 2.2],\n\t\t\tfloor4:         [ 39.7, 2.3],\n\t\t\tcanYouDragRight:[ 43.3, 2.2],\n\t\t\tbuttonSubtract: [ 46.9, 4.5],\n\t\t\tbuttonAddSub:   [ 53.0, 5.2],\n\t\t\tsameAsMap:      [ 59.9, 3.0],\n\t\t\twhatButton:     [ 64.2, 2.4],\n\t\t\tpushButton:     [ 67.8, 5.7],\n\t\t\tpushAnchor:     [ 74.8, 1.9],\n\t\t\ttreasure1:      [ 78.0, 1.6],\n\t\t\ttreasure2:      [ 80.2, 1.2],\n\t\t\ttreasureBoot:   [ 82.1, 2.9],\n\t\t\tnewTreasure:    [ 85.9, 0.7],\n\t\t\thelpMeGetThere: [ 87.7, 1.3],\n\t\t\twrong1:         [ 89.7, 1.4],\n\t\t\twrong2:         [ 92.0, 1.3],\n\t\t\tlower:          [ 94.2, 1.7],\n\t\t\thigher:         [ 96.9, 1.4],\n\t\t\tfullSack:       [ 99.4, 4.6],\n\t\t\tthankYou:       [104.7, 3.6]\n\t\t}\n\t},\n\n\tsharkgame:{\n\t\tspeech: [\n\t\t\t'audio/subgames/sharkgame/swedish.mp3'\n\t\t],\n\t\tmarkers:{\n\t\t\tintro:\t\t[ 0.0, 12.5],\n\t\t\tshark:\t\t[ 12.5, 5.0],\n\t\t\tintro2:\t\t[ 23.0, 21.5],\n\t\t\tintro3:\t\t[ 45.0, 7.0],\n\t\t\twrong:\t\t[ 53.0, 9.0],\n\t\t\tcorrect:\t[ 62.5, 9.0],\n\t\t\tagentIntro:\t[ 71.4, 8.0],\n\t\t\twatch:\t\t[ 80.0, 4.0],\n\t\t\tagentTry:\t[ 85.0, 5.0],\n\t\t\ttry:\t\t[ 91.0, 5.0],\n\t\t\tguess:\t\t[ 97.0, 4.0],\n\t\t\twrongGuess:\t[ 102.0, 4.0],\n\t\t\twin:\t\t[ 106.0, 11.0]\n\t\t}\n\t},\n\n\tbeeflight: {\n\t\tspeech: [\n\t\t\t'audio/subgames/beeflight/swedish.m4a',\n\t\t\t'audio/subgames/beeflight/swedish.ogg',\n\t\t\t'audio/subgames/beeflight/swedish.mp3'\n\t\t],\n\t\tmarkers: {\n\t\t\tslurp:        [  0.0, 2.0],\n\t\t\tokay:         [  2.5, 0.8],\n\t\t\tletsGo:       [  3.5, 1.2],\n\t\t\torder1:       [  5.5, 1.0],\n\t\t\torder2:       [  7.1, 1.1],\n\t\t\torder3:       [  8.7, 1.3],\n\t\t\torder4:       [ 10.8, 1.2],\n\t\t\torder5:       [ 12.9, 1.0],\n\t\t\torder6:       [ 15.1, 1.0],\n\t\t\torder7:       [ 17.2, 1.0],\n\t\t\torder8:       [ 18.9, 1.5],\n\t\t\torder9:       [ 21.1, 1.6],\n\t\t\tflower:       [ 23.9, 1.3],\n\t\t\tnumber1:      [ 25.9, 0.9],\n\t\t\tnumber2:      [ 27.1, 0.9],\n\t\t\tnumber3:      [ 28.7, 1.0],\n\t\t\tnumber4:      [ 30.1, 1.0],\n\t\t\tnumber5:      [ 31.6, 0.8],\n\t\t\tnumber6:      [ 32.9, 0.6],\n\t\t\tnumber7:      [ 34.1, 0.8],\n\t\t\tnumber8:      [ 35.2, 1.1],\n\t\t\tnumber9:      [ 36.7, 1.2],\n\t\t\tone:          [ 38.6, 0.8],\n\t\t\tforward:      [ 40.3, 0.8],\n\t\t\tbackward:     [ 42.2, 0.9],\n\t\t\tnoNectar:     [ 44.0, 5.4],\n\t\t\ttooFar:       [ 50.4, 2.4],\n\t\t\ttooNear:      [ 54.5, 4.2],\n\t\t\twasBefore:    [ 59.9, 3.6],\n\t\t\tnectar1:      [ 64.6, 1.8],\n\t\t\tnectar2:      [ 66.4, 2.0],\n\t\t\tgoingBack:    [ 69.5, 6.3],\n\t\t\tgetMore:      [ 76.5, 2.0],\n\t\t\tbadSight:     [ 79.8, 4.1],\n\t\t\thowToFind:    [ 87.1, 3.3],\n\t\t\tshowTheWay:   [ 90.8, 6.3],\n\t\t\tdecideHowFar: [ 97.7, 3.2],\n\t\t\tpushNumber:   [102.3, 4.5],\n\t\t\twrongPlace:   [107.5, 5.6],\n\t\t\tnotFarEnough: [114.4, 3.4],\n\t\t\thowMuchMore:  [118.5, 2.3],\n\t\t\tgoneTooFar:   [122.1, 3.5],\n\t\t\tmustGoBack:   [126.1, 4.7],\n\t\t\tthinkItIs:    [132.3, 3.5],\n\t\t\tisItCorrect:  [137.1, 1.2],\n\t\t\tuseButtons:   [139.6, 7.2],\n\t\t\tgettingHelp:  [148.3, 6.7],\n\t\t\tyouHelpLater: [156.2, 5.6],\n\t\t\tthatsAll:     [164.3, 5.9],\n\t\t\tdancing:      [171.2, 5.3]\n\t\t}\n\t},\n\n\tlizard: {\n\t\tspeech: [\n\t\t\t'audio/subgames/lizard/swedish.m4a',\n\t\t\t'audio/subgames/lizard/swedish.ogg',\n\t\t\t'audio/subgames/lizard/swedish.mp3'\n\t\t],\n\t\tmarkers: {\n\t\t\targh:          [  0.5, 1.5],\n\t\t\tarrg:          [  3.3, 0.9],\n\t\t\tmiss:          [  5.3, 1.8],\n\t\t\topenMiss:      [  8.7, 1.5],\n\t\t\ttreeTaste:     [ 11.7, 3.4],\n\t\t\thigher:        [ 16.6, 2.3],\n\t\t\tlower:         [ 19.7, 2.9],\n\t\t\ttooHigh:       [ 24.0, 6.5],\n\t\t\ttooLow:        [ 32.2, 4.4],\n\t\t\tyummy:         [ 38.2, 2.5],\n\t\t\tthankYou:      [ 41.9, 2.4],\n\t\t\talmostFull:    [ 46.0, 2.4],\n\t\t\tsleepyHungry:  [ 49.8, 6.5],\n\t\t\ttakeThatAnt:   [ 57.6, 4.5],\n\t\t\thelpToAim:     [ 63.5, 2.1],\n\t\t\thowHigh:       [ 67.5, 3.3],\n\t\t\tchooseButton:  [ 72.5, 3.6],\n\t\t\timStuck:       [ 77.4, 4.0],\n\t\t\topenHowHigher: [ 82.6, 4.1],\n\t\t\topenHowLower:  [ 88.0, 6.8],\n\t\t\tthinkItIs:     [ 96.2, 2.6],\n\t\t\thigherOrLower: [100.1, 5.3],\n\t\t\thelpingMeAim:  [106.9, 6.3],\n\t\t\tfullAndSleepy: [114.5, 7.7],\n\t\t\tbyeAndThanks:  [122.6, 2.5],\n\t\t\topenHigher:    [126.1, 3.2],\n\t\t\topenLower:     [130.2, 3.0]\n\t\t}\n\t},\n\n\t/* Agents */\n\tpanda: {\n\t\tspeech: [\n\t\t\t'audio/agent/panda/swedish.m4a',\n\t\t\t'audio/agent/panda/swedish.ogg',\n\t\t\t'audio/agent/panda/swedish.mp3'\n\t\t],\n\t\tmarkers: {\n\t\t\tok1:              [  0.1, 0.7],\n\t\t\tok2:              [  1.6, 0.4],\n\t\t\thmm:              [  3.0, 1.0],\n\t\t\tisThisRight:      [  5.1, 1.3],\n\t\t\titItThisOne:      [  7.5, 1.1],\n\t\t\thasToBeThis:      [  9.4, 1.6],\n\t\t\twrongShow:        [ 12.1, 3.3],\n\t\t\twasCorrect:       [ 16.3, 1.6],\n\t\t\ttryAgain:         [ 19.0, 2.2],\n\t\t\twrong1:           [ 22.6, 1.4],\n\t\t\twrong2:           [ 27.6, 1.5],\n\t\t\thigher:           [ 25.0, 1.4],\n\t\t\tmore:             [155.9, 1.1],\n\t\t\tlower:            [ 30.0, 2.1],\n\t\t\tfewer:            [153.3, 1.5],\n\t\t\tmyTurn1:          [ 33.0, 2.2],\n\t\t\tmyTurn2:          [ 36.1, 1.3],\n\t\t\twillYouHelpMe:    [ 38.5, 0.7],\n\t\t\tinstructionGreen: [ 39.9, 3.0],\n\t\t\tinstructionRed:   [ 43.7, 3.1],\n\t\t\tletsGo:           [105.8, 0.8],\n\t\t\t// Agent setup\n\t\t\thello:            [147.5, 1.7], // same as in intro speech file\n\t\t\tfunTogether:      [150.3, 1.9], // same as in intro speech file\n\t\t\t// Garden\n\t\t\tgardenIntro:      [ 47.9, 6.6],\n\t\t\tgardenMyCan:      [ 55.7, 6.5],\n\t\t\tgardenSign:       [ 63.2, 2.0],\n\t\t\tgardenHaveWater:  [ 66.1, 4.7],\n\t\t\tgardenPushField:  [ 71.9, 2.4],\n\t\t\tgardenGrowing:    [ 75.2, 1.7],\n\t\t\tgardenFullGrown:  [ 78.2, 3.8],\n\t\t\tgardenWaterLeft:  [ 83.3, 3.8],\n\t\t\tgardenEmptyCan:   [ 88.2, 4.3],\n\t\t\tgardenWhereNow:   [ 93.6, 2.2],\n\t\t\tgardenWaterFirst: [ 96.7, 7.9],\n\t\t\tgardenYoureBack:  [107.7, 2.0],\n\t\t\t// Birdhero\n\t\t\tbirdheroIntro:    [140.1, 6.6],\n\t\t\t// Lizard\n\t\t\tlizardIntro1:     [117.4, 4.5],\n\t\t\tlizardIntro2:     [123.0, 4.0],\n\t\t\t// Bee\n\t\t\tbeeIntro1:        [128.1, 2.8],\n\t\t\tbeeIntro2:        [132.0, 2.8],\n\t\t\tbeeIntro3:        [135.7, 3.4],\n\t\t\t// Balloon\n\t\t\tballoonIntro:     [110.4, 6.2]\n\t\t}\n\t},\n\n\thedgehog: {\n\t\tspeech: [\n\t\t\t'audio/agent/hedgehog/swedish.m4a',\n\t\t\t'audio/agent/hedgehog/swedish.ogg',\n\t\t\t'audio/agent/hedgehog/swedish.mp3'\n\t\t],\n\t\tmarkers: {\n\t\t\tok1:              [  0.0, 0.6],\n\t\t\tok2:              [  1.6, 0.6],\n\t\t\thmm:              [  3.4, 1.0],\n\t\t\tisThisRight:      [  5.5, 1.5],\n\t\t\titItThisOne:      [  8.1, 1.0],\n\t\t\thasToBeThis:      [ 10.0, 2.1],\n\t\t\twrongShow:        [ 13.1, 3.8],\n\t\t\twasCorrect:       [ 17.9, 1.9],\n\t\t\ttryAgain:         [ 20.7, 2.4],\n\t\t\twrong1:           [ 23.7, 1.2],\n\t\t\twrong2:           [ 31.7, 1.6],\n\t\t\thigher:           [ 25.8, 2.7],\n\t\t\tmore:             [ 29.3, 1.6],\n\t\t\tlower:            [ 34.2, 3.0],\n\t\t\tfewer:            [ 38.0, 1.9],\n\t\t\tmyTurn1:          [ 41.0, 3.1],\n\t\t\tmyTurn2:          [ 45.9, 1.6],\n\t\t\twillYouHelpMe:    [ 48.6, 1.1],\n\t\t\tinstructionGreen: [ 51.0, 4.2],\n\t\t\tinstructionRed:   [ 56.0, 4.4],\n\t\t\tletsGo:           [ 69.0, 0.9],\n\t\t\t// Agent setup\n\t\t\thello:            [ 61.5, 2.3], // same as in intro speech file\n\t\t\tfunTogether:      [ 65.1, 2.9], // same as in intro speech file\n\t\t\t// Garden\n\t\t\tgardenIntro:      [ 70.9, 9.5],\n\t\t\tgardenMyCan:      [ 81.8, 7.5],\n\t\t\tgardenSign:       [ 90.7, 2.4],\n\t\t\tgardenHaveWater:  [ 94.7, 6.0],\n\t\t\tgardenPushField:  [102.1, 3.1],\n\t\t\tgardenGrowing:    [106.3, 1.5],\n\t\t\tgardenFullGrown:  [109.1, 4.7],\n\t\t\tgardenWaterLeft:  [115.1, 4.0],\n\t\t\tgardenEmptyCan:   [120.4, 5.0],\n\t\t\tgardenWhereNow:   [126.5, 2.2],\n\t\t\tgardenWaterFirst: [129.7,10.3],\n\t\t\tgardenYoureBack:  [141.2, 2.1],\n\t\t\t// Birdhero\n\t\t\tbirdheroIntro:    [145.2,11.5],\n\t\t\t// Lizard\n\t\t\tlizardIntro1:     [158.2, 5.4],\n\t\t\tlizardIntro2:     [164.7, 5.3],\n\t\t\t// Bee\n\t\t\tbeeIntro1:        [172.0, 4.0],\n\t\t\tbeeIntro2:        [177.0, 3.2],\n\t\t\tbeeIntro3:        [181.4, 4.3],\n\t\t\t// Balloon\n\t\t\tballoonIntro:     [187.7, 5.6]\n\t\t}\n\t},\n\n\tmouse: {\n\t\tspeech: [\n\t\t\t'audio/agent/mouse/swedish.m4a',\n\t\t\t'audio/agent/mouse/swedish.ogg',\n\t\t\t'audio/agent/mouse/swedish.mp3'\n\t\t],\n\t\tmarkers: {\n\t\t\tok1:              [  0.0, 0.5],\n\t\t\tok2:              [  1.5, 0.5],\n\t\t\thmm:              [  3.1, 1.6],\n\t\t\tisThisRight:      [  5.9, 1.2],\n\t\t\titItThisOne:      [  8.5, 0.9],\n\t\t\thasToBeThis:      [ 10.6, 1.2],\n\t\t\twrongShow:        [ 13.3, 3.4],\n\t\t\twasCorrect:       [ 17.7, 1.6],\n\t\t\ttryAgain:         [ 20.6, 2.1],\n\t\t\twrong1:           [ 24.2, 1.2],\n\t\t\twrong2:           [ 26.5, 1.4],\n\t\t\thigher:           [ 28.9, 1.4],\n\t\t\tmore:             [ 31.1, 1.3],\n\t\t\tlower:            [ 34.0, 2.2],\n\t\t\tfewer:            [ 37.2, 1.3],\n\t\t\tmyTurn1:          [ 39.7, 2.1],\n\t\t\tmyTurn2:          [ 42.9, 1.0],\n\t\t\twillYouHelpMe:    [ 45.3, 0.9],\n\t\t\tinstructionGreen: [ 47.0, 3.1],\n\t\t\tinstructionRed:   [ 51.3, 3.0],\n\t\t\tletsGo:           [ 60.2, 1.0],\n\t\t\t// Agent setup\n\t\t\thello:            [ 55.3, 1.6], // same as in intro speech file\n\t\t\tfunTogether:      [ 57.4, 2.0], // same as in intro speech file\n\t\t\t// Garden\n\t\t\tgardenIntro:      [ 62.2, 6.0],\n\t\t\tgardenMyCan:      [ 69.0, 3.1],\n\t\t\tgardenSign:       [ 73.3, 1.6],\n\t\t\tgardenHaveWater:  [ 76.1, 3.8],\n\t\t\tgardenPushField:  [ 81.2, 2.0],\n\t\t\tgardenGrowing:    [ 84.2, 1.2],\n\t\t\tgardenFullGrown:  [ 86.6, 3.2],\n\t\t\tgardenWaterLeft:  [ 91.0, 3.2],\n\t\t\tgardenEmptyCan:   [ 95.2, 3.8],\n\t\t\tgardenWhereNow:   [ 99.7, 1.6],\n\t\t\tgardenWaterFirst: [102.4, 7.5],\n\t\t\tgardenYoureBack:  [111.0, 1.5],\n\t\t\t// Birdhero\n\t\t\tbirdheroIntro:    [113.6, 7.9],\n\t\t\t// Lizard\n\t\t\tlizardIntro1:     [122.5, 4.4],\n\t\t\tlizardIntro2:     [128.2, 3.9],\n\t\t\t// Bee\n\t\t\tbeeIntro1:        [133.0, 3.1],\n\t\t\tbeeIntro2:        [137.2, 2.6],\n\t\t\tbeeIntro3:        [140.7, 3.0],\n\t\t\t// Balloon\n\t\t\tballoonIntro:     [144.9, 7.5]\n\t\t}\n\t}\n};\n\nLANG.TEXT = LANG.swedish.text;\nLANG.SPEECH = LANG.swedish.speech;\nLANG.SPEECH.AGENT = LANG.SPEECH.panda;","var backend = require('./backend.js');\nvar GLOBAL = require('./global.js');\nvar EventSystem = require('./pubsub.js');\n\n/**\n * Handles the logging of the game and sending to the backend.\n */\n(function () {\n\tvar session;\n\tvar trial = {};\n\tvar wasCorrect = true;\n\tvar time = 0;\n\n\t/**\n\t * Reset the current values of a session.\n\t */\n\tfunction reset () {\n\t\tsession = { modes: [], tries: 0, corrects: 0, finished: false, water: 0 };\n\t\ttime = Date.now();\n\t}\n\n\t/**\n\t * Log when a subgame has started.\n\t * @param {string} type - The name of the subgame.\n\t * @param {number} token - The token recieved from backend (session id).\n\t */\n\tfunction subgameStarted (type, token) {\n\t\treset();\n\n\t\tsession.type = type;\n\t\tsession.token = token;\n\t}\n\n\t/**\n\t * A subgame of type number game has started.\n\t * @param {number} method - Method used for subgame.\n\t * @param {number} maxAmount - The max number used in the subgame.\n\t * @param {number} representation - The representation of the numbers.\n\t */\n\tfunction numbergameStarted (method, maxAmount, representation) {\n\t\tsession.method = method;\n\t\tsession.maxAmount = maxAmount;\n\t\tsession.representation = representation;\n\t}\n\n\t/**\n\t * Game state has changed. Possibly from a subgame to garden.\n\t */\n\tfunction stateChange () {\n\t\t// If we were in a subgame, then tries should be set.\n\t\tif (session.tries > 0) {\n\t\t\tbackend.putSession(session);\n\t\t}\n\n\t\treset();\n\t}\n\n\t/**\n\t * The mode in a subgame has changed.\n\t * @param {number} mode - The new mode.\n\t */\n\tfunction modeChange (mode) {\n\t\tif (mode === GLOBAL.MODE.outro) {\n\t\t\t// If we get the outro mode, then we know the player completed the subgame.\n\t\t\tsession.finished = true;\n\n\t\t} else if (typeof mode !== 'undefined' && mode !== GLOBAL.MODE.intro) {\n\t\t\t// Create new mode item.\n\t\t\tsession.modes.push({ type: mode, results: [] });\n\t\t}\n\t}\n\n\t/**\n\t * A trial has been executed (someone has tried to answer a problem).\n\t * @param {number} guess - The players guess.\n\t * @param {number} correct - The actual correct value.\n\t * @param {number} pushed - The value that was pushed (used in mode addition, subtraction and add/sub).\n\t * @param {number} start - The value the trial started at (used in mode addition, subtraction and add/sub).\n\t */\n\tfunction trialData (guess, correct, pushed, start) {\n\t\tvar modeResults = session.modes[session.modes.length-1].results;\n\t\tif (modeResults.length <= 0 || wasCorrect) {\n\t\t\tmodeResults.push({ target: correct, trials: [] });\n\t\t}\n\n\t\ttrial.try = guess;\n\t\tif (session.method >= GLOBAL.METHOD.addition) {\n\t\t\ttrial.chosenValue = pushed;\n\t\t\ttrial.startValue = start;\n\t\t}\n\t\ttrial.time = Date.now() - time;\n\n\t\t// This is where trial data is saved.\n\t\t// It might however have data from other functions than this.\n\t\tmodeResults[modeResults.length-1].trials.push(trial);\n\n\t\tsession.tries++;\n\t\tif (guess === correct) {\n\t\t\tsession.corrects++;\n\t\t\twasCorrect = true;\n\t\t} else {\n\t\t\twasCorrect = false;\n\t\t}\n\n\t\ttrial = {}; // Reset trial\n\t}\n\n\t/**\n\t * An agent has guessed something.\n\t * @param {number} guess - The guess.\n\t */\n\tfunction agentGuess (guess) {\n\t\ttrial.agent = guess;\n\t}\n\n\t/**\n\t * A number button has been pressed.\n\t * Currently this only checks yesno pushes, others are logged in trialData.\n\t * @param {number} value - The guess.\n\t * @param {number} representations - The representations of the button.\n\t */\n\tfunction numberPress (value, representations) {\n\t\tif (representations[0] === GLOBAL.NUMBER_REPRESENTATION.yesno) {\n\t\t\t// The button was correcting an agent.\n\t\t\ttrial.corrected = (value % 2) === 0; // yes = 1, no = 0\n\t\t}\n\t}\n\n\t/**\n\t * Add water to the session.\n\t */\n\tfunction water () {\n\t\tsession.water++;\n\t}\n\n\t/**\n\t * Set the start time for a session.\n\t */\n\t function startTime () {\n\t\ttime = Date.now();\n\t}\n\n\n\treset();\n\n\n\t/* General */\n\tEventSystem.subscribe(GLOBAL.EVENT.stateShutDown,\n\t\tfunction (/*state*/) { stateChange(); }, true);\n\n\t/* Session related */\n\tEventSystem.subscribe(GLOBAL.EVENT.subgameStarted,\n\t\tfunction (type, token) { subgameStarted(type, token); }, true);\n\tEventSystem.subscribe(GLOBAL.EVENT.numbergameStarted,\n\t\tfunction (method, maxAmount, representation) { numbergameStarted(method, maxAmount, representation); }, true);\n\tEventSystem.subscribe(GLOBAL.EVENT.modeChange,\n\t\tfunction (mode) { modeChange(mode); }, true);\n\tEventSystem.subscribe(GLOBAL.EVENT.tryNumber,\n\t\tfunction (guess, correct, chosen, start) { trialData(guess, correct, chosen, start); }, true);\n\tEventSystem.subscribe(GLOBAL.EVENT.agentGuess,\n\t\tfunction (guess/*, correct*/) { agentGuess(guess); }, true);\n\tEventSystem.subscribe(GLOBAL.EVENT.waterAdded,\n\t\tfunction (/*current, diff*/) { water(); }, true);\n\tEventSystem.subscribe(GLOBAL.EVENT.numberPress,\n\t\tfunction (value, representations) { numberPress(value, representations); }, true);\n\tEventSystem.subscribe(GLOBAL.EVENT.disabled,\n\t\tfunction (value) { if (!value) { startTime(); } }, true);\n})();","var DraggableObject = require('./DraggableObject');\r\n\r\nmodule.exports = Cookies;\r\n\r\nCookies.prototype = Object.create(DraggableObject.prototype);\r\nCookies.prototype.constructor = Cookies;\r\n\r\n/**\r\n * A draggable cookie piece in the shark game\r\n * @param {Object} game - A reference to the Phaser game.\r\n * @param {number} number - The number for the button, is overwritten in objectPanel.\r\n * @param {Object} options - A list of options (in addition to GeneralButton):\r\n *        {number} min: The minimum value of the button.\r\n *        {number} max: The maximum value of the button.\r\n *        {number} size: the small side of the button (the other depend on representation amount) (default 75).\r\n *        {string} idName: the name of current object type\r\n *        {number} id: id number for the current object\r\n *        {boolean} vertical: stretch button vertically if many representations, otherwise horisontally (default true).\r\n *        {string} spriteKey: Used for object representation only. The key to the sprite.\r\n *        {string} spriteFrame: Used for object representation only. The framename in the sprite.\r\n NOTE: Used like this: spriteFrame + this.number\r\n * @returns {Object} Itself.\r\n */\r\n\r\nfunction Cookies (game, number, options) {\r\n\r\n\r\n\r\n    this.background = options.background.slice(0, 6) + number + options.background.slice(7);\r\n    this.spriteKey = options.spriteKey;\r\n    this.spriteFrame = options.spriteFrame;\r\n\r\n    if (typeof this.background === 'undefined') {\r\n        this.background = options.background.slice(0, 6) + number + options.background.slice(7);\r\n\r\n    }\r\n    options.background = this.background;\r\n    options.id += 1;\r\n    this.id = options.id;\r\n    this.idName = options.idName;\r\n   DraggableObject.call(this, game, options); // Parent constructor.\r\n\r\n   this.vertical = options.vertical;\r\n   if (typeof this.vertical === 'undefined' || this.vertical === null) {\r\n        this.vertical = true;\r\n   }\r\n\r\n    this.setDirection(!this.vertical);\r\n\r\n    this.min = options.min || null;\r\n    this.max = options.max || null;\r\n    this._number = 0;\r\n    this.number = number;\r\n    this._clicker = options.onClick;\r\n\r\n\r\n    this.onClick = function () {\r\n        if (this._clicker) {\r\n            this._clicker(this.number);\r\n\r\n        }\r\n    };\r\n\r\n    return this;\r\n\r\n}\r\n\r\nObject.defineProperty(Cookies.prototype, 'number', {\r\n    get: function () {\r\n        return this._number;\r\n    },\r\n    set: function (value) {\r\n        /* Check boundaries */\r\n        if (this.min && value < this.min) { value = this.min; }\r\n        if (this.max && value > this.max) { value = this.max; }\r\n        if (value === this._number) { return; }\r\n\r\n        this._number = value;\r\n\r\n        this.updateGraphics(value);\r\n    }\r\n});\r\n\r\nCookies.prototype.updateGraphics = function (num) {\r\n    /* Remove old graphics. */\r\n    if (this.children.length > 1) {\r\n        this.removeBetween(1, this.children.length-1, true);\r\n    }\r\n\r\n    /*Setting the sprite frame to the image correlating to the cookies number, 8 is\r\n    the difference between the number and its index in the json file*/\r\n    if(this.idName !== 'finalDragObject') {\r\n        this.bg.frame = num + 8;\r\n    }\r\n\r\n    this.setSize();\r\n    this.reset();\r\n};\r\n\r\n\r\nCookies.prototype.calcOffset = function (offset) {\r\n    var t = {\r\n        x: 0,\r\n        y: 0,\r\n        o: this.size/offset\r\n    };\r\n\r\n    if (this.background) { // Probably square looking button.\r\n        t.x = t.o*2;\r\n        t.y = t.o*2;\r\n    } else if (this.direction) { /* Up/Down */\r\n        t.x = t.o*1.8;\r\n        t.y = t.o*(this._number >= 0 ? 3.3 : 1);\r\n    } else { /* Left/Right */\r\n        t.x = t.o*(this._number >= 0 ? 1 : 3.3);\r\n        t.y = t.o*2;\r\n    }\r\n\r\n    t.o *= 4;\r\n    return t;\r\n};\r\n\r\n\r\nCookies.prototype.setSize = function (size) {\r\n    DraggableObject.prototype.setSize.call(this, size || this.size);\r\n\r\n    return this;\r\n};\r\n\r\nCookies.prototype.setDirection = function (val) {\r\n    this.direction = val;\r\n    if (val) {\r\n        this.bg.rotation = -Math.PI/2;\r\n        this.bg.y += this.bg.width;\r\n        this.bg.adjusted = this.bg.width;\r\n    } else {\r\n        this.bg.rotation = 0;\r\n        this.bg.y -= this.bg.adjusted || 0;\r\n    }\r\n\r\n    if (this.number) {\r\n        this.updateGraphics(this.number);\r\n    }\r\n\r\n    return this;\r\n};","module.exports = Counter;\n\n/** \n * An easy-to-use counter with a max value.\n * NOTE: This is not a graphical counter, only a programmatic.\n *\n * @constructor\n * @param {integer} max - The max value for the counter.\n * @param {boolean} loop - If the counter should loop back to 0 when reaching max value (default is false).\n * @param {integer} start - The start value the first loop (default is 0).\n * @return {Counter} This object.\n */\nfunction Counter (max, loop, start) {\n\t/**\n\t * @property {boolean} _loop - If the counter should loop.\n\t * @default false\n\t * @private\n\t */\n\tthis._loop = loop || false;\n\n\t/**\n\t * @property {number} _value - The value of the counter.\n\t * @default 0\n\t * @private\n\t */\n\tthis._value = start || 0;\n\n\n\t/**\n\t * @property {number} max - The max value of the counter.\n\t */\n\tthis.max = max;\n\n\t/**\n\t * @property {function} onAdd - A function to run when adding water.\n\t */\n\tthis.onAdd = null;\n\n\t/**\n\t * @property {function} onMax - A function to run when water is at max.\n\t */\n\tthis.onMax = null;\n\n\treturn this;\n}\n\n/**\n * @property {number} left - Value left until max.\n * @readonly\n */\nObject.defineProperty(Counter.prototype, 'left', {\n\tget: function() {\n\t\treturn this.max - this._value;\n\t}\n});\n\n/**\n * @property {number} value - The value of the counter.\n *                            This will fire onAdd and onMax when applicable.\n */\nObject.defineProperty(Counter.prototype, 'value', {\n\tget: function() {\n\t\treturn this._value;\n\t},\n\tset: function(value) {\n\t\tvar diff = value - this._value;\n\t\tthis._value = value;\n\n\t\tif (this.onAdd) { this.onAdd(this._value, diff, this.left); }\n\n\t\tif (this._value >= this.max) {\n\t\t\tif (this._loop) { this._value = 0; }\n\t\t\tif (this.onMax) { this.onMax(this._value); }\n\t\t}\n\t}\n});\n\n/** Calls the onAdd function with current values. */\nCounter.prototype.update = function () {\n\tif (this.onAdd) { this.onAdd(this._value, 0, this.left); }\n};","module.exports = Cover;\n\nCover.prototype = Object.create(Phaser.Sprite.prototype);\nCover.prototype.constructor = Cover;\n\n/**\n * A cover over the entire game. Traps all input events.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} color - The color of the cover (default '#000000');\n * @param {number} alpha - The alpha of the cover (default 1);\n * @return {Object} Itself.\n */\nfunction Cover (game, color, alpha) {\n\tvar bmd = game.add.bitmapData(game.world.width, game.world.height);\n\tbmd.ctx.fillStyle = color || '#000000';\n\tbmd.ctx.fillRect(0, 0, game.world.width, game.world.height);\n\n\tPhaser.Sprite.call(this, game, 0, 0, bmd); // Parent constructor.\n\tthis.alpha = (typeof alpha !== 'undefined') ? alpha : 1;\n\tthis.inputEnabled = true;\n\n\treturn this;\n}","var GLOBAL = require('../global.js');\r\n\r\nmodule.exports = DraggableObject;\r\n\r\nDraggableObject.prototype = Object.create(Phaser.Group.prototype);\r\nDraggableObject.prototype.constructor = DraggableObject;\r\nDraggableObject.prototype.buttonColor = GLOBAL.BUTTON_COLOR;\r\n\r\n/**\r\n * Super class for all draggable objects\r\n * @param {Object} game - A reference to the Phaser game.\r\n * @param {Object} options - A list of options:\r\n *        {number} x: the x position (default 0).\r\n *        {number} y: the y position (default 0).\r\n *        {number} size: the side of the button (default 75).\r\n *        {number} startPosX: the x position defined in the subgame\r\n *        {number} startPosY: the y position defined in the subgame\r\n *        {string} idName: the name of current object type\r\n *        {number} id: id number for the current object\r\n *        {string} background: the frame of the background (default 'button').\r\n NOTE: Needs to be in the 'objects' atlas.\r\n *        {number} color: the color of the button (default 0xb2911d).\r\n *                        NOTE: You can also set the prototype property buttonColor.\r\n *        {number} colorPressed: the color when the button is pressed (default darker color).\r\n *        {function} onClick: a function to run when a button is clicked.\r\n *        {boolean} disabled: true if the button should be disabled (default false).\r\n *        {boolean} keepDown: true if the button should not auto raise when clicked (default false).\r\n * @return {Object} Itself.\r\n */\r\n\r\nfunction DraggableObject (game, options) {\r\n    Phaser.Group.call(this, game, null);\r\n    options = options || {};\r\n\r\n    this.x = options.x || 0;\r\n    this.y = options.y || 0;\r\n    this.startPosX = options.startPosX;\r\n    this.startPosY = options.startPosY;\r\n    this.color = options.color || this.buttonColor;\r\n    this.try = 0;\r\n    this.idName = options.idName;\r\n    if (options.colorPressed) {\r\n        this.colorPressed = options.colorPressed;\r\n    } else {\r\n        var col = Phaser.Color.getRGB(this.color);\r\n        col.red -= col.red < 40 ? col.red : 40;\r\n        col.green -= col.green < 40 ? col.green : 40;\r\n        col.blue -= col.blue < 40 ? col.blue : 40;\r\n        this.colorPressed = Phaser.Color.getColor(col.red, col.green, col.blue);\r\n    }\r\n\r\n    this.onClick = options.onClick;\r\n    this.disabled = options.disabled || false;\r\n    this.keepDown = options.keepDown || false;\r\n    this.background = options.background;\r\n\r\n    var background = options.background;\r\n    if (typeof background === 'undefined') {\r\n        background = 'button';\r\n    }\r\n\r\n    this.bg = this.create(0, 0, (background === null ? null : 'cookie'), background);\r\n\r\n    this.bg.inputEnabled = true;\r\n    this.bg.input.enableDrag(true,true);\r\n    this.id = options.id;\r\n    this.dropPlaceX = options.dropPlaceX;\r\n    this.dropPlaceY = options.dropPlaceY;\r\n    this.bg.events.onDragStop.add(stopDrag,this,options);\r\n\r\n    //sets the object to the down state when clicked on\r\n    this.bg.events.onInputDown.add(function () {\r\n\r\n        if (this.disabled || this.bg.tint === this.colorPressed) {\r\n            return;\r\n        }\r\n\r\n        this.bg.tint = this.colorPressed;\r\n\r\n    }, this);\r\n\r\n    this.reset();\r\n    this.setSize(options.size || 75);\r\n    return this;\r\n}\r\n\r\n//Function triggered when dropping an object\r\nfunction stopDrag(options){\r\n    var x = this.game.input.x;\r\n    var y = this.game.input.y;\r\n\r\n    x = x-156; //conversion from input coordinate system to the games\r\n\r\n    if (this.idName !== 'finalDragObject') {\r\n        //Drop placement for the dragObjects, needed because finalDragObjects drop area is bigger\r\n        //To Do: get the coordinates and size from the gol object directly\r\n        if(x > this.dropPlaceX -10 && x < this.dropPlaceX+ 80 && y > this.dropPlaceY -10 && y < this.dropPlaceY + 80) {\r\n                if (this.onClick) {\r\n                    this.onClick();\r\n                }\r\n\r\n                //Placement algorithm for the visual feedback\r\n                //If try is less than 0 place on top of the goal, if its over 0 place to the left of the goal\r\n                //To do: get 113 from the white space calculation in objectPanel the variable fullSize\r\n                /*If this is moved to a seperate function you could be able to use it in the agentTry mode instead\r\n                  of the visualAid sprite to place one of the cookies on its visual feedback position*/\r\n                if ( DraggableObject.try < 0) {\r\n                    options.x = this.dropPlaceX - (this.startPosX+ ((this.id-1) * 113));\r\n                    options.y = this.dropPlaceY - this.startPosY;\r\n                }\r\n                else if(DraggableObject.try > 0){\r\n                    options.x = this.dropPlaceX - ((this.startPosX+ ((this.id-1) * 113))+75);\r\n                    options.y = this.dropPlaceY - this.startPosY;\r\n                }\r\n                else{\r\n                    options.x = 1;\r\n                    options.y = 1;\r\n                }\r\n\r\n        }\r\n        else{\r\n            options.x = 1;\r\n            options.y = 1;\r\n        }\r\n    }\r\n    else{\r\n        if(x > this.dropPlaceX -30 && x < this.dropPlaceX+ 200 && y > this.dropPlaceY -10 && y < this.dropPlaceY + 200) {\r\n            if (this.onClick) {\r\n                this.onClick();\r\n            }\r\n        }\r\n\r\n        options.x = 1;\r\n        options.y = 1;\r\n    }\r\n    this.reset();\r\n}\r\n\r\n/**\r\n * Set the size of this button.\r\n * @param {Number} size - The new size.\r\n */\r\nDraggableObject.prototype.setSize = function (size) {\r\n    this.size = size;\r\n    this.bg.width = size;\r\n    this.bg.height = size;\r\n};\r\n\r\n/**\r\n * Setting the try variable to the offset of the answer\r\n * @param num\r\n */\r\nDraggableObject.prototype.setTry = function(num){\r\n    DraggableObject.try = num;\r\n};\r\n\r\n/**\r\n * Reset the buttons to \"up\" state.\r\n */\r\nDraggableObject.prototype.reset = function () {\r\n    this.bg.tint = this.color;\r\n\r\n};\r\n\r\n/**\r\n * Set the buttons to \"down\" state.\r\n * NOTE: This does not fire the click functions.\r\n */\r\nDraggableObject.prototype.setDown = function () {\r\n    this.bg.tint = this.colorPressed;\r\n};\r\n\r\n/**\r\n * Highlight the object.\r\n * @param {Number} duration - How long to highlight the button.\r\n * @param {Number} from - The opacity to highlight from (will end at this as well) (default 1).\r\n * @returns {Object} The animation tweenmax.\r\n */\r\nDraggableObject.prototype.highlight = function (duration, from) {\r\n    from = typeof from === 'number' ? from : 1;\r\n    return TweenMax.fromTo(this, 0.5, { alpha: from }, { alpha: 0 }).backForth(duration || 3);\r\n};","var GoalObject = require('./GoalObject');\r\n\r\nmodule.exports = GoalCookie;\r\n\r\nGoalCookie.prototype = Object.create(GoalObject.prototype);\r\nGoalCookie.prototype.constructor = GoalCookie;\r\n\r\n/**\r\n * The goalCookie in shark game\r\n * @param {Object} game - A reference to the Phaser game.\r\n * @param {Object} options - A list of options:\r\n *        {number} x: the x position (default 0).\r\n *        {number} y: the y position (default 0).\r\n *        {number} size: the side of the button (default 75).\r\n *        {number} number: the number of the cookie\r\n *        {number} min: The minimum value of the object.\r\n *        {number} max: The maximum value of the object.\r\n *        {string} background: the frame of the background (default 'button').\r\n * @return {Object} Itself.\r\n */\r\n\r\nfunction GoalCookie (game, number, options) {\r\n    this.background = options.background.slice(0, 6) + number + '-mirror' + options.background.slice(7);\r\n    this.spriteKey = options.spriteKey;\r\n    this.spriteFrame = options.spriteFrame;\r\n\r\n    if (typeof this.background === 'undefined') {\r\n        this.background = 'Cookie6-mirror.png';\r\n    }\r\n    GoalObject.call(this, game, options); // Parent constructor.\r\n\r\n    this.vertical = options.vertical;\r\n    if (typeof this.vertical === 'undefined' || this.vertical === null) {\r\n        this.vertical = true;\r\n    }\r\n\r\n    this.setDirection(!this.vertical);\r\n    this.min = options.min || null;\r\n    this.max = options.max || null;\r\n\r\n    this._number = 0;\r\n    this.number = number;\r\n    return this;\r\n\r\n}\r\n\r\nObject.defineProperty(GoalCookie.prototype, 'number', {\r\n    get: function () {\r\n        return this._number;\r\n    },\r\n    set: function (value) {\r\n        /* Check boundaries */\r\n        if (this.min && value < this.min) { value = this.min; }\r\n        if (this.max && value > this.max) { value = this.max; }\r\n        if (value === this._number) { return; }\r\n\r\n        this._number = value;\r\n\r\n        this.updateGraphics(value);\r\n    }\r\n});\r\n\r\nGoalCookie.prototype.updateGraphics = function (num) {\r\n    /* Remove old graphics. */\r\n   if (this.children.length > 1) {\r\n        this.removeBetween(1, this.children.length-1, true);\r\n   }\r\n    this.number = 0;\r\n    //Setting the sprite frame to the image correlating to the goal cookies number.\r\n    this.bg.frame = num-1;\r\n\r\n};\r\n\r\n\r\nGoalCookie.prototype.calcOffset = function (offset) {\r\n    var t = {\r\n        x: 0,\r\n        y: 0,\r\n        o: this.size/offset\r\n    };\r\n\r\n    if (this.background) { // Probably square looking button.\r\n        t.x = t.o*2;\r\n        t.y = t.o*2;\r\n    } else if (this.direction) { /* Up/Down */\r\n        t.x = t.o*1.8;\r\n        t.y = t.o*(this._number >= 0 ? 3.3 : 1);\r\n    } else { /* Left/Right */\r\n        t.x = t.o*(this._number >= 0 ? 1 : 3.3);\r\n        t.y = t.o*2;\r\n    }\r\n\r\n    t.o *= 4;\r\n    return t;\r\n};\r\n\r\nGoalCookie.prototype.setSize = function (size) {\r\n    GoalObject.prototype.setSize.call(this, size || this.size);\r\n\r\n    return this;\r\n};\r\n\r\nGoalCookie.prototype.setDirection = function (val) {\r\n    this.direction = val;\r\n    if (val) {\r\n\r\n        this.bg.rotation = -Math.PI / 2;\r\n        this.bg.y += this.bg.width;\r\n        this.bg.adjusted = this.bg.width;\r\n    } else {\r\n        this.bg.rotation = 0;\r\n        this.bg.y -= this.bg.adjusted || 0;\r\n    }\r\n\r\n    if (this.number) {\r\n        this.updateGraphics(this.number);\r\n    }\r\n\r\n    return this;\r\n};","var GLOBAL = require('../global.js');\r\n\r\nmodule.exports = GoalObject;\r\n\r\nGoalObject.prototype = Object.create(Phaser.Group.prototype);\r\nGoalObject.prototype.constructor = GoalObject;\r\nGoalObject.prototype.buttonColor = GLOBAL.BUTTON_COLOR;\r\n\r\n/**\r\n * Super class for goalObjects  on which to drop draggable objects\r\n * @param {Object} game - A reference to the Phaser game.\r\n * @param {Object} options - A list of options:\r\n *        {number} x: the x position (default 0).\r\n *        {number} y: the y position (default 0).\r\n *        {number} size: the side of the button (default 75).\r\n *        {string} background: the frame of the background (default 'button').\r\n * @return {Object} Itself.\r\n */\r\nfunction GoalObject (game, options) {\r\n    Phaser.Group.call(this, game, null); //\r\n    options = options || {};\r\n    this.x = options.dropPlaceX || 0;\r\n    this.y = options.dropPlaceY || 0;\r\n\r\n    this.color = options.color || this.buttonColor;\r\n\r\n    var col = Phaser.Color.getRGB(this.color);\r\n    col.red -= col.red < 40 ? col.red : 40;\r\n    col.green -= col.green < 40 ? col.green : 40;\r\n    col.blue -= col.blue < 40 ? col.blue : 40;\r\n\r\n\r\n    this.disabled = options.disabled || false;\r\n\r\n    var background = options.background;\r\n\r\n    if (typeof background === 'undefined') {\r\n        background = 'button';\r\n    }\r\n\r\n    this.bg = this.create(0, 0, (background === null ? null : 'cookie'), background);\r\n\r\n    this.setSize(options.size || 75);\r\n    return this;\r\n}\r\n\r\n/**\r\n * Set the size of this object.\r\n * @param {Number} size - The new size.\r\n */\r\nGoalObject.prototype.setSize = function (size) {\r\n    this.size = size;\r\n    this.bg.width = size;\r\n    this.bg.height = size;\r\n};\r\n\r\n/**\r\n * Highlight the objects.\r\n * @param {Number} duration - How long to highlight the button.\r\n * @param {Number} from - The opacity to highlight from (will end at this as well) (default 1).\r\n * @returns {Object} The animation tweenmax.\r\n */\r\nGoalObject.prototype.highlight = function (duration, from) {\r\n    from = typeof from === 'number' ? from : 1;\r\n    return TweenMax.fromTo(this, 0.5, {alpha: from}, {alpha: 0}).backForth(duration || 3);\r\n};\r\n\r\n","var Cover = require('./Cover.js');\nvar Slider = require('./Slider.js');\nvar GeneralButton = require('./buttons/GeneralButton.js');\nvar SpriteButton = require('./buttons/SpriteButton.js');\nvar TextButton = require('./buttons/TextButton.js');\nvar GLOBAL = require('../global.js');\nvar LANG = require('../language.js');\nvar EventSystem = require('../pubsub.js');\n\nmodule.exports = Menu;\n\nMenu.prototype = Object.create(Phaser.Group.prototype);\nMenu.prototype.constructor = Menu;\n\n/**\n * The game's main menu.\n * @param {Object} game - A reference to the Phaser game.\n * @return {Object} Itself.\n */\nfunction Menu (game) {\n\tPhaser.Group.call(this, game, null); // Parent constructor.\n\tvar centerX = game.world.centerX;\n\tvar centerY = game.world.centerY;\n\n\t/* Add menu button. */\n\tvar button = new GeneralButton(game, { x: 5, y: 5, size: 56, onClick: function () { showMenu(true); } });\n\tthis.add(button);\n\tvar menuSplit = Math.ceil(LANG.TEXT.menu.length/2);\n\tvar menuStyle = {\n\t\tfont: '20pt ' +  GLOBAL.FONT,\n\t\tstroke: '#000000',\n\t\tstrokeThickness: 2,\n\t\talign: 'center'\n\t};\n\tvar menuText = game.add.text(\n\t\tbutton.x + button.width/2,\n\t\tbutton.y + button.height/2 - 7,\n\t\tLANG.TEXT.menu.substr(0, menuSplit),\n\t\tmenuStyle,\n\t\tthis\n\t);\n\tmenuText.anchor.set(0.5);\n\tmenuText = game.add.text(\n\t\tbutton.x + button.width/2,\n\t\tbutton.y + button.height/2 + 17,\n\t\tLANG.TEXT.menu.substr(menuSplit),\n\t\tmenuStyle,\n\t\tthis\n\t);\n\tmenuText.anchor.set(0.5);\n\n\n\t/* For skipping timelines */\n\tvar skipper = null;\n\tvar skipButton = new TextButton(game, '>>', {\n\t\tx: 145, y: 5, size: 56, fontSize: 30,\n\t\tdoNotAdapt: true,\n\t\tonClick: function () {\n\t\t\tif (skipper) {\n\t\t\t\tskipper.totalProgress(1);\n\t\t\t}\n\t\t}\n\t});\n\tskipButton.visible = false;\n\tthis.add(skipButton);\n\n\tEventSystem.subscribe(GLOBAL.EVENT.skippable, function (timeline) {\n\t\tif (!skipper || skipper.getChildren().indexOf(timeline) < 0) {\n\t\t\tskipper = timeline;\n\t\t}\n\t\tskipButton.visible = !!timeline;\n\t});\n\n\n\t/* Create the menu group. It will be shown when the button is clicked. */\n\tvar menuGroup = game.add.group(this);\n\tshowMenu(false);\n\n\n\t/* Create a cover behind the menu. */\n\tmenuGroup.add(new Cover(game, '#056449', 0.7));\n\n\t/* Create the background of the menu. */\n\tvar bmd = game.add.bitmapData(parseInt(game.world.width*0.4), parseInt(game.world.height*0.6));\n\tbmd.ctx.fillStyle = '#b9d384';\n\tbmd.ctx.roundRect(0, 0, bmd.width, bmd.height, 20).fill();\n\tmenuGroup.create(game.world.width*0.3, centerY*0.6, bmd).alpha = 0.7;\n\n\t/* Create the texts. */\n\tvar title = game.add.text(centerX, centerY*0.4, LANG.TEXT.title, {\n\t\tfont: '50pt ' +  GLOBAL.FONT,\n\t\tfill: '#ffff00',\n\t\tstroke: '#000000',\n\t\tstrokeThickness: 5\n\t}, menuGroup);\n\ttitle.anchor.set(0.5);\n\n\tvar resume = new TextButton(game, LANG.TEXT.resume, {\n\t\tx: centerX,\n\t\ty: centerY*0.7,\n\t\tfontSize: 30,\n\t\tonClick: function () {\n\t\t\tshowMenu(false);\n\t\t}\n\t});\n\tresume.x -= resume.width/2;\n\tmenuGroup.add(resume);\n\n\t/* Add volume control. */\n\tvar fgVolumeSlider = new Slider(game,\n\t\tcenterX - bmd.width*0.2,\n\t\tcenterY*1.05,\n\t\tbmd.width*0.5,\n\t\t40,\n\t\tfunction (value) {\n\t\t\tgame.sound.fgVolume = value;\n\t\t\tlocalStorage.fgVolume = value;\n\n\t\t\tif (value > 0) {\n\t\t\t\tfgMuteButton.sprite.frameName = 'speech';\n\t\t\t\tfgMuteButton.muteValue = value;\n\t\t\t} else {\n\t\t\t\tfgMuteButton.sprite.frameName = 'speech_mute';\n\t\t\t}\n\t\t},\n\t\tgame.sound.fgVolume\n\t);\n\tmenuGroup.add(fgVolumeSlider);\n\n\tvar fgMuteButton = new SpriteButton(game, 'objects', game.sound.fgVolume > 0 ? 'speech' : 'speech_mute', {\n\t\tx: centerX - bmd.width*0.35,\n\t\ty: fgVolumeSlider.y - fgVolumeSlider.height*0.75,\n\t\tsize: fgVolumeSlider.height*1.5,\n\t\tonClick: function () {\n\t\t\tif (this.sprite.frameName === 'speech_mute') {\n\t\t\t\tfgVolumeSlider.value = this.muteValue > 0.1 ? this.muteValue : 1;\n\t\t\t} else {\n\t\t\t\tfgVolumeSlider.value = 0;\n\t\t\t}\n\t\t}\n\t});\n\tfgMuteButton.sprite.scale.set(0.6);\n\tfgMuteButton.muteValue = fgVolumeSlider.value;\n\tmenuGroup.add(fgMuteButton);\n\n\tvar bgVolumeSlider = new Slider(game,\n\t\tcenterX - bmd.width*0.2,\n\t\tcenterY*1.25,\n\t\tbmd.width*0.5,\n\t\t40,\n\t\tfunction (value) {\n\t\t\tgame.sound.bgVolume = value;\n\t\t\tlocalStorage.bgVolume = value;\n\n\t\t\tif (value > 0) {\n\t\t\t\tbgMuteButton.sprite.frameName = 'volume';\n\t\t\t\tbgMuteButton.muteValue = value;\n\t\t\t} else {\n\t\t\t\tbgMuteButton.sprite.frameName = 'volume_mute';\n\t\t\t}\n\t\t},\n\t\tgame.sound.bgVolume\n\t);\n\tmenuGroup.add(bgVolumeSlider);\n\n\tvar bgMuteButton = new SpriteButton(game, 'objects', game.sound.bgVolume > 0 ? 'volume' : 'volume_mute', {\n\t\tx: centerX - bmd.width*0.35,\n\t\ty: bgVolumeSlider.y - bgVolumeSlider.height*0.75,\n\t\tsize: bgVolumeSlider.height*1.5,\n\t\tonClick: function () {\n\t\t\tif (this.sprite.frameName === 'volume_mute') {\n\t\t\t\tbgVolumeSlider.value = this.muteValue > 0.1 ? this.muteValue : 1;\n\t\t\t} else {\n\t\t\t\tbgVolumeSlider.value = 0;\n\t\t\t}\n\t\t}\n\t});\n\tbgMuteButton.sprite.scale.set(0.6);\n\tbgMuteButton.muteValue = bgVolumeSlider.value;\n\tmenuGroup.add(bgMuteButton);\n\n\n\tvar currentState = game.state.states[game.state.current];\n\tif (currentState.menuBack) {\n\t\tvar garden = game.add.text(centerX, centerY*1.5, currentState.menuBack.text, {\n\t\t\tfont: '30pt ' +  GLOBAL.FONT,\n\t\t\tfill: '#000000'\n\t\t}, menuGroup);\n\t\tgarden.anchor.set(0.5);\n\t\tgarden.inputEnabled = true;\n\t\tgarden.events.onInputDown.add(function () {\n\t\t\tgame.state.start(currentState.menuBack.state);\n\t\t}, this);\n\t}\n\n\tvar quit = game.add.text(centerX, centerY*1.7, LANG.TEXT.quit, {\n\t\tfont: '30pt ' +  GLOBAL.FONT,\n\t\tfill: '#000000'\n\t}, menuGroup);\n\tquit.anchor.set(0.5);\n\tquit.inputEnabled = true;\n\tquit.events.onInputDown.add(function () {\n\t\tgame.state.start(GLOBAL.STATE.entry);\n\t}, this);\n\n\n\tfunction showMenu (value) {\n\t\tmenuGroup.visible = value;\n\t}\n\n\treturn this;\n}","var Cover = require('./Cover.js');\nvar TextButton = require('./buttons/TextButton.js');\nvar GLOBAL = require('../global.js');\nvar LANG = require('../language.js');\n\nmodule.exports = Modal;\n\nModal.prototype = Object.create(Phaser.Group.prototype);\nModal.prototype.constructor = Modal;\n\n/**\n * A modal with a single ok button.\n * @param {Object} game - A reference to the Phaser game.\n * @param {string} text - The text in the modal.\n * @param {number} fontSize - The size of the text. (default is 50).\n * @param {function} callback - A callback when pushing ok (optional).\n */\nfunction Modal (game, text, fontSize, callback) {\n\tPhaser.Group.call(this, game, null); // Parent constructor.\n\tvar centerX = game.world.centerX;\n\tvar centerY = game.world.centerY;\n\n\t/* Create a cover behind the modal, traps all mouse events. */\n\tthis.add(new Cover(game, '#056449', 0.7));\n\n\t/* Create the modal background. */\n\tvar bmd = game.add.bitmapData(parseInt(game.world.width/3), parseInt(game.world.height/2));\n\tbmd.ctx.fillStyle = '#b9d384';\n\tbmd.ctx.roundRect(0, 0, bmd.width, bmd.height, 20).fill();\n\tthis.create(game.world.width/3, centerY * 0.67, bmd).alpha = 0.7;\n\n\t/* Add the text field. */\n\tgame.add.text(centerX, centerY, text, {\n\t\tfont: (fontSize || 50) + 'pt ' +  GLOBAL.FONT,\n\t\tfill: '#dd00dd',\n\t\talign: 'center',\n\t\twordWrap: true,\n\t\twordWrapWidth: bmd.width * 0.7\n\t}, this).anchor.set(0.5);\n\n\t/* Add the ok button. */\n\tvar _this = this;\n\tthis.add(new TextButton(game, LANG.TEXT.ok, {\n\t\tx: centerX - 55,\n\t\ty: centerY/0.75,\n\t\tsize: 80,\n\t\tfontSize: 30,\n\t\tonClick: function () {\n\t\t\t_this.destroy();\n\t\t\tif (callback) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t}));\n}","var Cookies = require('./Cookies.js');\r\nvar GoalCookie = require('./GoalCookie.js');\r\n\r\nmodule.exports = ObjectPanel;\r\n\r\nObjectPanel.prototype = Object.create(Phaser.Group.prototype);\r\nObjectPanel.prototype.constructor = ObjectPanel;\r\n\r\n/**\r\n * Create a panel filled with dradg and drop or goal objects.\r\n * See NumberButton and GeneralButton for more information.\r\n * @param {Object} game - A reference to the Phaser game.\r\n * @param {number} amount - The number of buttons (this will be overwritten in updateObject for goalCookie and )\r\n * @param {Object} options - options for the panel:\r\n *        {number} x - The x position (default is 0)\r\n *        {number} y - The y position (default is 0)\r\n *        (string) id and idName - identifier for what object it is (dragObject, goalObject or goalObject) is converted to idName in objectoptions\r\n *        (number) id indentifies the specific object of the 4 cookies  (1-4)\r\n *        (number) dropPlaceX - the x drop position for the object, defined at creation in sharkGame\r\n *        (number) dropPlaceY - the y drop position for the object, defined at creation in sharkGame\r\n *        {number} size - The size of the panel (default is game width or height, depending on if vertical is set)\r\n *        {number} min - The smallest number on the panel (default is 1)\r\n *        {number} max - The biggest number on the panel (default is min + amount - 1)\r\n *        {function} onClick - What should happen when clicking the button\r\n *        {string} background - The sprite key for the button backgrounds\r\n *        {number} maxButtonSize - The maximum size of the buttons (default is 75)\r\n *                                 NOTE: The button size is always calculated to not overlap\r\n * @return {Object} Itself.\r\n */\r\n\r\n\r\nfunction ObjectPanel (game, amount, options) {\r\n    Phaser.Group.call(this, game, null); // Parent constructor.\r\n    this.x = options.x || 0;\r\n    this.y = options.y || 0;\r\n    this.vertical = options.vertical || false;\r\n    this.reversed = options.reversed || false;\r\n    this.size = options.size || (this.vertical ? this.game.world.height : this.game.world.width);\r\n\r\n    this.dropPlaceX = options.dropPlaceX;\r\n    this.dropPlaceY = options.dropPlaceY;\r\n    this.id = options.id;\r\n    this.color = options.color;\r\n    this.background = options.background;\r\n    this.background = 'cookie4.png';\r\n\r\n    this.maxObjectSize = options.maxObjectSize || 75;\r\n    this.onClick = options.onClick;\r\n    options.min = options.min || 1;\r\n    this.setRange(options.min, options.max || (options.min + amount - 1));\r\n\r\n    return this;\r\n}\r\n\r\nObjectPanel.prototype._createObject = function () {\r\n    this.removeAll(true);\r\n\r\n    /* Calculate max object size. */\r\n    var objectSize = this.size/this.amount;\r\n    if (objectSize > this.maxObjectSize) {\r\n        objectSize = this.maxObjectSize;\r\n    }\r\n\r\n    /* These options will be used when creating the objects. */\r\n    var objectOptions = {\r\n        min: this.min,\r\n        max: this.max,\r\n        size: objectSize,\r\n        background: this.background,\r\n        color: this.color,\r\n        vertical: !this.vertical,\r\n        onClick: this.onClick,\r\n        dropPlaceX: this.dropPlaceX,\r\n        dropPlaceY: this.dropPlaceY,\r\n        id: 0,\r\n        idName: this.id,\r\n        startPosX: this.x,\r\n        startPosY: this.y\r\n    };\r\n\r\n\r\n    /* Set up the objects that should be in the panel. depending on the present object */\r\n    if(this.id === 'dragObject' ) {\r\n        for (var i = this.min; i <= this.max; i++) {\r\n            this.cookie = new Cookies(this.game, i, objectOptions);\r\n            this.add(this.cookie);\r\n        }\r\n    }\r\n    else if(this.id === 'goalObject') {\r\n        this.goalCookie = new GoalCookie(this.game,6, objectOptions);\r\n        this.add(this.goalCookie);\r\n    }\r\n    else{\r\n        this.add(this.finalDragObject = new Cookies(this.game,10, objectOptions));\r\n    }\r\n    /* Reverse the order of the buttons if needed. */\r\n    if (this.reversed) { this.reverse(); }\r\n\r\n\r\n    /* Calculate white space. */\r\n    var widthLeft = this.size - objectSize*this.amount;\r\n    var paddingSize = widthLeft/this.amount;\r\n    if (paddingSize > objectSize/2) {\r\n        paddingSize = objectSize/2;\r\n    }\r\n    var margin = (this.size - this.amount*objectSize - (this.amount - 1)*paddingSize)/2;\r\n    var fullSize = paddingSize + objectSize;\r\n\r\n    /* Set up the x and y positions. */\r\n    var direction = this.vertical ? 'y' : 'x';\r\n    for (var j = 0; j < this.length; j++) {\r\n        this.children[j][direction] = margin + fullSize*j;\r\n    }\r\n};\r\n\r\n//Update the numbers of each object, 3 randomized and the current correct number\r\nObjectPanel.prototype._updateObjects = function (currentNumber) {\r\n    var rand = Math.round(Math.random()*9);\r\n    var correct = currentNumber;\r\n    while(rand === correct){\r\n        rand = Math.round(Math.random()*9);\r\n    }\r\n    var randIndex = Math.floor(Math.random()*3); //a randomized index for the current number\r\n    var i = 0;\r\n    if(this.cookie) {\r\n        //looping over the cookies\r\n        for (var key in this.children) {\r\n            this.children[key].min = this.min;\r\n            this.children[key].max = 9;\r\n            if (i === randIndex) {\r\n                this.children[key].number = correct;\r\n            }\r\n            else {\r\n                this.children[key].number = rand;\r\n            }\r\n            Cookies.prototype.updateGraphics.call(this.cookie, rand); //Updating the graphics correlating to the new number\r\n\r\n            rand = Math.round(Math.random() * 9);\r\n            //making sure that none of the cookies gets the same number\r\n            while (this.children[0].number === rand || this.children[1].number === rand ||\r\n                   this.children[2].number === rand || this.children[3].number === rand) {\r\n                rand = Math.round(Math.random() * 9);\r\n            }\r\n\r\n            i++;\r\n        }\r\n        i = 0;\r\n    }\r\n\r\n    if(this.goalCookie) {\r\n        //Setting the goalCookie number to the inverse of the current number\r\n        GoalCookie.prototype.updateGraphics.call(this.goalCookie, 10-currentNumber);\r\n    }\r\n};\r\n\r\n/**\r\n * Set the range for the button panel. It will create or update the panel accordingly.\r\n * @param {Number} The minimum amount in the panel.\r\n * @param {Number} The maximum amount in the panel.\r\n */\r\nObjectPanel.prototype.setRange = function (min, max,currentNumber) {\r\n    this.min = min;\r\n    this.max = max;\r\n    var oldAmount = this.amount || 0;\r\n\r\n    this.amount =  (this.max - this.min + 1);\r\n    if (this.amount !== oldAmount || this.length <= 0) {\r\n        this._createObject();\r\n    } else {\r\n        this._updateObjects(currentNumber);\r\n    }\r\n};\r\n\r\n/**\r\n * Reset all objects to \"up\" state.\r\n */\r\nObjectPanel.prototype.reset = function () {\r\n    for (var i = 0; i < this.length; i++) {\r\n        this.children[i].reset();\r\n    }\r\n};\r\n\r\n/**\r\n * Highlight all objects.\r\n * @param {Number} duration - How long to highlight the buttons.\r\n * @param {Number} from - The opacity to highlight from (will end at this as well) (default 1).\r\n * @returns {Object} The animation timeline.\r\n */\r\nObjectPanel.prototype.highlightObject = function (duration, from) {\r\n    var t = new TimelineMax();\r\n    for (var i = 0; i < this.length; i++) {\r\n        t.add(this.children[i].highlightObject(duration, from), 0);\r\n    }\r\n    return t;\r\n};\r\n\r\n/**\r\n * Disable/Enable all object input.\r\n * @param {Boolean} disable - True is disabled, false is enabled\r\n */\r\nObjectPanel.prototype.disable = function (value) {\r\n    for (var i = 0; i < this.length; i++) {\r\n        this.children[i].disabled = value;\r\n    }\r\n};","var GeneralButton = require('./buttons/GeneralButton.js');\n\nmodule.exports = Slider;\n\nSlider.prototype = Object.create(Phaser.Group.prototype);\nSlider.prototype.constructor = Slider;\n\n/**\n * A slider (that is an interactive handle on a line).\n * NOTE: Uses GeneralButton.prototype.buttonColor for colors.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} x - the x position (default 0).\n * @param {number} y - the y position (default 0).\n * @param {number} width - the width (of the line) (default 300).\n * @param {number} height - the height (of the handle) (default 50).\n * @param {Function} onChange: function to run when handle changes (default null).\n * @param {number} initial: initial value of the slider (default 0).\n * @returns {Object} Itself.\n */\nfunction Slider (game, x, y, width, height, onChange, initial) {\n\tPhaser.Group.call(this, game, null); // Parent constructor.\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.onChange = onChange;\n\n\theight = height\t|| 50;\n\twidth = width || 300;\n\tinitial = initial || 0;\n\n\t/* Add the line. */\n\tvar line = this.create(0, 0, 'objects', 'button');\n\tline.tint = GeneralButton.prototype.buttonColor;\n\tline.anchor.set(0, 0.5);\n\tline.height = height/10;\n\tline.width = width;\n\n\t/* Add the handle. */\n\tthis.handle = this.create(0, 0, 'objects', 'button');\n\tthis.handle.tint = GeneralButton.prototype.buttonColor;\n\tthis.handle.anchor.set(0.5);\n\tthis.handle.width = height;\n\tthis.handle.height = height;\n\tthis.handle.max = line.width - this.handle.width;\n\tthis.handle.x = this.handle.max * initial;\n\n\t/* Move objects so that handle is easy to use */\n\tthis.x += this.handle.width/2;\n\tline.x -= this.handle.width/2;\n\n\t/* Use a large input area, that can be pushed anywhere on the slider */\n\tvar trigger = this.create(line.x, line.y,\n\t\tgame.add.bitmapData(line.width, this.handle.height));\n\ttrigger.anchor.set(0, 0.5);\n\ttrigger.inputEnabled = true;\n\n\ttrigger.events.onInputDown.add(function () {\n\t\tvar _this = this; // _this is the whole slider\n\t\tthis.handle.tint -= 0x1e1e1e;\n\t\tthis.handle.update = function () {\n\t\t\t// this will be the handle in this scope.\n\n\t\t\tthis.x = game.input.activePointer.x - _this.x;\n\t\t\tif (this.x < 0) {\n\t\t\t\tthis.x = 0;\n\t\t\t} else if (this.x > this.max) {\n\t\t\t\tthis.x = this.max;\n\t\t\t}\n\n\t\t\t_this.onChange(this.x / this.max);\n\t\t};\n\t}, this);\n\n\tvar click = game.add.audio('click');\n\ttrigger.events.onInputUp.add(function () {\n\t\tthis.handle.update = function () {};\n\t\tthis.handle.tint += 0x1e1e1e;\n\t\tclick.play();\n\t}, this);\n}\n\n/**\n * @property {number} value - The value of the slider.\n */\nObject.defineProperty(Slider.prototype, 'value', {\n\tget: function() {\n\t\treturn this.handle.x / this.handle.max;\n\t},\n\tset: function(value) {\n\t\tthis.handle.x = this.handle.max * value;\n\t\tthis.onChange(value);\n\t}\n});\n","var EventSystem = require('../pubsub.js');\nvar GLOBAL = require('../global.js');\n\nmodule.exports = WaterCan;\n\nWaterCan.prototype = Object.create(Phaser.Group.prototype);\nWaterCan.prototype.constructor = WaterCan;\n\n/**\n * The graphical representation of the watering can.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} x - X position (default is game.width - 150).\n * @param {number} y - Y position (default is 5).\n * @param {number} amount - amount of water in the can (default player amount).\n * @returns {Object} Itself.\n */\nfunction WaterCan (game, x, y, amount) {\n\tPhaser.Group.call(this, game, null); // Parent constructor.\n\tthis.x = x || game.width - 125;\n\tthis.y = y || 5;\n\tthis.amount = amount || this.game.player.water;\n\tvar origin = 87;\n\tvar waterStep = 54 / this.game.player.maxWater;\n\n\t/* Add water level */\n\tvar bmd = game.add.bitmapData(62, 1);\n\tbmd.ctx.fillStyle = '#0000ff';\n\tbmd.ctx.fillRect(0, 0, bmd.width, bmd.height);\n\tvar water = this.create(20, origin, bmd);\n\twater.height = waterStep*this.amount;\n\twater.y -= water.height;\n\n\t/* Add can */\n\tthis.can = this.create(0, 0, 'objects', 'watering_can');\n\tthis.can.tint = 0xbb3333;\n\n\t/* Keep track of when the player's water changes */\n\tthis._sub = EventSystem.subscribe(GLOBAL.EVENT.waterAdded, function (total) {\n\t\tvar h = waterStep*total;\n\t\tTweenMax.to(water, 0.5, { height: h, y: origin - h });\n\t});\n\n\treturn this;\n}\n\n/** Removes subscriptions in addition to Phaser.Group.destroy */\nWaterCan.prototype.destroy = function (destroyChildren, soft) {\n\tEventSystem.unsubscribe(this._sub); // Otherwise possible memory leak.\n\tPhaser.Group.prototype.destroy.call(this, destroyChildren, soft);\n};\n\n/**\n * Pour water from the can.\n * @param {number} duration - Duration to pour.\n * @returns {Object} The animation TweenMax.\n */\nWaterCan.prototype.pour = function (duration) {\n\tvar emitter = this.game.add.emitter(this.can.width, 5, 200);\n\temitter.width = 5;\n\temitter.makeParticles('objects', 'drop');\n\temitter.setScale(0.1, 0.3, 0.1, 0.3);\n\temitter.setYSpeed(100, 150);\n\temitter.setXSpeed(50, 100);\n\temitter.setRotation(0, 0);\n\n\tthis.can.addChild(emitter);\n\n\treturn new TweenMax(emitter, duration, {\n\t\tonStart: function () { emitter.start(false, 500, 10, (duration-0.5)*50); },\n\t\tonComplete: function () { emitter.destroy(); }\n\t});\n};","var GLOBAL = require('../../global.js');\nvar TextButton = require('./TextButton.js');\nvar NumberButton = require('./NumberButton.js');\n\nmodule.exports = ButtonPanel;\n\nButtonPanel.prototype = Object.create(Phaser.Group.prototype);\nButtonPanel.prototype.constructor = ButtonPanel;\n\n/**\n * Create a panel filled with buttons.\n * See NumberButton and GeneralButton for more information.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} amount - The number of buttons (NOTE, this will be overwritten if you set option max)\n * @param {number|Array} representations - The representations to use on the buttons.\n * @param {Object} options - options for the panel:\n *        {number} x - The x position (default is 0)\n *        {number} y - The y position (default is 0)\n *        {number} size - The size of the panel (default is game width or height, depending on if vertical is set)\n *        {number} method - The method of the panel (default is GLOBAL.METHOD.count)\n *        {boolean} vertical - If the panel should be vertical (default is false)\n *        {boolean} reversed - If the panel should display the buttons in reverse (default is false)\n *        {number} min - The smallest number on the panel (default is 1)\n *        {number} max - The biggest number on the panel (default is min + amount - 1)\n *        {function} onClick - What should happen when clicking the button\n *        {string} background - The sprite key for the button backgrounds\n *        {string} color - The color of the representation\n *        {number} maxButtonSize - The maximum size of the buttons (default is 75)\n *                                 NOTE: The button size is always calculated to not overlap\n * @return {Object} Itself.\n */\nfunction ButtonPanel (game, amount, representations, options) {\n\tPhaser.Group.call(this, game, null); // Parent constructor.\n\tthis.representations = representations;\n\tthis.x = options.x || 0;\n\tthis.y = options.y || 0;\n\tthis.vertical = options.vertical || false;\n\tthis.reversed = options.reversed || false;\n\tthis.size = options.size || (this.vertical ? this.game.world.height : this.game.world.width);\n\tthis.method = options.method || GLOBAL.METHOD.count;\n\n\tthis.color = options.color;\n\tthis.background = options.background;\n\tif (!this.background && (this.method === GLOBAL.METHOD.count || this.method === GLOBAL.METHOD.incrementalSteps)) {\n\t\tthis.background = 'button';\n\t}\n\tthis.maxButtonSize = options.maxButtonSize || 75;\n\tthis.onClick = options.onClick;\n\n\t/* Set range of the panel, which will create the buttons. */\n\toptions.min = options.min || 1;\n\tthis.setRange(options.min, options.max || (options.min + amount - 1));\n\n\treturn this;\n}\n\n/**\n * Create the buttons.\n * @private\n */\nButtonPanel.prototype._createButtons = function () {\n\tthis.removeAll(true);\n\n\t/* Calculate max button size. */\n\tvar buttonSize = this.size/this.amount;\n\tif (buttonSize > this.maxButtonSize) {\n\t\tbuttonSize = this.maxButtonSize;\n\t}\n\n\t/* These options will be used when creating the buttons. */\n\tvar buttonOptions = {\n\t\tmin: this.min,\n\t\tmax: this.max,\n\t\tsize: buttonSize,\n\t\tbackground: this.background,\n\t\tcolor: this.color,\n\t\tvertical: !this.vertical,\n\t\tonClick: this.onClick\n\t};\n\n\t/* Set up the buttons that should be in the panel. */\n\tif (this.method === GLOBAL.METHOD.incrementalSteps) {\n\t\tbuttonOptions.doNotAdapt = true;\n\t\t// Create buttons first, then add them in their order (this is because we manipulate the buttonOptions later)\n\t\tvar change = new NumberButton(this.game, 1, this.representations, buttonOptions);\n\n\t\t// Put the other buttons centered.\n\t\tbuttonOptions[this.vertical ? 'x' : 'y'] = ((this.representations.length - 1) * buttonSize)/2;\n\t\tbuttonOptions.onClick = function () { change.bg.events.onInputDown.dispatch(); };\n\t\tvar go = new NumberButton(this.game, 1, GLOBAL.NUMBER_REPRESENTATION.yesno, buttonOptions);\n\n\t\tbuttonOptions.keepDown = false;\n\t\tbuttonOptions.background = 'button_minus';\n\t\tbuttonOptions.onClick = function () { change.number--; };\n\t\tvar minus = new TextButton(this.game, '-', buttonOptions);\n\n\t\tbuttonOptions.background = 'button_plus';\n\t\tbuttonOptions.onClick = function () { change.number++; };\n\t\tvar plus = new TextButton(this.game, '+', buttonOptions);\n\n\t\tif (this.vertical) {\n\t\t\tminus.bg.rotation = -Math.PI/2;\n\t\t\tminus.bg.y += minus.bg.width;\n\t\t\tminus._text.y -= 6;\n\t\t\tplus.bg.rotation = -Math.PI/2;\n\t\t\tplus.bg.y += plus.bg.width;\n\t\t\tplus._text.y += 5;\n\t\t} else {\n\t\t\tminus._text.x += 5;\n\t\t\tplus._text.x -= 4;\n\t\t}\n\n\t\tthis.add(minus);\n\t\tthis.add(change);\n\t\tthis.add(plus);\n\t\tthis.add(go);\n\n\t} else {\n\t\tfor (var i = this.min; i <= this.max; i++) {\n\t\t\tthis.add(new NumberButton(this.game, i, this.representations, buttonOptions));\n\t\t}\n\t}\n\n\t/* Reverse the order of the buttons if needed. */\n\tif (this.reversed) { this.reverse(); }\n\n\n\t/* Calculate white space. */\n\tvar widthLeft = this.size - buttonSize*this.amount;\n\tvar paddingSize = widthLeft/this.amount;\n\tif (paddingSize > buttonSize/2) {\n\t\tpaddingSize = buttonSize/2;\n\t}\n\tvar margin = (this.size - this.amount*buttonSize - (this.amount - 1)*paddingSize)/2;\n\tvar fullSize = paddingSize + buttonSize;\n\n\t/* Set up the x and y positions. */\n\tvar direction = this.vertical ? 'y' : 'x';\n\tfor (var j = 0; j < this.length; j++) {\n\t\tthis.children[j][direction] = margin + fullSize*j;\n\t}\n};\n\n/**\n * Update the values of the buttons.\n * @private\n */\nButtonPanel.prototype._updateButtons = function () {\n\tif (this.method === GLOBAL.METHOD.incrementalSteps) {\n\t\tvar button = this.children[this.reversed ? 2 : 1];\n\t\tbutton.min = this.min;\n\t\tbutton.max = this.max;\n\t} else {\n\t\tvar val, dir;\n\t\tif (this.reversed) {\n\t\t\tval = this.max;\n\t\t\tdir = -1;\n\t\t} else {\n\t\t\tval = this.min;\n\t\t\tdir = 1;\n\t\t}\n\t\tfor (var key in this.children) {\n\t\t\tthis.children[key].min = this.min;\n\t\t\tthis.children[key].max = this.max;\n\t\t\tthis.children[key].number = val;\n\t\t\tval += dir;\n\t\t}\n\t}\n};\n\n/**\n * Set the range for the button panel. It will create or update the panel accordingly.\n * @param {Number} The minimum amount in the panel.\n * @param {Number} The maximum amount in the panel.\n */\nButtonPanel.prototype.setRange = function (min, max) {\n\tthis.min = min;\n\tthis.max = max;\n\n\tvar oldAmount = this.amount || 0;\n\t// incrementalSteps have these buttons: (-) (number) (+) (ok)\n\tthis.amount = this.method === GLOBAL.METHOD.incrementalSteps ? 4 : (this.max - this.min + 1);\n\n\tif (this.amount !== oldAmount || this.length <= 0) {\n\t\tthis._createButtons();\n\t} else {\n\t\tthis._updateButtons();\n\t}\n};\n\n/**\n * Reset all buttons to \"up\" state.\n */\nButtonPanel.prototype.reset = function () {\n\tfor (var i = 0; i < this.length; i++) {\n\t\tthis.children[i].reset();\n\t}\n};\n\n/**\n * Highlight all buttons.\n * @param {Number} duration - How long to highlight the buttons.\n * @param {Number} from - The opacity to highlight from (will end at this as well) (default 1).\n * @returns {Object} The animation timeline.\n */\nButtonPanel.prototype.highlight = function (duration, from) {\n\tvar t = new TimelineMax();\n\tfor (var i = 0; i < this.length; i++) {\n\t\tt.add(this.children[i].highlight(duration, from), 0);\n\t}\n\treturn t;\n};\n\n/**\n * Disable/Enable all buttons.\n * @param {Boolean} disable - True is disabled, false is enabled\n */\nButtonPanel.prototype.disable = function (value) {\n\tfor (var i = 0; i < this.length; i++) {\n\t\tthis.children[i].disabled = value;\n\t}\n};","var GLOBAL = require('../../global.js');\n\nmodule.exports = GeneralButton;\n\nGeneralButton.prototype = Object.create(Phaser.Group.prototype);\nGeneralButton.prototype.constructor = GeneralButton;\nGeneralButton.prototype.buttonColor = GLOBAL.BUTTON_COLOR; // TODO: Can we use this global directly instead?\n\n/**\n * A general button.\n * @param {Object} game - A reference to the Phaser game.\n * @param {Object} options - A list of options:\n *        {number} x: the x position (default 0).\n *        {number} y: the y position (default 0).\n *        {number} size: the side of the button (default 75).\n *        {string} background: the frame of the background (default 'button').\n                               NOTE: Needs to be in the 'objects' atlas.\n *        {number} color: the color of the button (default 0xb2911d).\n *                        NOTE: You can also set the prototype property buttonColor.\n *        {number} colorPressed: the color when the button is pressed (default darker color).\n *        {function} onClick: a function to run when a button is clicked.\n *        {boolean} disabled: true if the button should be disabled (default false).\n *        {boolean} keepDown: true if the button should not auto raise when clicked (default false).\n * @return {Object} Itself.\n */\nfunction GeneralButton (game, options) {\n\tPhaser.Group.call(this, game, null); // Parent constructor.\n\toptions = options || {};\n\tthis.x = options.x || 0;\n\tthis.y = options.y || 0;\n\tthis.color = options.color || this.buttonColor;\n\tif (options.colorPressed) {\n\t\tthis.colorPressed = options.colorPressed;\n\t} else {\n\t\tvar col = Phaser.Color.getRGB(this.color);\n\t\tcol.red -= col.red < 40 ? col.red : 40;\n\t\tcol.green -= col.green < 40 ? col.green : 40;\n\t\tcol.blue -= col.blue < 40 ? col.blue : 40;\n\t\tthis.colorPressed = Phaser.Color.getColor(col.red, col.green, col.blue);\n\t}\n\tthis.onClick = options.onClick;\n\tthis.disabled = options.disabled || false;\n\tthis.keepDown = options.keepDown || false;\n\n\tvar background = options.background;\n\tif (typeof background === 'undefined') {\n\t\tbackground = 'button';\n\t}\n\tthis.bg = this.create(0, 0, (background === null ? null : 'objects'), background);\n\tthis.bg.inputEnabled = true;\n\t//this.bg.input.enableDrag(true,true);\n\tvar click = game.add.audio('click');\n\tthis.bg.events.onInputDown.add(function () {\n\t\tif (this.disabled || this.bg.tint === this.colorPressed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.bg.tint = this.colorPressed;\n\t\tclick.play();\n\n\t\tif (this.onClick) {\n\t\t\tthis.onClick();\n\t\t}\n\t}, this);\n\n\tthis.bg.events.onInputUp.add(function () {\n\t\tif (!this.keepDown) {\n\t\t\tthis.reset();\n\t\t}\n\t}, this);\n\n\tthis.reset();\n\tthis.setSize(options.size || 75);\n\n\treturn this;\n}\n\n/**\n * Set the size of this object.\n * @param {Number} size - The new size.\n */\nGeneralButton.prototype.setSize = function (size) {\n\tthis.size = size;\n\tthis.bg.width = size;\n\tthis.bg.height = size;\n};\n\n/**\n * Reset the buttons to \"up\" state.\n */\nGeneralButton.prototype.reset = function () {\n\tthis.bg.tint = this.color;\n};\n\n/**\n * Set the buttons to \"down\" state.\n * NOTE: This does not fire the click functions.\n */\nGeneralButton.prototype.setDown = function () {\n\tthis.bg.tint = this.colorPressed;\n};\n\n/**\n * Highlight the objects.\n * @param {Number} duration - How long to highlight the button.\n * @param {Number} from - The opacity to highlight from (will end at this as well) (default 1).\n * @returns {Object} The animation tweenmax.\n */\nGeneralButton.prototype.highlight = function (duration, from) {\n\tfrom = typeof from === 'number' ? from : 1;\n\treturn TweenMax.fromTo(this, 0.5, { alpha: from }, { alpha: 0 }).backForth(duration || 3);\n};","var GeneralButton = require('./GeneralButton.js');\nvar DotsRepresentation = require('../representations/DotsRepresentation.js');\nvar FingerRepresentation = require('../representations/FingerRepresentation.js');\nvar StrikeRepresentation = require('../representations/StrikeRepresentation.js');\nvar NumberRepresentation = require('../representations/NumberRepresentation.js');\nvar DiceRepresentation = require('../representations/DiceRepresentation.js');\nvar YesnoRepresentation = require('../representations/YesnoRepresentation.js');\nvar GLOBAL = require('../../global.js');\nvar EventSystem = require('../../pubsub.js');\n\nmodule.exports = NumberButton;\n\nNumberButton.prototype = Object.create(GeneralButton.prototype);\nNumberButton.prototype.constructor = NumberButton;\n\n/**\n * A button with number representations on it.\n * If you supply more than one representation the button will stretch.\n * Publishes numberPress event on click.\n * NOTE: This button will not go to \"up\" state after click unless you set keepDown option to false.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} number - The number for the button.\n * @param {number|Array} representations - The representations of the button (see GLOBAL.NUMBER_REPRESENTATION).\n * @param {Object} options - A list of options (in addition to GeneralButton):\n *        {number} min: The minimum value of the button.\n *        {number} max: The maximum value of the button.\n *        {number} size: the small side of the button (the other depend on representation amount) (default 75).\n *        {boolean} vertical: stretch button vertically if many representations, otherwise horisontally (default true).\n *        {string} spriteKey: Used for object representation only. The key to the sprite.\n *        {string} spriteFrame: Used for object representation only. The framename in the sprite.\n                                NOTE: Used like this: spriteFrame + this.number\n * @returns {Object} Itself.\n */\nfunction NumberButton (game, number, representations, options) {\n\t/* The order here is a bit weird because GeneralButton calls setSize, which this class overshadows. */\n\tif (typeof options.keepDown === 'undefined' || options.keepDown === null) {\n\t\toptions.keepDown = true;\n\t}\n\tthis.representations = representations;\n\tthis.background = options.background;\n\tthis.spriteKey = options.spriteKey;\n\tthis.spriteFrame = options.spriteFrame;\n\n\tGeneralButton.call(this, game, options); // Parent constructor.\n\n\tthis.vertical = options.vertical;\n\tif (typeof this.vertical === 'undefined' || this.vertical === null) {\n\t\tthis.vertical = true;\n\t}\n\tthis.setDirection(!this.vertical);\n\n\tthis.min = options.min || null;\n\tthis.max = options.max || null;\n\tthis._number = 0;\n\tthis.number = number;\n\n\tthis._clicker = options.onClick;\n\t/* This will be called in the GeneralButton's onInputDown */\n\tthis.onClick = function () {\n\t\tEventSystem.publish(GLOBAL.EVENT.numberPress, [this.number, this.representations]);\n\t\tif (this._clicker) {\n\t\t\tthis._clicker(this.number);\n\t\t}\n\t};\n\n\treturn this;\n}\n\n/**\n * @property {number|Array} representations - The representations on the button.\n */\nObject.defineProperty(NumberButton.prototype, 'representations', {\n\tget: function () {\n\t\treturn this._representations;\n\t},\n\tset: function (value) {\n\t\tthis._representations = Array.isArray(value) ? value : [value];\n\t\tif (typeof this.number !== 'undefined' && this.number !== null) {\n\t\t\tthis.updateGraphics();\n\t\t}\n\t}\n});\n\n/**\n * @property {number} number - The number on the button. Set according to representations.\n *                             NOTE: This can not be less or more than min or max.\n */\nObject.defineProperty(NumberButton.prototype, 'number', {\n\tget: function () {\n\t\treturn this._number;\n\t},\n\tset: function (value) {\n\t\t/* Check boundaries */\n\t\tif (this.min && value < this.min) { value = this.min; }\n\t\tif (this.max && value > this.max) { value = this.max; }\n\t\tif (value === this._number) { return; }\n\n\t\tthis._number = value;\n\n\t\tthis.updateGraphics();\n\t}\n});\n\n/**\n * Update the graphics of the button.\n */\nNumberButton.prototype.updateGraphics = function () {\n\t/* Remove old graphics. */\n\tif (this.children.length > 1) {\n\t\tthis.removeBetween(1, this.children.length-1, true);\n\t}\n\n\tif (typeof this.background === 'undefined' && this.representations[0] !== GLOBAL.NUMBER_REPRESENTATION.yesno) {\n\t\tif (this._number > 0) {\n\t\t\tthis.bg.frameName = 'button_plus';\n\t\t} else if (this._number < 0) {\n\t\t\tthis.bg.frameName = 'button_minus';\n\t\t} else {\n\t\t\tthis.bg.frameName = 'button_zero';\n\t\t}\n\t\tthis.setSize();\n\t\tthis.reset();\n\t}\n\n\t/* Add new graphics. */\n\tvar x = 0;\n\tvar y = 0;\n\tvar offset = 0;\n\tvar useNum = Math.abs(this._number);\n\tvar rep;\n\tfor (var i = 0; i < this.representations.length; i++) {\n\t\tif (this.vertical) {\n\t\t\ty = this.size * i;\n\t\t} else {\n\t\t\tx = this.size * i;\n\t\t}\n\t\tif (i > 0) {\n\t\t\tvar bmd = this.vertical ? this.game.add.bitmapData(this.size - 10, 3) : this.game.add.bitmapData(3, this.size - 10);\n\t\t\tbmd.ctx.fillStyle = '#000000';\n\t\t\tbmd.ctx.globalAlpha = 0.2;\n\t\t\tbmd.ctx.roundRect(0, 0, bmd.width, bmd.height, 2).fill();\n\t\t\tif (this.vertical) {\n\t\t\t\tthis.create(x + 5, y - 1, bmd);\n\t\t\t} else {\n\t\t\t\tthis.create(x - 1, y + 5, bmd);\n\t\t\t}\n\t\t}\n\n\t\trep = this.representations[i] === GLOBAL.NUMBER_REPRESENTATION.mixed ? this.game.rnd.pick([\n\t\t\tGLOBAL.NUMBER_REPRESENTATION.dots,\n\t\t\tGLOBAL.NUMBER_REPRESENTATION.fingers,\n\t\t\tGLOBAL.NUMBER_REPRESENTATION.strikes,\n\t\t\tGLOBAL.NUMBER_REPRESENTATION.numbers,\n\t\t\tGLOBAL.NUMBER_REPRESENTATION.dice\n\t\t]) : this.representations[i];\n\n\t\tif (rep === GLOBAL.NUMBER_REPRESENTATION.dots) {\n\t\t\toffset = this.calcOffset(16);\n\t\t\tthis.add(new DotsRepresentation(this.game, useNum, x+offset.x, y+offset.y, this.size-offset.o, this.color));\n\n\t\t} else if (rep === GLOBAL.NUMBER_REPRESENTATION.fingers) {\n\t\t\toffset = this.calcOffset(24);\n\t\t\tthis.add(new FingerRepresentation(this.game, useNum, x+offset.x, y+offset.y, this.size-offset.o, this.color));\n\n\t\t} else if (rep === GLOBAL.NUMBER_REPRESENTATION.strikes) {\n\t\t\toffset = this.calcOffset(12);\n\t\t\tthis.add(new StrikeRepresentation(this.game, useNum, x+offset.x, y+offset.y, this.size-offset.o, this.color, this.max - this.min + 1));\n\n\t\t} else if (rep === GLOBAL.NUMBER_REPRESENTATION.objects) {\n\t\t\tvar s = this.create(x, y, this.spriteKey, (this.spriteFrame ? this.spriteFrame + Math.abs(this._number) : null));\n\t\t\tvar scale = this.size/(s.width > s.height ? s.width : s.height)*0.8;\n\t\t\ts.scale.set(scale);\n\t\t\ts.x = (!this.direction ? (this._number > 0 ? this.size * 0.8 : this.size * 1.2) : this.size)/2 - s.width/2;\n\t\t\ts.y = (this.direction ? (this._number > 0 ? this.size * 1.2 : this.size * 0.8) : this.size)/2 - s.height/2;\n\n\t\t} else if (rep === GLOBAL.NUMBER_REPRESENTATION.numbers) {\n\t\t\toffset = this.calcOffset(24);\n\t\t\tthis.add(new NumberRepresentation(this.game, this._number, x+offset.x - this.size/12, y+offset.y, this.size/2, this.color));\n\n\t\t} else if (rep === GLOBAL.NUMBER_REPRESENTATION.dice) {\n\t\t\toffset = this.calcOffset(12);\n\t\t\tthis.add(new DiceRepresentation(this.game, useNum, x+offset.x, y+offset.y, this.size-offset.o, this.color));\n\n\t\t} else if (rep === GLOBAL.NUMBER_REPRESENTATION.yesno) {\n\t\t\tthis._number = this._number % 2;\n\t\t\toffset = this.size*0.1;\n\t\t\tthis.add(new YesnoRepresentation(this.game, this._number, x + offset, y + offset, this.size - offset*2));\n\t\t}\n\t}\n};\n\n/**\n * Calculate the different offsets for the button (needed due to arrow in button).\n * @param {Number} offset - Offset from button edge (used like: this.size/offset).\n * @returns {Object} Offsets on the form { o: offset, x: x, y: y }.\n */\nNumberButton.prototype.calcOffset = function (offset) {\n\tvar t = {\n\t\tx: 0,\n\t\ty: 0,\n\t\to: this.size/offset\n\t};\n\n\tif (this.background) { // Probably square looking button.\n\t\tt.x = t.o*2;\n\t\tt.y = t.o*2;\n\t} else if (this.direction) { /* Up/Down */\n\t\tt.x = t.o*1.8;\n\t\tt.y = t.o*(this._number >= 0 ? 3.3 : 1);\n\t} else { /* Left/Right */\n\t\tt.x = t.o*(this._number >= 0 ? 1 : 3.3);\n\t\tt.y = t.o*2;\n\t}\n\n\tt.o *= 4;\n\treturn t;\n};\n\n/**\n * Set the size of this button.\n * @param {Number} The new size.\n * @returns {Object} This button.\n */\nNumberButton.prototype.setSize = function (size) {\n\tGeneralButton.prototype.setSize.call(this, size || this.size);\n\n\t// If the button should expand horizontally it will be rotated.\n\t// So we always want to change height, not width.\n\tthis.bg.height *= this.representations.length;\n\n\treturn this;\n};\n\n/**\n * Set the direction of the background button (where the arrow should point).\n * @param {Boolean} val - True = up/down, false = left/right.\n * @returns {Object} This button.\n */\nNumberButton.prototype.setDirection = function (val) {\n\tthis.direction = val;\n\tif (val) {\n\t\tthis.bg.rotation = -Math.PI/2;\n\t\tthis.bg.y += this.bg.width;\n\t\tthis.bg.adjusted = this.bg.width;\n\t} else {\n\t\tthis.bg.rotation = 0;\n\t\tthis.bg.y -= this.bg.adjusted || 0;\n\t}\n\n\tif (this.number) {\n\t\tthis.updateGraphics();\n\t}\n\n\treturn this;\n};","var GeneralButton = require('./GeneralButton.js');\n\nmodule.exports = SpriteButton;\n\nSpriteButton.prototype = Object.create(GeneralButton.prototype);\nSpriteButton.prototype.constructor = SpriteButton;\n\n/**\n * A button with a sprite on it.\n * @param {Object} game - A reference to the Phaser game.\n * @param {string} key - The sprite key.\n * @param {string} frame - The frame of the sprite (optional).\n * @param {Object} options - A list of options (see GeneralButton).\n * @return {Object} Itself.\n */\nfunction SpriteButton (game, key, frame, options) {\n\tGeneralButton.call(this, game, options); // Parent constructor.\n\n\tvar half = this.size/2;\n\n\tthis.sprite = this.create(half, half, key, frame);\n\tthis.sprite.anchor.set(0.5);\n\tthis._scaleSprite();\n\n\treturn this;\n}\n\n/**\n * Scale the sprite according to the button size.\n * @private\n */\nSpriteButton.prototype._scaleSprite = function () {\n\tvar padded = this.size*0.9;\n\n\tthis.sprite.scale.set(padded/(this.sprite.width > this.sprite.height ?\n\t\tthis.sprite.width : this.sprite.height));\n};\n\n/**\n * Set the size of this button.\n * @param {Number} The new size.\n */\nSpriteButton.prototype.setSize = function (size) {\n\tGeneralButton.prototype.setSize.call(this, size);\n\n\tif (this.sprite) {\n\t\tthis._scaleSprite();\n\t}\n};","var GeneralButton = require('./GeneralButton.js');\nvar GLOBAL = require('../../global.js');\n\nmodule.exports = TextButton;\n\nTextButton.prototype = Object.create(GeneralButton.prototype);\nTextButton.prototype.constructor = TextButton;\n\n/**\n * A button with text on it.\n * @param {Object} game - A reference to the Phaser game.\n * @param {string} text - The text for the button.\n * @param {Object} options - A list of options (in addition to GeneralButton):\n *        {number} fontSize: The size of the font (default is options.size * 0.8).\n *        {number} strokeThickness: The size of the stroke (default is 3).\n *        {string} strokeColor: The color of stroke (if any) (default options.color).\n *        {boolean} doNotAdapt: True if the size should not adapt to text size (default false).\n * @return {Object} Itself.\n */\nfunction TextButton (game, text, options) {\n\tGeneralButton.call(this, game, options); // Parent constructor.\n\tthis.doNotAdapt = options.doNotAdapt || false;\n\n\tvar half = this.size/2;\n\tvar fontSize = (options.fontSize || this.size*0.8);\n\tthis._text = game.add.text(half, half, text, {\n\t\tfont: fontSize + 'pt ' + GLOBAL.FONT,\n\t\tfill: this.color,\n\t\tstroke: options.strokeColor || this.color,\n\t\tstrokeThickness: options.strokeThickness || 3\n\t}, this);\n\tthis._text.anchor.set(0.5, 0.45);\n\n\t/* Do this to adapt button size. */\n\tthis.text = this.text;\n\n\tif (options.onClick) {\n\t\tthis._clicker = options.onClick;\n\t\t// This will be called in the GeneralButton's onInputDown\n\t\tthis.onClick = function () {\n\t\t\tif (this._clicker) {\n\t\t\t\tthis._clicker(this.text);\n\t\t\t}\n\t\t};\n\t}\n\n\treturn this;\n}\n\n/**\n * @property {string} text - The text on the button.\n */\nObject.defineProperty(TextButton.prototype, 'text', {\n\tget: function() {\n\t\treturn this._text.text;\n\t},\n\tset: function(value) {\n\t\tthis._text.text = value;\n\n\t\tif (!this.doNotAdapt) {\n\t\t\tthis.adaptSize();\n\t\t}\n\t}\n});\n\n/**\n * Adapt the button background to the text size.\n */\nTextButton.prototype.adaptSize = function () {\n\tthis.bg.width = (this._text.width > this.size ? this._text.width : this.size) + 30;\n\tthis.bg.height = (this._text.height > this.size ? this._text.height : this.size);\n\tthis._text.x = this.bg.width/2;\n\tthis._text.y = this.bg.height/2;\n};","module.exports = DiceRepresentation;\n\nDiceRepresentation.prototype = Object.create(Phaser.Sprite.prototype);\nDiceRepresentation.prototype.constructor = DiceRepresentation;\n\n/**\n * Dice representation of a number.\n * This is similar to DotsRepresentation, but has a pattern for the dot positions.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} number - The number to represent.\n * @param {number} x - X position.\n * @param {number} y - Y position.\n * @param {number} size - Width and height of the representation (default 100).\n * @param {string} color - The color of the representation (default '#000000').\n * @return {Object} Itself.\n */\nfunction DiceRepresentation (game, number, x, y, size, color) {\n\tsize = size || 100;\n\tthis.radius = parseInt(size/8);\n\tvar top = this.radius+1;\n\tvar bottom = size-this.radius-1;\n\tvar left = top;\n\tvar right = bottom;\n\tvar middle = parseInt(size/2);\n\n\t/*\n\t * For more information about context:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\n\t */\n\tvar bmd = game.add.bitmapData(size, size);\n\tvar ctx = bmd.ctx;\n\tctx.fillStyle = color || '#000000';\n\tctx.beginPath();\n\n\tif (number === 1) {\n\t\tthis.createDots(ctx, [[middle, middle]]);\n\t} else if (number === 2) {\n\t\tthis.createDots(ctx, [[left, top], [right, bottom]]);\n\t} else if (number === 3) {\n\t\tthis.createDots(ctx, [[left, top], [middle, middle], [right, bottom]]);\n\t} else if (number === 4) {\n\t\tthis.createDots(ctx, [[left, top], [right, top], [left, bottom], [right, bottom]]);\n\t} else if (number === 5) {\n\t\tthis.createDots(ctx, [[left, top], [right, top],\n\t\t\t[middle, middle], [left, bottom], [right, bottom]]);\n\t} else if (number === 6) {\n\t\tthis.createDots(ctx, [[left, top], [right, top],\n\t\t\t[left, middle], [right, middle], [left, bottom], [right, bottom]]);\n\t} else if (number === 7) {\n\t\tthis.createDots(ctx, [[left, top], [right, top],\n\t\t\t[left, middle], [middle, middle], [right, middle],\n\t\t\t[left, bottom], [right, bottom]]);\n\t} else if (number === 8) {\n\t\tthis.createDots(ctx, [[left, top],  [middle, top], [right, top],\n\t\t\t[left, middle], [right, middle],\n\t\t\t[left, bottom], [middle, bottom], [right, bottom]]);\n\t} else if (number === 9) {\n\t\tthis.createDots(ctx, [[left, top],  [middle, top], [right, top],\n\t\t\t[left, middle], [middle, middle], [right, middle],\n\t\t\t[left, bottom], [middle, bottom], [right, bottom]]);\n\t}\n\n\tctx.closePath();\n\tctx.fill();\n\n\tPhaser.Sprite.call(this, game, x, y, bmd); // Parent constructor.\n\treturn this;\n}\n\nDiceRepresentation.prototype.createDots = function (ctx, dots) {\n\tctx.arc(dots[0][0], dots[0][1], this.radius, 0, Math.PI2);\n\tfor (var i = 1; i < dots.length; i++) {\n\t\tctx.moveTo(dots[i][0], dots[i][1]);\n\t\tctx.arc(dots[i][0], dots[i][1], this.radius, 0, Math.PI2);\n\t}\n};","module.exports = DotsRepresentation;\n\nDotsRepresentation.prototype = Object.create(Phaser.Sprite.prototype);\nDotsRepresentation.prototype.constructor = DotsRepresentation;\n\n/**\n * Dots representation of a number.\n * This is similar to DiceRepresentation, but has a random dot position.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} number - The number to represent.\n * @param {number} xPos - X position.\n * @param {number} yPos - Y position.\n * @param {number} size - Width and height of the representation (default 100).\n * @param {string} color - The color of the representation (default '#000000').\n * @return {Object} Itself.\n */\nfunction DotsRepresentation (game, number, xPos, yPos, size, color) {\n\tsize = size || 100;\n\tvar radius = parseInt(size/9);\n\tvar dotSize = radius*2 + 1; // diameter + offset\n\tvar left = radius + 1;\n\tvar right = size - radius - 1;\n\tvar top = left;\n\tvar bottom = right;\n\n\t/*\n\t * For more information about context:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\n\t */\n\tvar bmd = game.add.bitmapData(size, size);\n\tvar ctx = bmd.ctx;\n\tctx.fillStyle = color || '#000000';\n\tctx.beginPath();\n\n\t/* Fill up with dots. */\n\tvar dots = [];\n\tvar x, y, t, i, overlap;\n\twhile (dots.length < number) {\n\t\t/* The dots will be placed randomly. */\n\t\tx = game.rnd.integerInRange(left, right);\n\t\ty = game.rnd.integerInRange(top, bottom);\n\t\tt = { x: x, y: y };\n\t\toverlap = false;\n\n\t\t/* And then checked that they do not overlap other dots. */\n\t\tfor (i = 0; i < dots.length; i++) {\n\t\t\tif (game.physics.arcade.distanceBetween(t, dots[i]) < dotSize) {\n\t\t\t\toverlap = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t/* And added if they do not. */\n\t\tif (!overlap) {\n\t\t\tdots.push(t);\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.arc(x, y, radius, 0, Math.PI2);\n\t\t}\n\t}\n\n\tctx.closePath();\n\tctx.fill();\n\n\tPhaser.Sprite.call(this, game, xPos, yPos, bmd); // Parent constructor.\n\treturn this;\n}","module.exports = FingerRepresentation;\n\nFingerRepresentation.prototype = Object.create(Phaser.Sprite.prototype);\nFingerRepresentation.prototype.constructor = FingerRepresentation;\n\n/**\n * Finger representation of a number.\n * NOTE: Only available between numbers 1-9.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} number - The number to represent.\n * @param {number} xPos - X position.\n * @param {number} yPos - Y position.\n * @param {number} size - Width and height of the representation (default 100).\n * @param {string} color - The color of the representation (default '#000000').\n * @return {Object} Itself.\n */\nfunction FingerRepresentation (game, number, xPos, yPos, size, color) {\n\tsize = size || 100;\n\tvar half = size/2;\n\tvar width = size/20;\n\tvar middle = 11.2;\n\n\t/*\n\t * For more information about context:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\n\t */\n\tvar bmd = game.add.bitmapData(size, size);\n\tvar ctx = bmd.ctx;\n\tctx.fillStyle = color || '#000000';\n\tctx.beginPath();\n\n\tvar x, y, height;\n\tif (number >= 1) {\n\t\tx = 0;\n\t\ty = half*0.8;\n\t\theight = half*0.7;\n\t\tctx.moveTo(x, y);\n\t\tctx.lineTo(width, y - width);\n\t\tctx.lineTo(width*2.5, y + height);\n\t\tctx.lineTo(width*1.5, y + height + width);\n\t\tctx.lineTo(x, y);\n\t}\n\tif (number >= 2) {\n\t\tx = width*2.2;\n\t\ty = half*0.5;\n\t\theight = half*0.9;\n\t\tctx.moveTo(x, y);\n\t\tctx.lineTo(x + width, y - width);\n\t\tctx.lineTo(x + width*2, y + height);\n\t\tctx.lineTo(x + width, y + height + width);\n\t\tctx.lineTo(x, y);\n\t}\n\tif (number >= 3) {\n\t\tx = width*4.4;\n\t\ty = half*0.3;\n\t\theight = half*1.1;\n\t\tctx.moveTo(x, y);\n\t\tctx.lineTo(x + width, y);\n\t\tctx.lineTo(x + width, y + height);\n\t\tctx.lineTo(x, y + height);\n\t\tctx.lineTo(x, y);\n\t}\n\tif (number >= 4) {\n\t\tx = width*6.6;\n\t\ty = half*0.5;\n\t\theight = half;\n\t\tctx.moveTo(x, y - width);\n\t\tctx.lineTo(x + width, y);\n\t\tctx.lineTo(x + width/2, y + height);\n\t\tctx.lineTo(x - width/2, y + height - width);\n\t\tctx.lineTo(x, y - width);\n\t}\n\tif (number >= 5) {\n\t\tx = width*8.6;\n\t\ty = half;\n\t\theight = half*0.7;\n\t\tctx.moveTo(x, y - width);\n\t\tctx.lineTo(x + width, y);\n\t\tctx.lineTo(x, y + height);\n\t\tctx.lineTo(x - width, y + height + width);\n\t\tctx.lineTo(x, y - width);\n\t}\n\tif (number >= 6) {\n\t\tx = width*middle;\n\t\ty = half;\n\t\theight = half*0.7;\n\t\tctx.moveTo(x, y);\n\t\tctx.lineTo(x + width, y - width);\n\t\tctx.lineTo(x + width*2, y + height + width);\n\t\tctx.lineTo(x + width, y + height);\n\t\tctx.lineTo(x, y);\n\t}\n\tif (number >= 7) {\n\t\tx = width*(middle+2);\n\t\ty = half*0.5;\n\t\theight = half;\n\t\tctx.moveTo(x, y);\n\t\tctx.lineTo(x + width, y - width);\n\t\tctx.lineTo(x + width*1.5, y + height - width);\n\t\tctx.lineTo(x + width/2, y + height);\n\t\tctx.lineTo(x, y);\n\t}\n\tif (number >= 8) {\n\t\tx = width*(middle + 4.2);\n\t\ty = half*0.3;\n\t\theight = half*1.1;\n\t\tctx.moveTo(x, y);\n\t\tctx.lineTo(x + width, y);\n\t\tctx.lineTo(x + width, y + height);\n\t\tctx.lineTo(x, y + height);\n\t\tctx.lineTo(x, y);\n\t}\n\tif (number >= 9) {\n\t\tx = width*(middle + 6.4);\n\t\ty = half*0.5;\n\t\theight = half*0.9;\n\t\tctx.moveTo(x, y - width);\n\t\tctx.lineTo(x + width, y);\n\t\tctx.lineTo(x, y + height + width);\n\t\tctx.lineTo(x - width, y + height);\n\t\tctx.lineTo(x, y - width);\n\t}\n\n\tctx.closePath();\n\tctx.fill();\n\n\tPhaser.Sprite.call(this, game, xPos, yPos, bmd); // Parent constructor.\n\treturn this;\n}","var GLOBAL = require('../../global.js');\nmodule.exports = NumberRepresentation;\n\nNumberRepresentation.prototype = Object.create(Phaser.Text.prototype);\nNumberRepresentation.prototype.constructor = NumberRepresentation;\n\n/**\n * Number symbol representation of a number.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} number - The number to represent.\n * @param {number} x - X position.\n * @param {number} y - Y position.\n * @param {number} size - Font size of the representation (default 50).\n * @param {string} color - The color of the representation (default '#000000').\n * @return {Object} Itself.\n */\nfunction NumberRepresentation (game, number, x, y, size, color) {\n\tsize = size || 50;\n\tcolor = color || '#000000';\n\n\tPhaser.Text.call(this, game, x+size, y+size, number.toString(), {\n\t\tfont: size + 'pt ' + GLOBAL.FONT,\n\t\tfill: color,\n\t\tstroke: color,\n\t\tstrokeThickness: 3\n\t}); // Parent constructor.\n\tthis.anchor.set(0.5);\n\n\n\t//this.updatePosition();\n\treturn this;\n}\n\nNumberRepresentation.updatePosition = function(x1,y1) {\n\n\t\tthis.x = x1;\n\t\tthis.y = y1;\n};","module.exports = StrikeRepresentation;\n\nStrikeRepresentation.prototype = Object.create(Phaser.Sprite.prototype);\nStrikeRepresentation.prototype.constructor = StrikeRepresentation;\n\n/**\n * Strike/Tick representation of a number.\n * @param {Object} game - A reference to the Phaser game.\n * @param {number} number - The number to represent.\n * @param {number} xPos - X position.\n * @param {number} yPos - Y position.\n * @param {number} size - Width and height of the representation (default 100).\n * @param {string} color - The color of the representation (default '#000000').\n * @param {number} max - If you have a range of numbers, set this to the highest one,\n *                       that way the height of the individual strikes will be the same\n *                       (default argument number).\n * @return {Object} Itself.\n */\nfunction StrikeRepresentation (game, number, xPos, yPos, size, color, max) {\n\tsize = size || 100;\n\tmax = max || number;\n\tmax = Math.abs(max);\n\tif (max < number) {\n\t\tmax = number;\n\t}\n\n\tvar diagTop = 0.8;\n\tvar diagBottom = 0.2;\n\tvar width = size/10;\n\tvar half = width/2;\n\tvar padding = width*1.25;\n\tvar offset = 2;\n\tvar height = size/Math.ceil(max/5) - offset;\n\n\tvar pos = (size - width - padding*2) / 3;\n\n\t/*\n\t * For more information about context:\n\t * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D\n\t */\n\tvar bmd = new Phaser.BitmapData(game, '', size, size);\n\tvar ctx = bmd.ctx;\n\tctx.fillStyle = color || '#000000';\n\tctx.beginPath();\n\n\tvar x = padding;\n\tvar y = offset/2;\n\tfor (var i = 1; i <= number; i++) {\n\t\tif (i % 5 === 0 && i !== 0) {\n\t\t\tctx.moveTo(0,           y + height*diagTop - half   );\n\t\t\tctx.lineTo(size - half, y + height*diagBottom       );\n\t\t\tctx.lineTo(size,        y + height*diagBottom + half);\n\t\t\tctx.lineTo(half,        y + height*diagTop          );\n\t\t\tctx.lineTo(0,           y + height*diagTop - half   );\n\t\t\tx = padding;\n\t\t\ty += height + offset;\n\t\t} else {\n\t\t\tctx.fillRect(x, y, width, height);\n\t\t\tx += pos;\n\t\t}\n\t}\n\n\tctx.closePath();\n\tctx.fill();\n\n\tPhaser.Sprite.call(this, game, xPos, yPos, bmd); // Parent constructor.\n\treturn this;\n}","module.exports = YesnoRepresentation;\n\nYesnoRepresentation.prototype = Object.create(Phaser.Sprite.prototype);\nYesnoRepresentation.prototype.constructor = YesnoRepresentation;\n\n/**\n * Yes - No representation.\n * @param {Object} game - A reference to the Phaser game.\n * @param {boolean} yes - True is yes, false is no.\n * @param {number} x - X position.\n * @param {number} y - Y position.\n * @param {number} size - Font size of the representation (default 50).\n * @return {Object} Itself.\n */\nfunction YesnoRepresentation (game, yes, x, y, size) {\n\tsize = size || 50;\n\tvar typ = yes ? 'yes' : 'no';\n\n\tPhaser.Sprite.call(this, game, x, y, 'objects', typ + 1);\n\tthis.width = size;\n\tthis.height = size;\n\n\tthis.animations.add('cycle', [typ + 1, typ + 2, typ + 1, typ + 3, typ + 1], 5, true).play();\n\n\treturn this;\n}","//var backend = require('./backend.js');\nvar GLOBAL = require('./global.js');\nvar LANG = require('./language.js');\nvar EventSystem = require('./pubsub.js');\n\nmodule.exports = Player;\n\n/**\n * Creates an instance of Player.\n * The player will load information about it from server upon instantiation.\n *\n * @constructor\n * @param {Object} game - A reference to the Phaser game.\n */\nfunction Player (game) {\n\tthis.game = game;\n\n\t/**\n\t * @property {number} _agent - A pointer to the agent type.\n\t * @private\n\t */\n\tthis._agent = null;\n\n\t/**\n\t * @property {number} _water - The amount of water the player has.\n\t * @private\n\t */\n\tthis._water = 0;\n\n\t/**\n\t * @property {number} name - The name of the player.\n\t */\n\tthis.name = LANG.TEXT.anonymous;\n\n\t/**\n\t * @property {number} tint - A tint for the agent.\n\t */\n\tthis.tint = 0xffffff;\n\n\t/* Load player data from server. */\n\t/*var data =  backend.getPlayer();\n\tif (data) {\n\t\tthis.name = data.name;\n\t\tthis.agent = GLOBAL.AGENT[data.agent.type];\n\t\tthis.tint = data.agent.tint || this.tint;\n\t\tthis._water = data.water || 0; // Do not use water since that fires an event.\n\t}*/\n\tthis.name= 'Erik Anderberg';\n\tthis._agent = GLOBAL.AGENT[1];\n\tthis.tint = this.tint;\n\n\treturn this;\n}\n\n/**\n * @property {number} maxWater - The maximum amount of water the player can have.\n */\nPlayer.prototype.maxWater = 6;\n\n/**\n * @property {number} water - The amount of water the player has.\n *                            Publishes waterAdded event when changed.\n */\nObject.defineProperty(Player.prototype, 'water', {\n\tget: function() {\n\t\treturn this._water;\n\t},\n\tset: function(value) {\n\t\tif (value >= 0) {\n\t\t\tvalue = value > this.maxWater ? this.maxWater : value;\n\t\t\tvar diff = value - this._water;\n\t\t\tthis._water = value;\n\t\t\tEventSystem.publish(GLOBAL.EVENT.waterAdded, [this._water, diff]);\n\t\t}\n\t}\n});\n\n/**\n * @property {Object} agent - Pointer to the agent constructor.\n *                            NOTE: Do not use this to create an agent, use createAgent.\n *                            NOTE: Updates the language object as well.\n */\nObject.defineProperty(Player.prototype, 'agent', {\n\tget: function() {\n\t\treturn this._agent;\n\t},\n\tset: function(value) {\n\t\tthis._agent = value;\n\t\tif (this._agent && this._agent.prototype.id) {\n\t\t\tLANG.setAgent(this._agent.prototype.id);\n\t\t}\n\t}\n});\n\n/**\n * Creates an agent of the current type the player uses.\n * @returns {Object} An instance of the agent belonging to the player.\n */\nPlayer.prototype.createAgent = function () {\n\tvar agent = new this.agent(this.game);\n\tagent.tint = this.tint;\n\treturn agent;\n};","/**\n * A publish/subscribe style event system.\n * Subscribe to an event and it will run when someone publish it.\n *\n * There are two subscription types: regular and persistent.\n * The difference is that persistent will not be removed by\n * the clear function unless explicitly specified.\n * @global\n */\nmodule.exports = {\n\t/**\n\t * Registered subscriptions.\n\t * @property {Object} _events\n\t * @private\n\t */\n\t_events: {},\n\n\t/**\n\t * Registered persistent subscriptions.\n\t * @property {Object} _persistent\n\t * @private\n\t */\n\t_persistent: {},\n\n\t/**\n\t * Push a subscription to a list.\n\t * @param {Object} to - The list to add to (use _events or _persistent).\n\t * @param {string} topic - The topic of the event.\n\t * @param {function} callback - The function to run when topic is published.\n\t * @private\n\t */\n\t_pushEvent: function (to, topic, callback) {\n\t\tif (!to[topic]) {\n\t\t\tto[topic] = [];\n\t\t}\n\t\tto[topic].push(callback);\n\t},\n\n\t/**\n\t * Publish an event. This will run all its subscriptions.\n\t * @param {string} topic - The topic of the event.\n\t * @param {Array} args - The arguments to supply to the subscriptions.\n\t */\n\tpublish: function (topic, args) {\n\t\tvar subs = [].concat(this._events[topic], this._persistent[topic]);\n\t\tvar len = subs.length;\n\n\t\twhile (len--) {\n\t\t\tif (subs[len]) {\n\t\t\t\tsubs[len].apply(this, args || []);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Subscribe to a certain event.\n\t * NOTE: scope will be lost.\n\t * @param {string} topic - The topic of the event.\n\t * @param {function} callback - The function to run when event is published.\n\t * @param {boolean} persistent - If the subscription should be added to the persistent list.\n\t * @return {Array} A handle to the subscription.\n\t */\n\tsubscribe: function (topic, callback, persistent) {\n\t\tthis._pushEvent((persistent ? this._persistent : this._events), topic, callback);\n\t\treturn [topic, callback]; // Array\n\t},\n\n\t/**\n\t * Unsubscribe to a certain regular event.\n\t * @param {Array|string} handle - The array returned by the subscribe function or\n\t *                                the topic if handle is missing.\n\t * @param {function} callback - Supply this if you do not have an array handle.\n\t */\n\tunsubscribe: function (handle, callback) {\n\t\tvar subs = this._events[callback ? handle : handle[0]];\n\t\tcallback = callback || handle[1];\n\t\tvar len = subs ? subs.length : 0;\n\n\t\twhile (len--) {\n\t\t\tif (subs[len] === callback) {\n\t\t\t\tsubs.splice(len, 1);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Clear the event lists.\n\t * @param {boolean} persistent - True will delete all persistent events as well.\n\t */\n\tclear: function (persistent) {\n\t\tthis._events = {};\n\t\tif (persistent) {\n\t\t\tthis._persistent = {};\n\t\t}\n\t}\n};","var SuperState = require('./SuperState.js');\nvar backend = require('../backend.js');\nvar GLOBAL = require('../global.js');\nvar LANG = require('../language.js');\nvar util = require('../utils.js');\nvar Hedgehog = require('../agent/Hedgehog.js');\nvar Mouse = require('../agent/Mouse.js');\nvar Panda = require('../agent/Panda.js');\nvar Menu = require('../objects/Menu.js');\nvar NumberButton = require('../objects/buttons/NumberButton.js');\nvar TextButton = require('../objects/buttons/TextButton.js');\n\nmodule.exports = AgentSetupState;\n\nAgentSetupState.prototype = Object.create(SuperState.prototype);\nAgentSetupState.prototype.constructor = AgentSetupState;\n\n/**\n * The state for choosing agent.\n */\nfunction AgentSetupState () {}\n\n/* Phaser state function */\nAgentSetupState.prototype.preload = function() {\n\tthis.load.audio('entryMusic', ['audio/music.m4a', 'audio/music.ogg', 'audio/music.mp3']);\n\tthis.load.audio('chooseSpeech', LANG.SPEECH.agentIntro.speech);\n\tthis.load.atlasJSONHash(Panda.prototype.id, 'img/agent/panda/atlas.png', 'img/agent/panda/atlas.json');\n\tthis.load.atlasJSONHash(Hedgehog.prototype.id, 'img/agent/hedgehog/atlas.png', 'img/agent/hedgehog/atlas.json');\n\tthis.load.atlasJSONHash(Mouse.prototype.id, 'img/agent/mouse/atlas.png', 'img/agent/mouse/atlas.json');\n};\n\n/* Phaser state function */\nAgentSetupState.prototype.create = function () {\n\tvar _this = this;\n\tvar spacing = 450;\n\tvar scale = { x: 0.3, y: 0.3 };       // Default scale\n\tvar scaleActive = { x: 0.4, y: 0.4 }; // Scale when pushed\n\tvar scalePicked = { x: 0.5, y: 0.5 }; // Scale when pushed the second time\n\tvar slideTime = 1;\n\tvar fontStyle = {\n\t\tfont: '50pt ' +  GLOBAL.FONT,\n\t\tfill: '#ffff00',\n\t\tstroke: '#000000',\n\t\tstrokeThickness: 5\n\t};\n\tvar waving;\n\n\tvar speech = util.createAudioSheet.call(this, 'chooseSpeech', LANG.SPEECH.agentIntro.markers);\n\n\n\tfunction clickAgent () {\n\t\tif (a === this) {\n\t\t\t/* Agent was already active, go into coloring mode */\n\t\t\tpickAgent();\n\t\t} else {\n\t\t\tif (a) {\n\t\t\t\tcancelAgent();\n\t\t\t\tTweenMax.to(a.scale, slideTime, scale); // Scale down the old agent\n\t\t\t}\n\t\t\ta = this;\n\t\t\tTweenMax.to(a.scale, slideTime, scaleActive); // Scale up the new agent\n\t\t\t// Move the agent group to get the sliding effect on all agents\n\t\t\tTweenMax.to(agents, slideTime, {\n\t\t\t\tx: -(agents.children.indexOf(a) * spacing),\n\t\t\t\tease: Power2.easeOut,\n\t\t\t\tonStart: function () { speech.stop(); },\n\t\t\t\tonComplete: function () {\n\t\t\t\t\ta.say(speech, a.id + 'Hello').play(a.id + 'Hello');\n\t\t\t\t\twaving = a.wave(2, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction fadeInterface (value) {\n\t\tconfirm.text = LANG.TEXT.confirmFriend + a.agentName + '?';\n\t\tutil.fade(title, !value, value ? 0.2 : 0.5);\n\t\tutil.fade(confirm, value, !value ? 0.2 : 0.5);\n\t\tutil.fade(noToAgent, value);\n\t\tutil.fade(yesToAgent, value);\n\t\tutil.fade(color, value);\n\t}\n\n\tfunction pickAgent () {\n\t\tTweenMax.to(a.scale, 0.5, scalePicked);\n\t\tfadeInterface(true);\n\t}\n\n\tfunction cancelAgent () {\n\t\tTweenMax.to(a.scale, 0.5, scaleActive);\n\t\tfadeInterface(false);\n\t\tnoToAgent.reset();\n\t}\n\n\tfunction chooseAgent () {\n\t\t_this.input.disabled = true;\n\t\tif (waving) {\n\t\t\twaving.kill();\n\t\t}\n\t\tfadeInterface(false);\n\t\tspeech.stop();\n\t\tvar t = new TimelineMax();\n\t\tt.addSound(speech, a, a.id + 'FunTogether');\n\t\tt.addCallback(function () {\n\t\t\ta.fistPump();\n\t\t\tbackend.putAgent({ agent: { type: a.key, tint: a.tint } });\n\t\t\t_this.game.player.agent = GLOBAL.AGENT[a.key];\n\t\t\t_this.game.player.tint = a.tint;\n\t\t}, 0);\n\t\tt.addCallback(function () {\n\t\t\t_this.input.disabled = false;\n\t\t\t_this.state.start(GLOBAL.STATE.beach);\n\t\t}, '+=0.5');\n\t}\n\n\t// Add music\n\tthis.add.music('entryMusic', 0.3, true).play();\n\n\t// Add background\n\tthis.add.image(0, 0, 'entryBg');\n\n\tvar agents = this.add.group();\n\tagents.x = spacing;\n\tvar a;\n\tfor (var key in GLOBAL.AGENT) {\n\t\ta = new GLOBAL.AGENT[key](this.game);\n\t\tthis.add.text(0, -(a.body.height/2) - 50, a.agentName, fontStyle, a).anchor.set(0.5);\n\t\ta.x = this.world.centerX + spacing * key;\n\t\ta.y = this.world.centerY + 70;\n\t\ta.scale.x = scale.x;\n\t\ta.scale.y = scale.y;\n\t\ta.body.inputEnabled = true;\n\t\ta.body.events.onInputDown.add(clickAgent, a);\n\t\ta.key = key;\n\t\tagents.add(a);\n\t}\n\ta = null;\n\n\tvar title = this.add.text(this.world.centerX, 75, LANG.TEXT.pickFriend, fontStyle);\n\ttitle.anchor.set(0.5);\n\n\tvar confirm = this.add.text(this.world.centerX, 75, '', fontStyle);\n\tconfirm.anchor.set(0.5);\n\tconfirm.visible = false;\n\n\tvar noToAgent = new NumberButton(this.game, 2, GLOBAL.NUMBER_REPRESENTATION.yesno, {\n\t\tx: this.world.centerX - 275,\n\t\ty: this.world.centerY*0.5,\n\t\tsize: 75,\n\t\tonClick: cancelAgent\n\t});\n\tnoToAgent.visible = false;\n\tthis.world.add(noToAgent);\n\n\tvar yesToAgent = new NumberButton(this.game, 1, GLOBAL.NUMBER_REPRESENTATION.yesno, {\n\t\tx: this.world.centerX + 200,\n\t\ty: this.world.centerY*0.5,\n\t\tsize: 75,\n\t\tonClick: chooseAgent\n\t});\n\tyesToAgent.visible = false;\n\tthis.world.add(yesToAgent);\n\n\tvar color = new TextButton(this.game, LANG.TEXT.changeColor, {\n\t\tx: this.world.centerX,\n\t\ty: this.world.height - 75,\n\t\tfontSize: 30,\n\t\tonClick: function () { a.tint = _this.game.rnd.integerInRange(0x000000, 0xffffff); }\n\t});\n\tcolor.x -= color.width/2;\n\tcolor.visible = false;\n\tthis.world.add(color);\n\n\tthis.world.add(new Menu(this.game));\n\n\n\t/* When the state starts. */\n\tthis.startGame = function () {\n\t\t/* Choose the first agent if player does not have one */\n\t\tvar current = 0;\n\t\tif (this.game.player.agent) {\n\t\t\tfor (var k in agents.children) {\n\t\t\t\tif (agents.children[k].id === this.game.player.agent.prototype.id) {\n\t\t\t\t\tagents.children[k].tint = this.game.player.tint;\n\t\t\t\t\tcurrent = k;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tagents.children[current].body.events.onInputDown.dispatch();\n\t};\n};\n\n/* Phaser state function */\nAgentSetupState.prototype.shutdown = function () {\n\tif (!this.game.player.agent || this.game.player.agent.prototype.id !== Panda.prototype.id) {\n\t\tthis.cache.removeSound(Panda.prototype.id + 'Speech');\n\t\tthis.cache.removeImage(Panda.prototype.id);\n\t}\n\tif (!this.game.player.agent || this.game.player.agent.prototype.id !== Hedgehog.prototype.id) {\n\t\tthis.cache.removeSound(Hedgehog.prototype.id + 'Speech');\n\t\tthis.cache.removeImage(Hedgehog.prototype.id);\n\t}\n\tif (!this.game.player.agent || this.game.player.agent.prototype.id !== Mouse.prototype.id) {\n\t\tthis.cache.removeSound(Mouse.prototype.id + 'Speech');\n\t\tthis.cache.removeImage(Mouse.prototype.id);\n\t}\n\n\tSuperState.prototype.shutdown.call(this);\n};","var SuperState = require('./SuperState.js');\r\nvar GLOBAL = require('../global.js');\r\nvar LANG = require('../language.js');\r\nvar Cover = require('../objects/Cover.js');\r\nvar Menu = require('../objects/Menu.js');\r\n\r\nmodule.exports = BeachState;\r\n\r\nBeachState.prototype = Object.create(SuperState.prototype);\r\nBeachState.prototype.constructor = BeachState;\r\n\r\n\r\n/**\r\n * The beach of the game.\r\n * The base from where you go to the subgames\r\n * Basically the GardenState without the garden and backend\r\n */\r\nfunction BeachState () {}\r\n\r\n/* Phaser state function */\r\nBeachState.prototype.preload = function() {\r\n    if (!this.cache._sounds[this.game.player.agent.prototype.id + 'Speech']) {\r\n        this.load.audio(this.game.player.agent.prototype.id + 'Speech', LANG.SPEECH.AGENT.speech);\r\n    }\r\n    if (!this.cache._sounds.gardenMusic) {\r\n        this.load.audio('gardenMusic', ['audio/garden/music.m4a', 'audio/garden/music.ogg', 'audio/garden/music.mp3']);\r\n    }\r\n    if (!this.cache._images.garden) {\r\n        this.load.atlasJSONHash('garden', 'img/garden/atlas.png', 'img/garden/atlas.json');\r\n    }\r\n\r\n\r\n};\r\n\r\nBeachState.prototype.create = function () {\r\n    // Add music\r\n    this.add.music('gardenMusic', 0.2, true).play();\r\n\r\n    // Add background\r\n    this.add.sprite(0, 0, 'garden', 'bg');\r\n\r\n    // Add sign to go to next scenario\r\n    //var sure = false;\r\n    var sign = this.add.sprite(750, 100, 'garden', 'sign');\r\n    sign.inputEnabled = true;\r\n    sign.events.onInputDown.add(function () {\r\n        // This happens either on local machine or on \"trial\" version of the game.\r\n        if (typeof Routes === 'undefined' || Routes === null) {\r\n            this.game.state.start(GLOBAL.STATE.scenario, true, false);\r\n            return;\r\n        }\r\n\r\n\r\n        var t = new TimelineMax();\r\n        t.addCallback(function () {\r\n            disabler.visible = true;\r\n        });\r\n        t.addCallback(function () {\r\n            disabler.visible = false;\r\n        });\r\n    }, this);\r\n\r\n    var startPos = 200;\r\n    var height = (this.world.height - startPos)/3;\r\n    var agent = this.game.player.createAgent();\r\n    agent.scale.set(0.2);\r\n    agent.x = -100;\r\n    agent.y = startPos + height - agent.height/2;\r\n    this.world.add(agent);\r\n\r\n\r\n    /* Add disabler. */\r\n    var disabler = new Cover(this.game, '#ffffff', 0);\r\n    this.world.add(disabler);\r\n\r\n    /* Add the menu */\r\n    this.world.add(new Menu(this.game));\r\n\r\n    this.startGame = function () {\r\n        var t = new TimelineMax().skippable();\r\n        t.add(agent.move({ x: this.world.centerX }, 3));\r\n        t.addLabel('sign');\r\n        t.add(agent.wave(1, 1));\r\n        t.addCallback(agent.eyesFollowObject, 'sign', [sign], agent);\r\n        t.addSound(agent.speech, agent, 'gardenSign', 'sign');\r\n        t.addCallback(function () {\r\n            agent.eyesStopFollow();\r\n            disabler.visible = false;\r\n        }, null, null, this);\r\n    };\r\n};\r\n\r\n","var GLOBAL = require('../global.js');\nvar LANG = require('../language.js');\nvar EventSystem = require('../pubsub.js');\nvar Modal = require('../objects/Modal.js');\nvar Hedgehog = require('../agent/Hedgehog.js');\nvar Mouse = require('../agent/Mouse.js');\nvar Panda = require('../agent/Panda.js');\n\nmodule.exports = BootState;\n\n/**\n * The boot state will load the first parts of the game and common game assets.\n * Add assets that will be used by many states.\n */\nfunction BootState () {}\n\n/**\n * @property {boolean} _isLoaded - Used for loading all assets. See bootGame.\n * @default\n * @private\n */\nBootState.prototype._fontLoaded = false;\n\n/* Phaser state function */\nBootState.prototype.preload = function () {\n\tvar _this = this;\n\n\tGLOBAL.STATE_KEYS = Object.keys(this);\n\tGLOBAL.STATE_KEYS.push('loaded');\n\n\t/* Make sure tweens are stopped when pausing. */\n\tthis.game.onPause.add(function () {\n\t\tTweenMax.globalTimeScale(0);\n\t\tthis.game.sound.pauseAll();\n\t}, this);\n\tthis.game.onResume.add(function () {\n\t\tTweenMax.globalTimeScale(1);\n\t\tthis.game.sound.resumeAll();\n\t}, this);\n\n\n\t/* Show loading progress accordingly */\n\tthis.load.onFileComplete.add(function (progress) {\n\t\tdocument.querySelector('.progress').innerHTML = progress + '%';\n\t\tif (progress >= 100) {\n\t\t\tdocument.querySelector('.loading').style.display = 'none';\n\t\t} else {\n\t\t\tdocument.querySelector('.loading').style.display = 'block';\n\t\t}\n\t});\n\n\t/* Respond to connection problems */\n\tEventSystem.subscribe(GLOBAL.EVENT.connection, function (status) {\n\t\tif (status) {\n\t\t\tdocument.querySelector('.loading').style.display = 'none';\n\t\t} else {\n\t\t\tdocument.querySelector('.progress').innerHTML = LANG.TEXT.connectionLost;\n\t\t\tdocument.querySelector('.loading').style.display = 'block';\n\t\t}\n\t}, true);\n\n\tEventSystem.subscribe(GLOBAL.EVENT.connectionLost, function () {\n\t\t_this.game.world.add(new Modal(_this.game, LANG.TEXT.connectionLostMessage, 20, function () {\n\t\t\tdocument.querySelector('.loading').style.display = 'none';\n\t\t\t_this.game.state.start(GLOBAL.STATE.entry);\n\t\t}));\n\t}, true);\n\n\n\t/* Make sure the game scales according to resolution */\n\tthis.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;\n\tthis.scale.pageAlignHorizontally = true;\n\tthis.scale.pageAlignVertically = true;\n\n\t/* Setup sound manager */\n\t// Array to hold music objects, needed to change bg-volume\n\tthis.sound._music = [];\n\n\t/* Use stored volumes, if any. */\n\tthis.sound._fgVolume = 1;\n\tif (typeof localStorage.fgVolume !== 'undefined') {\n\t\tthis.sound.fgVolume = localStorage.fgVolume;\n\t}\n\tthis.sound._bgVolume = 1;\n\tif (typeof localStorage.bgVolume !== 'undefined') {\n\t\tthis.sound.bgVolume = localStorage.bgVolume;\n\t}\n\n\t// Overshadow the original sound managers add function.\n\t// To save maxVolume for the sound and setup actual volume according to fg.\n\tthis.sound.add = function (key, volume, loop, connect) {\n\t\tvar sound = Phaser.SoundManager.prototype.add.call(this, key, volume, loop, connect);\n\t\tsound.maxVolume = sound.volume;\n\t\tsound.volume = sound.maxVolume * this.fgVolume;\n\t\treturn sound;\n\t};\n\t// Overshadow the original sound managers remove function.\n\t// To make sure that object is removed from music array.\n\tthis.sound.remove = function (sound) {\n\t\tvar success = Phaser.SoundManager.prototype.remove.call(this, sound);\n\t\tif (this._music.indexOf(sound) >= 0) {\n\t\t\tthis._music.splice(this._music.indexOf(sound), 1);\n\t\t}\n\t\treturn success;\n\t};\n\t// Overshadow the original sound objects play function.\n\t// To set volume according to fg/bg.\n\tvar soundFunction = Phaser.Sound.prototype.play;\n\tPhaser.Sound.prototype.play = function (marker, position, volume, loop, forceRestart) {\n\t\tvar container = this.game.sound[this.game.sound._music.indexOf(this) >= 0 ? 'bgVolume' : 'fgVolume'];\n\t\tvolume = (typeof volume !== 'number' ? this.maxVolume : volume) * container;\n\t\treturn soundFunction.call(this, marker, position, volume, loop, forceRestart);\n\t};\n\n\t/* Allow images to be served from external sites, e.g. amazon */\n\tthis.load.crossOrigin = 'anonymous';\n\n\t/* Load the Google WebFont Loader script */\n\t// The Google WebFont Loader will look for this specific object.\n\twindow.WebFontConfig = {\n\t\tactive: function () { _this._fontLoaded = true; },\n\t\tgoogle: { families: [GLOBAL.FONT] }\n\t};\n\tthis.load.script('webfont', '//ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js');\n\n\t/* Agent related assets */\n\tif (this.game.player.agent) {\n\t\tvar name = this.game.player.agent.prototype.id;\n\t\tthis.load.audio(name + 'Speech', LANG.SPEECH.AGENT.speech);\n\t\tif (name === Panda.prototype.id) {\n\t\t\tthis.load.atlasJSONHash(name, 'img/agent/panda/atlas.png', 'img/agent/panda/atlas.json');\n\t\t} else if (name === Hedgehog.prototype.id) {\n\t\t\tthis.load.atlasJSONHash(name, 'img/agent/hedgehog/atlas.png', 'img/agent/hedgehog/atlas.json');\n\t\t} else if (name === Mouse.prototype.id) {\n\t\t\tthis.load.atlasJSONHash(name, 'img/agent/mouse/atlas.png', 'img/agent/mouse/atlas.json');\n\t\t}\n\t}\n\n\t/* Common game assets */\n\tthis.load.audio('click', ['audio/click.m4a', 'audio/click.ogg', 'audio/click.mp3']);\n\tthis.load.atlasJSONHash('objects', 'img/objects/objects.png', 'img/objects/objects.json');\n\tthis.load.atlasJSONHash('cookie', 'img/objects/cookies.png', 'img/objects/cookies.json');\n\t/* All sounds are purged from cache when switching state (memory issues), set this to not delete a sound. */\n\tthis.sound._doNotDelete = ['click', Panda.prototype.id + 'Speech', Hedgehog.prototype.id + 'Speech', Mouse.prototype.id + 'Speech'];\n\n\t/* Load the entry state assets as well, no need to do two loaders. */\n\tthis.load.image('entryBg', 'img/jungle.png');\n};\n\n/* Phaser state function */\nBootState.prototype.update = function () {\n\t/**\n\t * The next state will be called when everything has been loaded.\n\t * So we need to wait for the web font to set its loaded flag.\n\t */\n\tif (this._fontLoaded) {\n\n\t\tif (typeof Routes === 'undefined' || Routes === null) {\n\t\t\tconsole.warn('You are missing a route to the server, no data will be fetched or sent.');\n\t\t}\n\n\t\tif (GLOBAL.debug) {\n\t\t\tconsole.log('You are running in debug mode, sneaking into choose scenario state :)');\n\t\t\tthis.game.state.start(GLOBAL.STATE.scenario);\n\n\t\t} else {\n\t\t\tthis.game.state.start(GLOBAL.STATE.entry);\n\t\t}\n\n\t}\n};","var SuperState = require('./SuperState.js');\nvar GLOBAL = require('../global.js');\nvar LANG = require('../language.js');\nvar Panda = require('../agent/Panda.js');\nvar Menu = require('../objects/Menu.js');\nvar NumberButton = require('../objects/buttons/NumberButton.js');\nvar TextButton = require('../objects/buttons/TextButton.js');\n\nmodule.exports = ChooseScenarioState;\n\nChooseScenarioState.prototype = Object.create(SuperState.prototype);\nChooseScenarioState.prototype.constructor = ChooseScenarioState;\n\n/* The menu for choosing agent, */\nfunction ChooseScenarioState () {}\n\n/* Phaser state function */\nChooseScenarioState.prototype.preload = function() {\n\tif (!this.game.player.agent) {\n\t\tconsole.log('Setting agent to: ' + Panda.prototype.id);\n\t\tthis.game.player.agent = Panda;\n\t\tthis.load.audio('pandaSpeech', LANG.SPEECH.AGENT.speech);\n\t\tthis.load.atlasJSONHash('panda', 'img/agent/panda/atlas.png', 'img/agent/panda/atlas.json');\n\t}\n};\n\n/* Phaser state function */\nChooseScenarioState.prototype.create = function () {\n\tvar _this = this;\n\n\tthis.add.image(0, 0, 'entryBg');\n\n\tvar textOptions = {\n\t\tfont: '20pt ' +  GLOBAL.FONT,\n\t\tfill: '#ffffff',\n\t\tstroke: '#000000',\n\t\tstrokeThickness: 4\n\t};\n\tvar offset = 10;\n\tvar i, t, key;\n\n\n\t/* Subgame selection */\n\tvar subgame = null;\n\tvar gameClicker = function () {\n\t\tif (subgame !== this && subgame) {\n\t\t\tsubgame.reset();\n\t\t}\n\t\tsubgame = this;\n\t};\n\n\tthis.add.text(75, 80, 'Subgame', textOptions);\n\tvar games = [\n\t\t['Shark', GLOBAL.STATE.sharkGame],\n\t\t['Bird Hero', GLOBAL.STATE.birdheroGame],\n\t\t['Lizard', GLOBAL.STATE.lizardGame],\n\t\t['Bee Flight', GLOBAL.STATE.beeGame]\n\t];\n\tvar gameButtons = [];\n\tfor (i = 0; i < games.length; i++) {\n\t\tt = new TextButton(this.game, games[i][0], {\n\t\t\tx: t ? t.x + t.width + offset : 50,\n\t\t\ty: 125,\n\t\t\tfontSize: 25,\n\t\t\tonClick: gameClicker,\n\t\t\tkeepDown: true\n\t\t});\n\t\tt.gameState = games[i][1];\n\t\tthis.world.add(t);\n\t\tgameButtons.push(t);\n\t}\n\n\n\t/* Range selection */\n\tvar range = null;\n\tvar rangeClicker = function () {\n\t\tif (range !== this && range) {\n\t\t\trange.reset();\n\t\t}\n\t\trange = this;\n\t};\n\n\tthis.add.text(75, 220, 'Number Range', textOptions);\n\tvar rangeButtons = [];\n\tt = null;\n\tfor (key in GLOBAL.NUMBER_RANGE) {\n\t\tt = new TextButton(this.game, '1 - ' + GLOBAL.NUMBER_RANGE[key], {\n\t\t\tx: t ? t.x + t.width + offset : 50,\n\t\t\ty: 265,\n\t\t\tfontSize: 33,\n\t\t\tonClick: rangeClicker,\n\t\t\tkeepDown: true\n\t\t});\n\t\tt.range = key;\n\t\tthis.world.add(t);\n\t\trangeButtons[key] = t;\n\t}\n\n\n\t/* Representation selection */\n\tvar representation = null;\n\tvar representationClicker = function () {\n\t\tif (representation !== this && representation) {\n\t\t\trepresentation.reset();\n\t\t}\n\t\trepresentation = this;\n\t};\n\n\tthis.add.text(75, 360, 'Number Representation', textOptions);\n\tvar representationButtons = [];\n\ti = 0;\n\tfor (key in GLOBAL.NUMBER_REPRESENTATION) {\n\t\tif (key === 'objects' || key === 'yesno') {\n\t\t\tcontinue;\n\t\t}\n\n\t\trepresentationButtons[GLOBAL.NUMBER_REPRESENTATION[key]] = new NumberButton(this.game, 4, GLOBAL.NUMBER_REPRESENTATION[key], {\n\t\t\tx: 50 + i*(75 + offset),\n\t\t\ty: 405,\n\t\t\tonClick: representationClicker\n\t\t});\n\t\tthis.world.add(representationButtons[representationButtons.length-1]);\n\t\ti++;\n\t}\n\n\n\t/* Method selection */\n\tvar method = null;\n\tvar methodClicker = function () {\n\t\tif (method !== this && method) { method.reset(); }\n\t\tmethod = this;\n\t};\n\n\tthis.add.text(75, 500, 'Method', textOptions);\n\tvar methods = [\n\t\t['Counting',  GLOBAL.METHOD.count],\n\t\t['Step-by-step', GLOBAL.METHOD.incrementalSteps],\n\t\t['Addition', GLOBAL.METHOD.addition],\n\t\t['Subtraction', GLOBAL.METHOD.subtraction],\n\t\t['Add & Sub', GLOBAL.METHOD.additionSubtraction]\n\t];\n\tvar methodButtons = [];\n\tt = null;\n\tfor (i = 0; i < methods.length; i++) {\n\t\tt = new TextButton(this.game, methods[i][0], {\n\t\t\tx: t ? t.x + t.width + offset : 50,\n\t\t\ty: 545,\n\t\t\tfontSize: 20,\n\t\t\tonClick: methodClicker,\n\t\t\tkeepDown: true\n\t\t});\n\t\tt.method = methods[i][1];\n\t\tthis.world.add(t);\n\t\tmethodButtons.push(t);\n\t}\n\n\n\t/* Start game (save current options) */\n\tvar startButton = new TextButton(this.game, 'Start scenario', {\n\t\tx: this.world.centerX - 150,\n\t\ty: 660,\n\t\tfontSize: 30,\n\t\tonClick: function () {\n\t\t\tif (!subgame || !subgame.gameState ||\n\t\t\t\t!range || !range.range ||\n\t\t\t\t!representation || !representation.representations ||\n\t\t\t\t!method || (typeof method.method === 'undefined')) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/* Persistent save for ease of use. */\n\t\t\tlocalStorage.chooseSubgame = subgame.gameState;\n\t\t\tlocalStorage.chooseRange = range.range;\n\t\t\tlocalStorage.chooseRepresentation = representation.representations;\n\t\t\tlocalStorage.chooseMethod = method.method;\n\n\t\t\t_this.game.state.start(subgame.gameState, true, false, {\n\t\t\t\tmethod: method.method,\n\t\t\t\trepresentation: representation.representations,\n\t\t\t\trange: range.range,\n\t\t\t\troundsPerMode: 3\n\t\t\t});\n\t\t}\n\t});\n\tthis.world.add(startButton);\n\n\t/* In case you want to check out garden instead. */\n\tvar gotoGarden = new TextButton(this.game, LANG.TEXT.gotoGarden, {\n\t\tx: 75,\n\t\ty: 5,\n\t\tsize: 56,\n\t\tfontSize: 20,\n\t\tonClick: function () {\n\t\t\t_this.game.state.start(GLOBAL.STATE.beach);\n\t\t}\n\t});\n\tthis.world.add(gotoGarden);\n\n\tthis.world.add(new Menu(this.game));\n\n\n\t/* If we have been in this state before, we try to preset the correct buttons. */\n\tswitch (localStorage.chooseSubgame) {\n\t\tcase GLOBAL.STATE.balloonGame:\n\t\t\tgameButtons[0].setDown();\n\t\t\tsubgame = gameButtons[0];\n\t\t\tbreak;\n\t\tcase GLOBAL.STATE.birdheroGame:\n\t\t\tgameButtons[1].setDown();\n\t\t\tsubgame = gameButtons[1];\n\t\t\tbreak;\n\t\tcase GLOBAL.STATE.lizardGame:\n\t\t\tgameButtons[2].setDown();\n\t\t\tsubgame = gameButtons[2];\n\t\t\tbreak;\n\t\tcase GLOBAL.STATE.beeGame:\n\t\t\tgameButtons[3].setDown();\n\t\t\tsubgame = gameButtons[3];\n\t\t\tbreak;\n\t}\n\tif (localStorage.chooseRange) {\n\t\trangeButtons[parseInt(localStorage.chooseRange)].setDown();\n\t\trange = rangeButtons[parseInt(localStorage.chooseRange)];\n\t}\n\tif (localStorage.chooseRepresentation) {\n\t\trepresentationButtons[parseInt(localStorage.chooseRepresentation)].setDown();\n\t\trepresentation = representationButtons[parseInt(localStorage.chooseRepresentation)];\n\t}\n\tif (localStorage.chooseMethod) {\n\t\tmethodButtons[parseInt(localStorage.chooseMethod)].setDown();\n\t\tmethod = methodButtons[parseInt(localStorage.chooseMethod)];\n\t}\n};","var SuperState = require('./SuperState.js');\nvar GLOBAL = require('../global.js');\nvar LANG = require('../language.js');\nvar util = require('../utils.js');\nvar Cover = require('../objects/Cover.js');\n\nmodule.exports = EntryState;\n\nEntryState.prototype = Object.create(SuperState.prototype);\nEntryState.prototype.constructor = EntryState;\n\n/**\n * The first state of the game, where you start the game or do settings.\n */\nfunction EntryState () {}\n\n/* Phaser state function */\nEntryState.prototype.preload = function () {\n\tthis.load.audio('entryMusic', ['audio/music.m4a', 'audio/music.ogg', 'audio/music.mp3']);\n};\n\n/* Entry state assets are loaded in the boot section */\n\n/* Phaser state function */\nEntryState.prototype.create = function () {\n\t// Add music\n\tthis.add.music('entryMusic', 0.7, true).play();\n\t\n\t// Add background\n\tthis.add.image(0, 0, 'entryBg');\n\n\t// Add headlines\n\tvar title = this.add.text(this.world.centerX, this.world.centerY/2, LANG.TEXT.title, {\n\t\tfont: '50pt ' +  GLOBAL.FONT,\n\t\tfill: '#ffff00',\n\t\tstroke: '#000000',\n\t\tstrokeThickness: 5\n\t});\n\ttitle.anchor.set(0.5);\n\n\tvar start = this.add.text(this.world.centerX, this.world.centerY, LANG.TEXT.continuePlaying, {\n\t\tfont: '50pt ' +  GLOBAL.FONT,\n\t\tfill: '#dd00dd'\n\t});\n\tstart.anchor.set(0.5);\n\tstart.inputEnabled = true;\n\n\tvar changeAgent = this.add.text(this.world.centerX, this.world.centerY*1.4, '', {\n\t\tfont: '35pt ' +  GLOBAL.FONT,\n\t\tfill: '#000000'\n\t});\n\tchangeAgent.anchor.set(0.5);\n\tchangeAgent.inputEnabled = true;\n\n\tif (this.game.player.agent) {\n\t\t// Player has played before, we go to garden directly and show the agent change option.\n\t\tstart.events.onInputDown.add(function () { this.state.start(GLOBAL.STATE.beach); }, this);\n\n\t\tchangeAgent.text = LANG.TEXT.changeAgent + this.game.player.agent.prototype.agentName;\n\t\tchangeAgent.events.onInputDown.add(function () { this.state.start(GLOBAL.STATE.agentSetup); }, this);\n\n\t} else {\n\t\t// Player has not played before, go to setup.\n\t\tstart.text = LANG.TEXT.start;\n\t\tstart.events.onInputDown.add(function () { this.state.start(GLOBAL.STATE.agentSetup); }, this);\n\t}\n\n\n\t/* Log out player. */\n\tvar log = this.add.text(20, this.world.height, LANG.TEXT.logOut + '\\n' + this.game.player.name, {\n\t\tfont: '25pt ' +  GLOBAL.FONT,\n\t\tfill: '#000000'\n\t});\n\tlog.anchor.set(0, 1);\n\tlog.inputEnabled = true;\n\tlog.events.onInputDown.add(function () { window.location = window.location.origin; });\n\n\n\t/* Credits related objects: */\n\tvar credits = this.add.text(this.world.width - 20, this.world.height, LANG.TEXT.credits, {\n\t\tfont: '25pt ' +  GLOBAL.FONT,\n\t\tfill: '#000000'\n\t});\n\tcredits.anchor.set(1);\n\tcredits.inputEnabled = true;\n\tcredits.events.onInputDown.add(function () {\n\t\tutil.fade(credits, false, 0.3);\n\t\tutil.fade(start, false, 0.3);\n\t\tutil.fade(changeAgent, false, 0.3);\n\t\tutil.fade(allCredits, true);\n\t\trolling.restart();\n\t\tcover.visible = true;\n\t\tTweenMax.to(cover, 0.5, { alpha: 0.7 });\n\t}, this);\n\n\tvar cover = new Cover(this.game, '#000000', 0);\n\tcover.visible = false;\n\tcover.inputEnabled = true;\n\tcover.events.onInputDown.add(function () {\n\t\tutil.fade(credits, true);\n\t\tutil.fade(start, true);\n\t\tutil.fade(changeAgent, true);\n\t\tutil.fade(allCredits, false, 0.3);\n\t\trolling.pause();\n\t\tTweenMax.to(cover, 0.3, { alpha: 0, onComplete: function () { cover.visible = false; } });\n\t}, this);\n\tthis.world.add(cover);\n\n\tvar allCredits = this.add.text(this.world.centerX, this.world.height,\n\t\tLANG.TEXT.creditsMade + '\\n\\n\\n' +\n\t\tLANG.TEXT.creditsDeveloped + ':\\nErik Anderberg\\t \\tAgneta Gulz\\nMagnus Haake\\t \\tLayla Husain\\n\\n' +\n\t\tLANG.TEXT.creditsProgramming + ':\\nErik Anderberg\\t \\tMarcus Malmberg\\nHenrik Söllvander\\n\\n' +\n\t\tLANG.TEXT.creditsGraphics + ':\\nSebastian Gulz Haake\\nErik Anderberg\\n\\n' +\n\t\tLANG.TEXT.creditsVoices + ':\\n' + LANG.TEXT.pandaName + '\\t-\\t' + LANG.TEXT.creditsVoicePanda + '\\n' +\n\t\t\tLANG.TEXT.hedgehogName + '\\t-\\t' + LANG.TEXT.creditsVoiceHedgehog + '\\n' +\n\t\t\tLANG.TEXT.mouseName + '\\t-\\t' + LANG.TEXT.creditsVoiceMouse + '\\n' +\n\t\t\tLANG.TEXT.woodlouseName + '\\t-\\t' + LANG.TEXT.creditsVoiceWoodlouse + '\\n' +\n\t\t\tLANG.TEXT.lizardName + '\\t-\\t' + LANG.TEXT.creditsVoiceLizard + '\\n' +\n\t\t\tLANG.TEXT.bumblebeeName + '\\t-\\t' + LANG.TEXT.creditsVoiceBumblebee + '\\n' +\n\t\t\tLANG.TEXT.birdName + '\\t-\\t' + LANG.TEXT.creditsVoiceBird + '\\n\\n' +\n\t\tLANG.TEXT.creditsMusic + ':\\nTorbjörn Gulz\\n\\n' +\n\t\tLANG.TEXT.creditsSfx + ':\\nAnton Axelsson\\nhttp://soundbible.com\\nhttp://freesfx.co.uk\\n\\n' +\n\t\tLANG.TEXT.creditsThanks + ':\\nSanne Bengtsson\\t \\tMaja Håkansson\\nLisa Lindberg\\t \\tBjörn Norrliden\\nBrunnsparksskolan', {\n\t\tfont: '15pt ' +  GLOBAL.FONT,\n\t\tfill: '#ffffff',\n\t\talign: 'center'\n\t});\n\tallCredits.anchor.set(0.5, 0);\n\tallCredits.visible = false;\n\tvar rolling = TweenMax.fromTo(allCredits, 30,\n\t\t{ y: this.world.height },\n\t\t{ y: -allCredits.height, ease: Power0.easeInOut, repeat: -1, paused: true });\n};","var SuperState = require('./SuperState.js');\nvar backend = require('../backend.js');\nvar GLOBAL = require('../global.js');\nvar LANG = require('../language.js');\nvar EventSystem = require('../pubsub.js');\nvar util = require('../utils.js');\nvar Counter = require('../objects/Counter.js');\nvar Cover = require('../objects/Cover.js');\nvar Menu = require('../objects/Menu.js');\nvar WaterCan = require('../objects/WaterCan.js');\nvar SpriteButton = require('../objects/buttons/SpriteButton.js');\n\nmodule.exports = GardenState;\n\nGardenState.prototype = Object.create(SuperState.prototype);\nGardenState.prototype.constructor = GardenState;\n\n/**\n * The garden of the game.\n * This is where the player uses the water from the sessions.\n */\nfunction GardenState () {}\n\n/* Phaser state function */\nGardenState.prototype.preload = function() {\n\tif (!this.cache._sounds[this.game.player.agent.prototype.id + 'Speech']) {\n\t\tthis.load.audio(this.game.player.agent.prototype.id + 'Speech', LANG.SPEECH.AGENT.speech);\n\t}\n\tif (!this.cache._sounds.gardenMusic) {\n\t\tthis.load.audio('gardenMusic', ['audio/garden/music.m4a', 'audio/garden/music.ogg', 'audio/garden/music.mp3']);\n\t}\n\tif (!this.cache._images.garden) {\n\t\tthis.load.atlasJSONHash('garden', 'img/garden/atlas.png', 'img/garden/atlas.json');\n\t}\n\n\t//this.gardenData = backend.getGarden() || { fields: [] };\n};\n\n/* Phaser state function */\nGardenState.prototype.create = function () {\n\t// Add music\n\tthis.add.music('gardenMusic', 0.2, true).play();\n\n\t// Add background\n\tthis.add.sprite(0, 0, 'garden', 'bg');\n\n\t// Add sign to go to next scenario\n\t//var sure = false;\n\tvar sign = this.add.sprite(750, 100, 'garden', 'sign');\n\tsign.inputEnabled = true;\n\tsign.events.onInputDown.add(function () {\n\t\t// This happens either on local machine or on \"trial\" version of the game.\n\t\tif (typeof Routes === 'undefined' || Routes === null) {\n\t\t\tthis.game.state.start(GLOBAL.STATE.scenario, true, false);\n\t\t\treturn;\n\t\t}\n\n\t\tvar t = new TimelineMax();\n\t\tt.addCallback(function () {\n\t\t\tdisabler.visible = true;\n\t\t});/*\n\t\tif (this.game.player.water > this.game.player.maxWater - 3 && !sure) {\n\t\t\tt.addSound(agent.speech, agent, 'gardenWaterFirst');\n\t\t\tsure = true;\n\t\t\tvar sub = EventSystem.subscribe(GLOBAL.EVENT.waterPlant, function () {\n\t\t\t\tsure = false;\n\t\t\t\tEventSystem.unsubscribe(sub);\n\t\t\t});\n\t\t} else {*/\n\t\t\tvar scen = backend.getScenario();\n\t\t\tif (scen) {\n\t\t\t\tt.addSound(agent.speech, agent, 'letsGo');\n\t\t\t\tt.addCallback(function () {\n\t\t\t\t\tthis.game.state.start(GLOBAL.STATE[scen.subgame], true, false, scen);\n\t\t\t\t}, null, null, this);\n\t\t\t}\n\t\t//}\n\t\tt.addCallback(function () {\n\t\t\tdisabler.visible = false;\n\t\t});\n\t}, this);\n\n\t/* Setup the garden fields */\n\tvar rows = 3;\n\tvar columns = 8;\n\tvar startPos = 200;\n\tvar width = this.world.width/columns;\n\tvar height = (this.world.height - startPos)/rows;\n\tvar type, level, water, i;\n\tvar fields = this.gardenData.fields;\n\tfor (var row = 0; row < rows; row++) {\n\t\tfor (var column = 0; column < columns; column++) {\n\t\t\ttype = this.rnd.integerInRange(1, 9);\n\t\t\tlevel = 0;\n\t\t\twater = 0;\n\n\t\t\tfor (i = 0; i < fields.length; i++) {\n\t\t\t\tif (fields[i].x === column &&\n\t\t\t\t\tfields[i].y === row) {\n\t\t\t\t\t/*jshint camelcase:false */\n\t\t\t\t\ttype = fields[i].content_type || type;\n\t\t\t\t\t/*jshint camelcase:true */\n\t\t\t\t\tlevel = fields[i].level || level;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.world.add(new GardenPlant(this.game, column, row, column*width, startPos+row*height, width, height, type, level, water));\n\t\t}\n\t}\n\n\t/* Add the garden agent */\n\tvar agent = this.game.player.createAgent();\n\tagent.scale.set(0.2);\n\tagent.x = -100;\n\tagent.y = startPos + height - agent.height/2;\n\tthis.world.add(agent);\n\tvar currentMove = null;\n\n\t/* Add the water can */\n\tthis.world.add(new WaterCan(this.game));\n\tvar firstWatering = true;\n\n\t/* Add disabler. */\n\tvar disabler = new Cover(this.game, '#ffffff', 0);\n\tthis.world.add(disabler);\n\n\t/* Add the menu */\n\tthis.world.add(new Menu(this.game));\n\n\n\t/* Move agent when we push a plant. */\n\tvar _this = this;\n\tEventSystem.subscribe(GLOBAL.EVENT.plantPress, function (plant) {\n\t\tvar y = plant.y + plant.plantHeight - agent.height/2;\n\t\tvar x = plant.x;\n\t\t// If this is changed: update the side variable in the waterPlant subscription.\n\t\tvar side = -plant.width * 0.3;\n\t\tif (agent.x > x) {\n\t\t\tx += plant.width;\n\t\t\tside *= -1;\n\t\t}\n\t\tif (agent.x === x && agent.y === y ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (currentMove) {\n\t\t\tcurrentMove.kill();\n\t\t}\n\n\t\tcurrentMove = new TimelineMax();\n\t\tvar distance = agent.x - x;\n\t\tif (agent.y !== y) {\n\t\t\tif (agent.y % (plant.plantHeight - agent.height/2) < 10) {\n\t\t\t\tdistance = 0;\n\t\t\t\tcurrentMove.add(agent.move({ x: x }, Math.abs((agent.x - x)/width)));\n\t\t\t}\n\t\t\tcurrentMove.add(agent.move({ y: y }, Math.abs((agent.y - y)/height)));\n\t\t}\n\t\tif (agent.x !== x + side || agent.y !== y) {\n\t\t\tcurrentMove.add(agent.move({ x: x + side }, Math.abs((distance + side)/width)));\n\t\t}\n\t\tcurrentMove.addSound(agent.speech, agent, 'ok' + _this.game.rnd.integerInRange(1, 2), 0);\n\t});\n\n\t/* Water plant when we push it. */\n\tEventSystem.subscribe(GLOBAL.EVENT.waterPlant, function (plant) {\n\t\tvar t;\n\t\tif (_this.game.player.water > 0) {\n\t\t\tvar side = ((plant.x + plant.width/3) <= agent.x) ? -1 : 1;\n\t\t\tt = agent.water(2, side);\n\t\t\tt.addCallback(function () {\n\t\t\t\t_this.game.player.water--;\n\t\t\t\tplant.water.value++;\n\t\t\t\tagent.say(agent.speech, 'gardenGrowing').play('gardenGrowing');\n\t\t\t}, 'watering');\n\t\t\tif (plant.water.left === 1 && plant.level.left === 1) {\n\t\t\t\tt.addSound(agent.speech, agent, 'gardenFullGrown');\n\t\t\t}\n\t\t\tif (firstWatering && _this.game.player.water > 1) {\n\t\t\t\tfirstWatering = false;\n\t\t\t\tt.addSound(agent.speech, agent, 'gardenWaterLeft');\n\t\t\t}\n\t\t} else {\n\t\t\tt = new TimelineMax();\n\t\t\tt.addSound(agent.speech, agent, 'gardenEmptyCan');\n\t\t}\n\n\t\tt.addCallback(function () { disabler.visible = true; }, 0); // at start\n\t\tt.addCallback(function () {\n\t\t\tplant.waterButton.reset();\n\t\t\tdisabler.visible = false;\n\t\t}); // at end\n\n\t\tif (currentMove && currentMove.progress() < 1) {\n\t\t\tcurrentMove.add(t);\n\t\t}\n\t});\n\n\t/* Check that backend accepts plant upgrade */\n\tEventSystem.subscribe(GLOBAL.EVENT.plantUpgrade, function (data) {\n\t\t/*jshint camelcase:false */\n\t\tif (data.remaining_water !== _this.game.player.water) {\n\t\t\t_this.game.player.water = data.remaining_water;\n\t\t}\n\t\t/*jshint camelcase:true */\n\t});\n\n\t/* When the state starts. */\n\tthis.startGame = function () {\n\t\tvar t = new TimelineMax().skippable();\n\t\tt.add(agent.move({ x: this.world.centerX }, 3));\n\n\t\tif (this.game.player.water > 0) {\n\t\t\tif (this.gardenData.fields.length > 0) {\n\t\t\t\tt.addSound(agent.speech, agent, 'gardenWhereNow');\n\t\t\t} else {\n\t\t\t\tt.addSound(agent.speech, agent, 'gardenHaveWater');\n\t\t\t\tt.addSound(agent.speech, agent, 'gardenPushField', '+=0.5');\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.gardenData.fields.length > 0) {\n\t\t\t\tt.addSound(agent.speech, agent, 'gardenYoureBack');\n\t\t\t} else {\n\t\t\t\tvar w = new WaterCan(this.game);\n\t\t\t\tw.visible = false;\n\t\t\t\tthis.world.add(w);\n\n\t\t\t\tt.addSound(agent.speech, agent, 'gardenIntro');\n\t\t\t\tt.addLabel('myCan', '+=0.5');\n\t\t\t\tt.addCallback(function () {\n\t\t\t\t\tw.x = agent.x - w.width/4; // Since we scale to 0.5\n\t\t\t\t\tw.y = agent.y;\n\t\t\t\t\tw.scale.set(0);\n\t\t\t\t\tw.visible = true;\n\t\t\t\t\tagent.eyesFollowObject(w);\n\t\t\t\t});\n\t\t\t\tt.add(new TweenMax(w.scale, 1, { x: 0.5, y: 0.5, ease: Elastic.easeOut }), 'myCan');\n\t\t\t\tt.addSound(agent.speech, agent, 'gardenMyCan', 'myCan');\n\t\t\t\tt.add(new TweenMax(w.scale, 1, { x: 0, y: 0, ease: Elastic.easeOut, onComplete: w.destroy, onCompleteScope: w }));\n\t\t\t}\n\t\t\tt.addLabel('sign');\n\t\t\tt.add(agent.wave(1, 1));\n\t\t\tt.addCallback(agent.eyesFollowObject, 'sign', [sign], agent);\n\t\t\tt.addSound(agent.speech, agent, 'gardenSign', 'sign');\n\t\t}\n\t\tt.addCallback(function () {\n\t\t\tagent.eyesStopFollow();\n\t\t\tdisabler.visible = false;\n\t\t}, null, null, this);\n\t};\n};\n\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                              Garden objects                               */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\n\n/**\n * A garden plant/field.\n * It will level up depending on how much you water it.\n * @param {number} column - The column position of the plant (for server).\n * @param {number} row - The row position of the plant (for server).\n * @param {number} x - X position.\n * @param {number} y - Y position.\n * @param {number} width - The width.\n * @param {number} height - The height.\n * @param {number} type - The type of plant.\n * @param {number} level - The level of the plant.\n * @param {number} water - The amount of water the plant has.\n */\nGardenPlant.prototype = Object.create(Phaser.Group.prototype);\nGardenPlant.prototype.constructor = GardenPlant;\nfunction GardenPlant (game, column, row, x, y, width, height, type, level, water) {\n\tPhaser.Group.call(this, game, null); // Parent constructor.\n\tvar _this = this;\n\tvar maxLevel = 5;\n\tthis.column = column;\n\tthis.row = row;\n\tthis.x = x;\n\tthis.y = y;\n\tthis.plantHeight = height;\n\n\t/* The pushable area of the field */\n\tvar bmd = game.add.bitmapData(width, height);\n\tbmd.ctx.globalAlpha = 0;\n\tbmd.ctx.fillRect(0, 0, bmd.width, bmd.height);\n\tvar trigger = this.create(0, 0, bmd);\n\ttrigger.inputEnabled = true;\n\ttrigger.events.onInputDown.add(this.down, this);\n\n\tif (level !== maxLevel) {\n\t\tvar hl = game.add.bitmapData(width - 6, height * 0.6);\n\t\thl.ctx.fillStyle = '#6b3e09';\n\t\thl.ctx.globalAlpha = 0.2;\n\t\thl.ctx.roundRect(0, 0, hl.width, hl.height, 10).fill();\n\t\tthis.highlight = this.create(3, height * 0.4, hl);\n\t}\n\n\tthis.type = type;\n\tvar plant = null;\n\n\tthis.water = new Counter(1, true, water);\n\n\tthis.level = new Counter(maxLevel, false, level);\n\tthis.level.onAdd = function (current, diff) {\n\t\tif (current <= 0) {\n\t\t\tif (plant) { plant.destroy(); }\n\t\t\treturn;\n\t\t}\n\n\t\tvar newPlant = _this.create(width/2, height/2, 'garden', 'plant' + _this.type + '-' + current);\n\t\tnewPlant.anchor.set(0.5);\n\t\tnewPlant.scale.set(0.5); // TODO: We should not scale this, use better graphics.\n\n\t\tif (diff > 0) {\n\t\t\t// Plant has leveled up by watering.\n\t\t\tnewPlant.alpha = 0;\n\n\t\t\t/* Check that backend accepts plant upgrade */\n\t\t\tvar ev = EventSystem.subscribe(GLOBAL.EVENT.plantUpgrade, function (data) {\n\t\t\t\tif (!data.success && data.field.x === _this.column && data.field.y === _this.row) {\n\t\t\t\t\t_this.level.value = data.field.level;\n\t\t\t\t}\n\t\t\t\tEventSystem.unsubscribe(ev);\n\t\t\t});\n\n\t\t\t/* Upgrade plant animation, ending with sending to backend. */\n\t\t\tTweenMax.to(newPlant, 2, {\n\t\t\t\talpha: 1,\n\t\t\t\tonComplete: function () {\n\t\t\t\t\t_this.water.update();\n\t\t\t\t\tif (plant) { plant.destroy(); }\n\t\t\t\t\tplant = newPlant;\n\n\t\t\t\t/*jshint camelcase:false */\n\t\t\t\tbackend.putUpgradePlant({ field: { x: column, y: row, level: this.value, content_type: type }});\n\t\t\t\t/*jshint camelcase:true */\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\t// Could be: Setup of plant from constructor\n\t\t\t// Could be: Backend says that water is missing\n\t\t\tif (plant) { plant.destroy(); }\n\t\t\tplant = newPlant;\n\t\t}\n\t};\n\tthis.level.update();\n\n\treturn this;\n}\n\n/**\n * When pushing on a garden plant.\n * Publishes plantPress event.\n * Publishes waterPlant when waterButton is pushed.\n */\nGardenPlant.prototype.down = function () {\n\tvar _this = this; // Events do not have access to this\n\n\t/* If this plant is active, it means that it is already showing only publish plantPress */\n\tif (this.active) {\n\t\tEventSystem.publish(GLOBAL.EVENT.plantPress, [this]);\n\t\treturn;\n\t}\n\n\t/* The interface for the plant is set up when needed. */\n\tif (!this.infoGroup) {\n\t\tvar height = 100;\n\t\tthis.infoGroup = this.game.add.group(this);\n\t\tthis.infoGroup.x = 0;\n\t\tthis.infoGroup.y = -height;\n\t\tthis.infoGroup.visible = false;\n\n\t\tvar bmd = this.game.add.bitmapData(this.width, height);\n\t\tbmd.ctx.fillStyle = '#ffffff';\n\t\tbmd.ctx.globalAlpha = 0.5;\n\t\tbmd.ctx.fillRect(0, 0, bmd.width, bmd.height);\n\t\tthis.game.add.sprite(0, 0, bmd, null, this.infoGroup).inputEnabled = true;\n\n\t\t/* The button to push when adding water. */\n\t\tthis.waterButton = new SpriteButton(this.game, 'objects', 'watering_can', {\n\t\t\tx: this.width/2 - (height - 20)/2,\n\t\t\ty: 10,\n\t\t\tsize: height - 20,\n\t\t\tkeepDown: true,\n\t\t\tonClick: function () {\n\t\t\t\t/* Water is added to the plant when animation runs. */\n\t\t\t\tEventSystem.publish(GLOBAL.EVENT.waterPlant, [_this]);\n\t\t\t}\n\t\t});\n\t\tthis.waterButton.sprite.tint = 0xbb3333;\n\t\tthis.infoGroup.add(this.waterButton);\n\n\t\t/* Water management */\n\t\tvar maxLevel = function () {\n\t\t\t_this.waterButton.destroy();\n\t\t\t_this.highlight.destroy();\n\t\t\t_this.game.add.text(_this.width/2, height/2, LANG.TEXT.maxLevel, {\n\t\t\t\tfont: '40pt ' +  GLOBAL.FONT,\n\t\t\t\tfill: '#5555ff'\n\t\t\t}, _this.infoGroup).anchor.set(0.5);\n\t\t};\n\n\t\t/* Check if this plant can be upgraded more. */\n\t\tif (this.level.left > 0) {\n\t\t\tthis.water.onMax = function () {\n\t\t\t\t_this.level.value++;\n\t\t\t\tif (_this.level.value === _this.level.max) {\n\t\t\t\t\t_this.water.onMax = null;\n\t\t\t\t\tmaxLevel();\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis.water.update();\n\t\t} else {\n\t\t\tmaxLevel();\n\t\t}\n\t}\n\n\n\tutil.fade(this.infoGroup, true, 0.2);\n\n\t/* Publish plantPress to hide other possible active plant interfaces. */\n\tEventSystem.publish(GLOBAL.EVENT.plantPress, [this]);\n\n\t/* Subscribe to plantPress to hide this plant interface when applicable. */\n\tthis.active = EventSystem.subscribe(GLOBAL.EVENT.plantPress, function () {\n\t\t_this.waterButton.reset();\n\t\t_this.hide();\n\t});\n};\n\n/**\n * Hide the plant interface\n */\nGardenPlant.prototype.hide = function () {\n\tEventSystem.unsubscribe(this.active);\n\tthis.active = null;\n\tutil.fade(this.infoGroup, false, 0.2);\n};","var GLOBAL = require('../global.js');\nvar LANG = require('../language.js');\nvar EventSystem = require('../pubsub.js');\nvar GeneralButton = require('../objects/buttons/GeneralButton.js');\nvar DraggableObjects = require('../objects/DraggableObject');\n\nmodule.exports = SuperState;\n\n/**\n * The boot state will load the first parts of the game and common game assets.\n * Add assets that will be used by many states.\n * NOTE: Do not overshadow the update function! Use 'run' instead.\n */\nfunction SuperState () {}\n\n/**\n * Update will trigger after create. But sounds might not be decoded yet, so we wait for that.\n * NOTE: Do not overshadow the update function! Use 'run' instead.\n */\nSuperState.prototype.update = function () {\n\tthis.state.onUpdateCallback = function () {};\n\n\tvar keys = [], key;\n\tfor (var i = 0; i < this.sound._sounds.length; i++) {\n\t\tkey = this.sound._sounds[i].key;\n\t\tif (keys.indexOf(key) < 0 && this.cache._sounds[key]) {\n\t\t\tthis.sound.decode(key); // Make sure that decoding has begun.\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\tdocument.querySelector('.loading').style.display = 'block';\n\tdocument.querySelector('.progress').innerHTML = LANG.TEXT.decoding;\n\n\tthis.sound.setDecodedCallback(keys, this._soundsDecoded, this);\n};\n\n/** This function runs when all sounds have been decoded. */\nSuperState.prototype._soundsDecoded = function () {\n\tdocument.querySelector('.loading').style.display = 'none';\n\n\tif (this.startGame) {\n\t\tthis.startGame();\n\t}\n\n\tthis.state.onUpdateCallback = this.run;\n};\n\n/**\n * Overshadow this function for use of the update loop.\n * This will be set when all sounds have been decoded.\n */\nSuperState.prototype.run = function () {};\n\n/**\n * Utility function: Call this upon state shutdown.\n * Publishes stateShutDown event.\n */\nSuperState.prototype.shutdown = function () {\n\tTweenMax.killAll();\n\tEventSystem.publish(GLOBAL.EVENT.stateShutDown, this);\n\tEventSystem.clear();\n\tGeneralButton.prototype.buttonColor = GLOBAL.BUTTON_COLOR;\n\tDraggableObjects.prototype.buttonColor = GLOBAL.BUTTON_COLOR;\n\n\t// Purge sound\n\tvar key = this.sound._sounds.length;\n\twhile (key--) {\n\t\tthis.sound._sounds[key].destroy(true);\n\t}\n\t// Purge sound from cache as well\n\tfor (key in this.cache._sounds) {\n\t\tif (this.sound._doNotDelete.indexOf(key) < 0) {\n\t\t\tthis.cache.removeSound(key);\n\t\t}\n\t}\n\t// Purge all \"this\" variables.\n\tfor (key in this) {\n\t\tif (GLOBAL.STATE_KEYS.indexOf(key) < 0) {\n\t\t\tif (this[key] && this[key].destroy) {\n\t\t\t\ttry {\n\t\t\t\t\tthis[key].destroy(true);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\t// Don't care about errors here.\n\t\t\t\t\t// console.log(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete this[key];\n\t\t}\n\t}\n\tthis.world.removeAll(true);\n};","var Character = require('../../agent/Character.js');\n\nmodule.exports = BeeFlightBee;\n\n/* Humfrid, the bee you are helping. */\nBeeFlightBee.prototype = Object.create(Character.prototype);\nBeeFlightBee.prototype.constructor = BeeFlightBee;\nfunction BeeFlightBee (game, x, y) {\n\tCharacter.call(this, game); // Parent constructor.\n\tthis.turn = true;\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n\tthis.body = this.create(0, 0, 'bee', 'body');\n\tthis.body.anchor.set(0.5);\n\tthis.mouth = this.create(50, 35, 'bee', 'mouth_happy');\n\tthis.mouth.anchor.set(0.5);\n\tthis.wings = this.create(-25, -43, 'bee', 'wings1');\n\tthis.wings.anchor.set(0.5);\n\n\tthis.talk = TweenMax.to(this.mouth, 0.2, {\n\t\tframe: this.mouth.frame+1, roundProps: 'frame', ease: Power0.easeInOut, repeat: -1, yoyo: true, paused: true\n\t});\n\n\tthis._flap = TweenMax.to(this.wings, 0.1, {\n\t\tframe: this.wings.frame+1, roundProps: 'frame', ease: Power0.easeInOut, repeat: -1, yoyo: true, paused: true\n\t});\n\tthis.wings.frameName = 'wings0';\n}\n\nBeeFlightBee.prototype.flap = function (on) {\n\tif (on) {\n\t\tif (this._flap.paused()) {\n\t\t\tthis.wings.frameName = 'wings1';\n\t\t\tthis._flap.restart(0);\n\t\t}\n\t} else {\n\t\tthis._flap.pause(0);\n\t\tthis.wings.frameName = 'wings0';\n\t}\n};","var BeeFlightBee = require('./BeeFlightBee.js');\nvar NumberGame = require('./NumberGame.js');\nvar GLOBAL = require('../../global.js');\nvar LANG = require('../../language.js');\nvar util = require('../../utils.js');\n\nmodule.exports = BeeFlightGame;\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                             Bee Flight game\n/* Methods:         All\n/* Representations: All, except \"none\".\n/* Range:           1--4, 1--9\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\nBeeFlightGame.prototype = Object.create(NumberGame.prototype);\nBeeFlightGame.prototype.constructor = BeeFlightGame;\nfunction BeeFlightGame () {\n\tNumberGame.call(this); // Call parent constructor.\n}\n\nBeeFlightGame.prototype.pos = {\n\tflowers: {\n\t\tstart: 325, stopOffset: 0\n\t},\n\thome: {\n\t\tx: 110, y: 700\n\t},\n\tbee: {\n\t\tx: 120, y: 300,\n\t\thomeScale: 0.3,\n\t\tairScale: 0.8,\n\t\tflowerScale: 0.6\n\t},\n\tagent: {\n\t\tstart: { x: 1200, y: 400 },\n\t\tstop: { x: 777, y: 360 },\n\t\tscale: 0.35\n\t}\n};\n\nBeeFlightGame.prototype.buttonColor = 0xface3d;\n\n/* Phaser state function */\nBeeFlightGame.prototype.preload = function () {\n\tthis.load.audio('beeSpeech', LANG.SPEECH.beeflight.speech); // speech sheet\n\tthis.load.audio('beeMusic', ['audio/subgames/beeflight/music.m4a', 'audio/subgames/beeflight/music.ogg', 'audio/subgames/beeflight/music.mp3']);\n\tthis.load.atlasJSONHash('bee', 'img/subgames/beeflight/atlas.png', 'img/subgames/beeflight/atlas.json');\n};\n\n/* Phaser state function */\nBeeFlightGame.prototype.create = function () {\n\t// Setup additional game objects on top of NumberGame.init\n\tthis.setupButtons({\n\t\tbuttons: {\n\t\t\tx: 150,\n\t\t\ty: 25,\n\t\t\tsize: this.world.width - 300\n\t\t},\n\t\tyesnos: {\n\t\t\tx: 150,\n\t\t\ty: 25,\n\t\t\tsize: this.world.width - 300\n\t\t}\n\t});\n\n\t// Add music, sounds and speech\n\tthis.speech = util.createAudioSheet('beeSpeech', LANG.SPEECH.beeflight.markers);\n\tthis.add.music('beeMusic', 0.1, true).play();\n\n\t// Add background\n\tthis.add.sprite(0, 0, 'bee', 'bg', this.gameGroup);\n\tvar cloud1 = this.gameGroup.create(-1000, 10, 'objects', 'cloud2');\n\tvar cloud2 = this.gameGroup.create(-1000, 150, 'objects', 'cloud1');\n\tTweenMax.fromTo(cloud1, 380, { x: -cloud1.width }, { x: this.world.width, repeat: -1 });\n\tTweenMax.fromTo(cloud2, 290, { x: -cloud2.width }, { x: this.world.width, repeat: -1 });\n\tvar home = this.add.sprite(this.pos.home.x, this.pos.home.y, 'bee', 'home', this.gameGroup);\n\thome.anchor.set(0.5, 1);\n\tthis.agent.thought.y += 100;\n\tthis.gameGroup.bringToTop(this.agent);\n\n\t// Setup flowers\n\tvar size = this.world.width - this.pos.flowers.stopOffset - this.pos.flowers.start;\n\tvar width = size / this.amount;\n\tvar yPos = 550;\n\tthis.flowers = [];\n\tvar i, v, c;\n\tfor (i = 0; i < this.amount; i++) {\n\t\tthis.flowers.push(this.add.sprite(this.pos.flowers.start + width*i, yPos, 'bee', 'flower', this.gameGroup));\n\t\tthis.flowers[i].anchor.set(0.5, 0);\n\n\t\t// Calculate tint\n\t\tv = this.rnd.integerInRange(150, 230);\n\t\tc = this.rnd.integerInRange(1, 3);\n\t\tthis.flowers[i].tint = Phaser.Color.getColor(c === 1 ? v : 255, c === 2 ? v : 255, c === 3 ? v : 255);\n\t}\n\n\t// Setup bee\n\tthis.bee = new BeeFlightBee(this.game, this.pos.home.x, this.pos.home.y);\n\tthis.bee.scale.set(this.pos.bee.homeScale);\n\tif (this.method === GLOBAL.METHOD.additionSubtraction) {\n\t\tthis.bee.addThought(170, -75, this.representation[0], true);\n\t\tthis.bee.thought.toScale = 0.7;\n\t}\n\tthis.gameGroup.add(this.bee);\n\n\n\t// Add Timeline/Tween functions\n\tvar _this = this;\n\tthis.bee.moveTo = {\n\t\thome: function (duration) {\n\t\t\tvar t = new TimelineMax();\n\t\t\tt.addCallback(_this.bee.flap, null, [true], _this.bee);\n\t\t\tt.add(_this.bee.move(_this.pos.home, duration || 5, _this.pos.bee.homeScale));\n\t\t\tt.addCallback(_this.bee.flap, null, [false], _this.bee);\n\t\t\treturn t;\n\t\t},\n\t\tstart: function () {\n\t\t\tvar t = new TimelineMax();\n\t\t\tt.addCallback(_this.bee.flap, null, [true], _this.bee);\n\t\t\tt.add(_this.bee.move(_this.pos.bee, 2, _this.pos.bee.airScale));\n\t\t\treturn t;\n\t\t},\n\t\tflower: function (target, direct) {\n\t\t\tvar t = new TimelineMax();\n\t\t\tt.addCallback(_this.bee.flap, null, [true], _this.bee);\n\t\t\tif (_this.bee.y > 300) {\n\t\t\t\tt.add(_this.bee.move({ y: _this.pos.bee.y }, 1));\n\t\t\t}\n\n\t\t\tvar flow = _this.flowers[target - 1];\n\t\t\tif (this.atValue !== target) {\n\t\t\t\tif (direct) {\n\t\t\t\t\tt.add(_this.bee.move({ x: flow.x }, 2));\n\t\t\t\t} else {\n\t\t\t\t\tvar dir = target < _this.atValue ? -1 : 1;\n\t\t\t\t\tvar i = _this.atValue + dir;\n\t\t\t\t\twhile (i !== target + dir) {\n\t\t\t\t\t\tt.add(_this.bee.move({ x: _this.flowers[i - 1].x }, 1));\n\t\t\t\t\t\tt.addSound(_this.speech, _this.bee, 'number' + i, '-=0.5');\n\t\t\t\t\t\ti += dir;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tt.add(_this.bee.move({ y: flow.y }, 0.75, _this.pos.bee.flowerScale));\n\t\t\tt.addCallback(_this.bee.flap, null, [false], _this.bee);\n\t\t\treturn t;\n\t\t}\n\t};\n};\n\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                           Instruction functions                           */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\nBeeFlightGame.prototype.instructionCount = function () {\n\tvar t = new TimelineMax();\n\tt.addSound(this.speech, this.bee, 'showTheWay');\n\tt.addSound(this.speech, this.bee, 'decideHowFar', '+=0.8');\n\tt.add(this.pointAtFlowers(this.currentNumber));\n\tt.addLabel('useButtons');\n\tt.addLabel('flashButtons', '+=0.5');\n\tt.addSound(this.speech, this.bee, 'pushNumber', 'useButtons');\n\tt.add(util.fade(this.buttons, true), 'useButtons');\n\tt.addCallback(this.buttons.highlight, 'flashButtons', [1], this.buttons);\n\treturn t;\n};\n\nBeeFlightGame.prototype.instructionSteps = BeeFlightGame.prototype.instructionCount;\n\nBeeFlightGame.prototype.instructionAdd = function () {\n\tvar t = new TimelineMax();\n\tt.addSound(this.speech, this.bee, 'wrongPlace');\n\tt.addSound(this.speech, this.bee, 'notFarEnough', '+=0.8');\n\tt.addSound(this.speech, this.bee, 'howMuchMore');\n\t// t.add(this.pointAtFlowers(this.currentNumber));\n\tt.addLabel('useButtons', '+=0.3');\n\tt.addLabel('flashButtons', '+=0.8');\n\tt.addSound(this.speech, this.bee, 'pushNumber', 'useButtons');\n\tt.add(util.fade(this.buttons, true), 'useButtons');\n\tt.addCallback(this.buttons.highlight, 'flashButtons', [1], this.buttons);\n\treturn t;\n};\n\nBeeFlightGame.prototype.instructionSubtract = function () {\n\tvar t = new TimelineMax();\n\tt.addSound(this.speech, this.bee, 'goneTooFar');\n\tt.addSound(this.speech, this.bee, 'mustGoBack');\n\t// t.add(this.pointAtFlowers(this.currentNumber));\n\tt.addLabel('useButtons', '+=0.3');\n\tt.addLabel('flashButtons', '+=0.8');\n\tt.addSound(this.speech, this.bee, 'pushNumber', 'useButtons');\n\tt.add(util.fade(this.buttons, true), 'useButtons');\n\tt.addCallback(this.buttons.highlight, 'flashButtons', [1], this.buttons);\n\treturn t;\n};\n\nBeeFlightGame.prototype.instructionAddSubtract = function () {\n\tvar t = new TimelineMax();\n\tt.addLabel('useButtons');\n\tt.addLabel('flashButtons', '+=0.5');\n\tt.addSound(this.speech, this.bee, 'useButtons', 'useButtons');\n\tt.add(util.fade(this.buttons, true), 'useButtons');\n\tt.addCallback(this.buttons.highlight, 'flashButtons', [1], this.buttons);\n\treturn t;\n};\n\nBeeFlightGame.prototype.pointAtFlowers = function (number) {\n\tvar startY = this.pos.bee.y;\n\tvar arrow = this.gameGroup.create(this.flowers[0].x, startY, 'objects', 'arrow');\n\tarrow.tint = 0xf0f000;\n\tarrow.anchor.set(0, 0.5);\n\tarrow.rotation = -Math.PI/2;\n\tarrow.visible = false;\n\n\tvar t = new TimelineMax();\n\tt.addCallback(function () { arrow.visible = true; });\n\tt.addCallback(function () {}, '+=0.5');\n\tfor (var i = 0; i < number; i++) {\n\t\tif (i !== 0) {\n\t\t\tt.add(new TweenMax(arrow, 0.75, { x: this.flowers[i].x, y: startY }), '+=0.3');\n\t\t}\n\t\tt.add(new TweenMax(arrow, 1, { y: this.flowers[i].y }));\n\t}\n\tt.addCallback(function () { arrow.destroy(); }, '+=0.5');\n\treturn t;\n};\n\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                           Start round functions                           */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\nBeeFlightGame.prototype.newFlower = function (silent) {\n\tvar t = new TimelineMax();\n\tt.addCallback(this.openFlower, null, [this.currentNumber], this);\n\n\tthis.doStartFunction(t, silent);\n\treturn t;\n};\n\nBeeFlightGame.prototype.openFlower = function (number) {\n\tthis.flowers[number - 1].frameName = 'flower' + number;\n};\n\nBeeFlightGame.prototype.startStop = function () {\n\t// Do nothing\n};\n\nBeeFlightGame.prototype.startBelow = function (t, silent) {\n\tt.add(this.runNumber(this.rnd.integerInRange(1, this.currentNumber - 1), true));\n\tif (!silent) {\n\t\tt.addSound(this.speech, this.bee, this.rnd.pick(['notFarEnough', 'howMuchMore']));\n\t}\n};\n\nBeeFlightGame.prototype.startAbove = function (t, silent) {\n\tt.add(this.runNumber(this.rnd.integerInRange(this.currentNumber + 1, this.amount), true));\n\tif (!silent) {\n\t\tt.addSound(this.speech, this.bee, this.rnd.pick(['goneTooFar', 'mustGoBack']));\n\t}\n};\n\nBeeFlightGame.prototype.startThink = function (t) {\n\tvar addTo = this.rnd.integerInRange(1, this.amount);\n\tt.addCallback(function () {\n\t\tthis.addToNumber = addTo;\n\t\tthis.bee.thought.guess.number = this.addToNumber;\n\t}, null, null, this);\n\tt.addSound(this.speech, this.bee, 'thinkItIs');\n\tt.addLabel('number', '+=0.3');\n\tt.add(this.bee.think());\n\tt.addSound(this.speech, this.bee, 'number' + addTo, 'number');\n};\n\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                    Number chosen and return functions                     */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\nBeeFlightGame.prototype.runNumber = function (number, simulate) {\n\tvar current = this.currentNumber-1;\n\tvar sum = number + this.addToNumber;\n\tvar result = simulate ? sum - this.currentNumber : this.tryNumber(number, this.addToNumber);\n\n\tthis.disable(true);\n\tthis.agent.eyesFollowObject(this.bee);\n\tif (this.bee.thought) {\n\t\tthis.bee.thought.visible = false;\n\t}\n\n\tvar t = new TimelineMax();\n\tif (GLOBAL.debug) { t.skippable(); }\n\n\tif (!simulate) {\n\t\tif (number !== 0) {\n\t\t\tvar moving = Math.abs(number);\n\t\t\tif (this.isRelative) {\n\t\t\t\tt.addSound(this.speech, this.bee, moving === 1 ? 'one' : 'number' + moving);\n\t\t\t\tt.addSound(this.speech, this.bee, number > 0 ? 'forward' : 'backward');\n\t\t\t} else {\n\t\t\t\tt.addSound(this.speech, this.bee, 'order' + moving);\n\t\t\t\tt.addSound(this.speech, this.bee, 'flower');\n\t\t\t}\n\t\t\tt.addCallback(function () {}, '+=0.5'); // Pause until next sound.\n\t\t}\n\t\tt.addSound(this.speech, this.bee, 'letsGo');\n\t}\n\n\tt.add(this.bee.moveTo.flower(sum));\n\t\n\t/* Correct :) */\n\tif (!result) {\n\t\tt.addCallback(function () {\n\t\t\tthis.hideButtons();\n\t\t\tthis.flowers[current].frameName = 'flower';\n\t\t\tthis.agent.setHappy();\n\t\t}, null, null, this);\n\t\tt.addSound(this.speech, this.bee, this.rnd.pick(['slurp', 'nectar1', 'nectar2']));\n\t\tt.addLabel('goingHome', '+=0.5');\n\n\t\tif (this._totalCorrect === 1) {\n\t\t\t// Only say \"going back\" first time.\n\t\t\tt.addSound(this.speech, this.bee, 'goingBack', 'goingHome');\n\t\t\tt.add(this.bee.moveTo.home(), 'goingHome');\n\t\t} else {\n\t\t\tt.add(this.bee.moveTo.home(2), 'goingHome');\n\t\t}\n\t\tt.add(this.bee.moveTo.start());\n\t\tthis.atValue = 0;\n\n\t/* Incorrect :( */\n\t} else {\n\t\tt.addCallback(this.agent.setSad, null, null, this.agent);\n\t\tthis.doReturnFunction(t, sum, result, simulate);\n\t}\n\n\tt.addCallback(this.agent.setNeutral, null, null, this.agent);\n\tt.addCallback(this.updateRelative, null, null, this);\n\treturn t;\n};\n\nBeeFlightGame.prototype.returnToStart = function (t) {\n\tthis.atValue = 0;\n\tt.addSound(this.speech, this.bee, 'noNectar');\n\tt.add(this.bee.moveTo.start());\n\tt.add(this.bee.moveTurn(1));\n};\n\nBeeFlightGame.prototype.returnNone = function (t, number, notUsed, silent) {\n\tthis.atValue = number;\n\tif (!silent) {\n\t\tt.addSound(this.speech, this.bee, 'noNectar');\n\t}\n};\n\nBeeFlightGame.prototype.returnToPreviousIfHigher = function (t, number, diff, silent) {\n\tif (diff > 0) {\n\t\tt.addSound(this.speech, this.bee, 'tooFar');\n\t\tt.addSound(this.speech, this.bee, 'wasBefore');\n\t\tt.add(this.bee.moveTo.flower(this.atValue, true));\n\t} else {\n\t\tthis.returnNone(t, number, diff, silent);\n\t}\n};\n\nBeeFlightGame.prototype.returnToPreviousIfLower = function (t, number, diff, silent) {\n\tif (diff < 0) {\n\t\tt.addSound(this.speech, this.bee, 'tooNear');\n\t\tt.addSound(this.speech, this.bee, 'wasBefore');\n\t\tt.add(this.bee.moveTo.flower(this.atValue, true));\n\t} else {\n\t\tthis.returnNone(t, number, diff, silent);\n\t}\n};\n\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                 Overshadowing Subgame mode functions                      */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\nBeeFlightGame.prototype.modeIntro = function () {\n\tvar t = new TimelineMax().skippable();\n\tt.addSound(this.speech, this.bee, 'badSight');\n\tt.addLabel('gotoStart', '+=0.5');\n\tt.add(this.bee.moveTo.start(), 'gotoStart');\n\tt.addSound(this.speech, this.bee, 'howToFind', 'gotoStart');\n\tt.addCallback(this.nextRound, null, null, this);\n};\n\nBeeFlightGame.prototype.modePlayerDo = function (intro, tries) {\n\tif (tries > 0) {\n\t\tthis.showNumbers();\n\t} else { // if intro or first try\n\t\tvar t = new TimelineMax();\n\t\tif (intro) {\n\t\t\tt.skippable();\n\n\t\t\tif (this.instructions) {\n\t\t\t\tt.add(this.newFlower(true));\n\t\t\t\tt.addCallback(this.updateButtons, null, null, this);\n\t\t\t\tt.add(this.doInstructions());\n\t\t\t} else {\n\t\t\t\tt.add(this.newFlower());\n\t\t\t}\n\t\t} else {\n\t\t\tt.addSound(this.speech, this.bee, 'getMore');\n\t\t\tt.add(this.newFlower());\n\t\t}\n\t\tt.addCallback(this.showNumbers, null, null, this);\n\t}\n};\n\nBeeFlightGame.prototype.modePlayerShow = function (intro, tries) {\n\tif (tries > 0) {\n\t\tthis.showNumbers();\n\t} else { // if intro or first try\n\t\tvar t = new TimelineMax();\n\t\tif (intro) {\n\t\t\tt.skippable();\n\t\t\tt.add(this.agent.moveTo.start());\n\t\t\tt.addSound(this.agent.speech, this.agent, 'beeIntro1');\n\t\t\tt.addLabel('agentIntro', '+=0.5');\n\t\t\tt.add(this.agent.wave(3, 1), 'agentIntro');\n\t\t\tt.addSound(this.agent.speech, this.agent, 'beeIntro2', 'agentIntro');\n\t\t\tt.addCallback(this.agent.eyesFollowObject, 'agentIntro', [this.bee], this.agent);\n\t\t\tt.addSound(this.speech, this.bee, 'gettingHelp', '+=0.2');\n\t\t\tt.addSound(this.agent.speech, this.agent, 'beeIntro3', '+=0.2');\n\t\t\tt.addSound(this.speech, this.bee, 'youHelpLater', '+=0.2');\n\t\t}\n\t\tt.add(this.newFlower());\n\t\tt.addCallback(this.showNumbers, null, null, this);\n\t}\n};\n\nBeeFlightGame.prototype.modeAgentTry = function (intro, tries) {\n\tvar t = new TimelineMax();\n\tif (tries > 0) {\n\t\tt.addSound(this.agent.speech, this.agent, 'tryAgain');\n\t} else { // if intro or first try\n\t\tif (intro) {\n\t\t\tt.skippable();\n\t\t\tt.add(this.agent.moveTo.start()); // Agent should be here already.\n\t\t\tt.addSound(this.agent.speech, this.agent, 'myTurn' + this.rnd.integerInRange(1, 2));\n\t\t}\n\t\tt.add(this.newFlower());\n\t}\n\n\tt.add(this.agentGuess(), '+=0.3');\n\tif (intro && this.instructionsAgent) {\n\t\tt.add(this.instructionYesNo(), '+=0.5');\n\t}\n\tt.addCallback(this.showYesnos, null, null, this);\n};\n\nBeeFlightGame.prototype.modeOutro = function () {\n\tthis.agent.thought.visible = false;\n\n\tvar t = new TimelineMax().skippable();\n\tt.addLabel('water1', '+=1.0');\n\tt.addLabel('water2', '+=2.5');\n\tt.addLabel('water3', '+=4');\n\tt.addSound(this.speech, this.bee, 'thatsAll', 0);\n\tt.addCallback(this.agent.setHappy, 'water1', null, this.agent);\n\tt.add(this.agent.fistPump(), 'water1');\n\n\tvar i, number, flower, opened = [];\n\tfor (i = 1; i <= 3; i++) {\n\t\tdo {\n\t\t\tnumber = this.rnd.integerInRange(1, this.amount);\n\t\t\tconsole.log(number, opened);\n\t\t} while (opened.indexOf(number) >= 0);\n\t\topened.push(number);\n\t\tflower = this.flowers[number - 1];\n\t\tt.addCallback(this.openFlower, 'water' + i, [number], this);\n\t\tt.add(this.addWater(flower.x, flower.y + 10), 'water' + i);\n\t}\n\tt.addLabel('letsDance');\n\tt.add(this.bee.moveTo.home(), 'letsDance');\n\tt.addSound(this.speech, this.bee, 'dancing', 'letsDance');\n\tt.addCallback(this.nextRound, null, null, this);\n};","var Subgame = require('./Subgame.js');\nvar GLOBAL = require('../../global.js');\nvar EventSystem = require('../../pubsub.js');\nvar util = require('../../utils.js');\nvar ButtonPanel = require('../../objects/buttons/ButtonPanel.js');\nvar GeneralButton = require('../../objects/buttons/GeneralButton.js');\nvar TextButton = require('../../objects/buttons/TextButton.js');\nvar DraggableObject = require('../../objects/DraggableObject.js');\nvar ObjectPanel = require('../../objects/ObjectPanel');\n\n\nmodule.exports = NumberGame;\n\n/**\n * A superclass for games where you need to guess the correct number.\n * This class will set the .doInstructions, .doStartFunction and .doReturnFunction.\n * They will map to the functions that you should setup (see _setupFunctions).\n * See BeeFlightGame for inspiration of how you can use this class.\n *\n *\n * SETUP THESE IN THE SUBCLASS:\n * \"this\" object should have a property used when setting agent start position:\n *    this.pos: { agent: { start: { x, y }, scale: z } } }.\n *\n * NEVER DO ANY LOGICAL CHANGES IN THE INSTRUCTIONS!\n * instructionCount:       Method count.\n * instructionSteps:       Method incremental-steps.\n * instructionAdd:         Method addition.\n * instructionSubtract:    Method subtraction.\n * instructionAddSubtract: Method addition subtraction.\n *\n * startStop:  When round start without automatic \"guessing\". Used in count and incremental-steps method.\n * startBelow: When round start by guessing lower than target. Used in addition method.\n * startAbove: When round start by guessing higher than target. Used in subtraction method.\n * startThink: When round start by guessing something. Used in add/subt method.\n *\n * runNumber:  The function to run when a number has been chosen.\n *\n * returnToStart:            When returning to the start position on incorrect answer.\n * returnNone:               When the game stays at the incorrect answer position.\n * returnToPreviousIfHigher: When returning to previous value if the incorrect answer was too high.\n * returnToPreviousIfLower:  When returning to previous value if the incorrect answer was too low.\n *\n *\n * VARIABLES THE SUBCLASS CAN USE:\n * Number amount:        this.amount\n * Representation:       this.representation\n * The method:           this.method\n * The number to answer: this.currentNumber (updates automatically)\n *\n * FUNCTIONS THE SUBCLASS CAN USE:\n * Try a number: this.tryNumber(number) - when testing a guess against this.currentNumber\n *\n *\n * Typical game flow:\n * // the first mode, this.modeIntro, will be called automatically when assets are loaded and decoded.\n * this.nextRound();    // start next round (will automatically start next mode)\n * this.disable(false); // make it possible to interact with anything\n * this.tryNumber(x);   // try a number against the current one\n * this.nextRound();    // do this regardless if right or wrong,\n *                      // it takes care of mode switching and function calls for you\n * // Repeat last two functions until game is over.\n */\nNumberGame.prototype = Object.create(Subgame.prototype);\nNumberGame.prototype.constructor = NumberGame;\nfunction NumberGame () {\n\tSubgame.call(this); // Call parent constructor.\n}\n\n/* \n * Phaser state function.\n * Publishes subgameStarted event.\n */\nNumberGame.prototype.init = function (options) {\n\tSubgame.prototype.init.call(this, options);\n\tGeneralButton.prototype.buttonColor = this.buttonColor || GLOBAL.BUTTON_COLOR;\n\tDraggableObject.prototype.objectColor = this.objectColor || GLOBAL.BUTTON_COLOR;\n\n\t/* Public variables */\n\t//No need for different methods in MI, the methods system should be removed in the future at the moment set to one staticly\n\tthis.method = GLOBAL.METHOD.addition;\n\tthis.representation = options.representation;\n\tthis.amount = 4; //Always wants 4 cookies in teh sharkGame\n\n\t/* The current number to answer */\n\tthis.currentNumber = null;\n\t/* Stores the offset of the last try, can be used to judge last try */\n\t/* Ex: -1 means that last try was one less than currentNumber */\n\tthis.lastTry = 0;\n\t/* This should be used to save the current position. */\n\tthis.atValue = 0;\n\t/* This is used to add to the number of the button pushes. */\n\t/* This should be modified only when isRelative is set to true. */\n\tthis.addToNumber = 0;\n\n\t// Setup gameplay differently depending on situation.\n\tthis.isRelative = false;\n\tthis._setupFunctions();\n\n\t/* Numbers for randomisation. */\n\tthis._weighted = this.amount > 4 && this.method === GLOBAL.METHOD.count;\n\tthis._numberMin = 1;\n\tthis._numberMax = 9;\n\tif (this.method === GLOBAL.METHOD.addition) {\n\t\tthis._numberMin++;\n\t}\n\tif (this.method === GLOBAL.METHOD.subtraction) {\n\t\tthis._numberMax--;\n\t}\n\n\t// Agent is added to the game in the superclass, but we set it up here.\n\tthis.agent.x = this.pos.agent.start.x;\n\tthis.agent.y = this.pos.agent.start.y;\n\tthis.agent.scale.set(this.pos.agent.scale);\n\tthis.agent.visible = true;\n\tthis.agent.addThought(this.representation[0], this.pos.agent.mirror || false);\n\tthis.saidAgentWrong = false;\n\n\tvar _this = this;\n\tthis.agent.moveTo = {\n\t\tstart: function () {\n\t\t\tif (_this.agent.x === _this.pos.agent.stop.x &&\n\t\t\t\t_this.agent.y === _this.pos.agent.stop.y) {\n\t\t\t\treturn new TweenMax(_this.agent);\n\t\t\t}\n\t\t\treturn _this.agent.move({ x: _this.pos.agent.stop.x, y: _this.pos.agent.stop.y }, 3);\n\t\t}\n\t};\n\n\t// Setup help button with correct instruction functions.\n\tthis.helpButton = new TextButton(this.game, '?', {\n\t\tx: 75, y: 5, size: 56, fontSize: 30,\n\t\tcolor: GLOBAL.BUTTON_COLOR,\n\t\tdoNotAdapt: true,\n\t\tonClick: function () {\n\t\t\t_this.disable(true);\n\t\t\tvar t;\n\t\t\tif (_this.currentMode === GLOBAL.MODE.agentTry && !_this.saidAgentWrong) {\n\t\t\t\tt = _this.instructionYesNo();\n\t\t\t} else {\n\t\t\t\tt = _this.doInstructions();\n\t\t\t}\n\t\t\tt.addCallback(_this.disable, null, [false], true);\n\t\t\tt.skippable();\n\t\t}\n\t});\n\tthis.helpButton.visible = false;\n\tthis.hudGroup.add(this.helpButton);\n};\n\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                            Private functions                              */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\n\n/**\n * Setup start and return functions.\n * Will map to the functions the subclass should overshadow (see bottom of this class).\n * The .doStartFunction is an easy way to call the appropriate start function.\n * The .doReturnFunction is an wasy way to call the appropriate return function when answer is incorrect.\n */\nNumberGame.prototype._setupFunctions = function () {\n\tif (this.method === GLOBAL.METHOD.count) {\n\t\tthis.doInstructions = this.instructionCount;\n\t\tthis.doStartFunction = this.startStop;\n\t\tthis.doReturnFunction = this.returnToStart;\n\t} else if (this.method === GLOBAL.METHOD.incrementalSteps) {\n\t\tthis.doInstructions = this.instructionSteps;\n\t\tthis.doStartFunction = this.startStop;\n\t\tthis.doReturnFunction = this.returnNone;\n\t} else if (this.method === GLOBAL.METHOD.addition) {\n\t\tthis.doInstructions = this.instructionAdd;\n\t\tthis.doStartFunction = this.startBelow;\n\t\tthis.doReturnFunction = this.returnToPreviousIfHigher;\n\t\tthis.isRelative = true;\n\t} else if (this.method === GLOBAL.METHOD.subtraction) {\n\t\tthis.doInstructions = this.instructionSubtract;\n\t\tthis.doStartFunction = this.startAbove;\n\t\tthis.doReturnFunction = this.returnToPreviousIfLower;\n\t\tthis.isRelative = true;\n\t} else {\n\t\tthis.doInstructions = this.instructionAddSubtract;\n\t\tthis.doStartFunction = this.startThink;\n\t\tthis.doReturnFunction = this.returnNone;\n\t\tthis.isRelative = true;\n\t}\n};\n\n/** Change this.currentNumber to a new one (resets the tries). */\n// TODO: Should we allow the same number again?\nNumberGame.prototype._nextNumber = function () {\n\t// Weighted randomisation if applicable\n\tif (this._weighted && this.rnd.frac() < 0.2) {\n\t\tthis.currentNumber = this.rnd.integerInRange(5, this._numberMax);\n\t} else {\n\t\tthis.currentNumber = this.rnd.integerInRange(this._numberMin, this._numberMax);\n\t}\n};\n\nNumberGame.prototype._getRange = function () {\n\tif (this.method === GLOBAL.METHOD.addition) {\n\t\treturn { min: 1, max: this.amount - this.addToNumber };\n\t} else if (this.method === GLOBAL.METHOD.subtraction) {\n\t\treturn { min: 1 - this.addToNumber, max: -1 };\n\t} else if (this.method === GLOBAL.METHOD.additionSubtraction) {\n\t\treturn { min: 1 - this.addToNumber, max: this.amount - this.addToNumber };\n\t} else {\n\t\treturn { min: 1, max: this.amount };\n\t}\n};\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                            Public functions                               */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\n\n/**\n * Try a number against this.currentNumber.\n * The offset of the last try is stored in this.lastTry.\n * Publishes tryNumber event.\n * @param {number} The number to try.\n * @param {number} The offset to the number (example if you start at 2).\n * @return {boolean} The offset of the last try (0 is correct, -x is too low, +x is too high).\n */\nNumberGame.prototype.tryNumber = function (number, offset) {\n\tvar sum = number + (offset || 0);\n\tthis.lastTry = sum - this.currentNumber;\n\tEventSystem.publish(GLOBAL.EVENT.tryNumber, [sum, this.currentNumber, number, offset]);\n\tDraggableObject.prototype.setTry.call(this, this.lastTry); //Send the last try offset to draggable object for the visual feedback\n\tthis._currentTries++;\n\tthis._totalTries++;\n\tif (!this.lastTry) {\n\t\tthis._counter.value++; // This will trigger next mode if we loop.\n\t\tthis._nextNumber();\n\t\tthis._totalCorrect++;\n\t\tthis._currentTries = 0;\n\t}\n\treturn this.lastTry;\n};\n\n/** Have the agent guess a number. */\nNumberGame.prototype.agentGuess = function () {\n\tvar t = new TimelineMax();\n\tt.addCallback(function () {\n\t\tthis.agent.guessNumber(this.currentNumber - (this.isRelative ? this.addToNumber : 0), this._numberMin, this._numberMax);\n\t}, 0, null, this);\n\tt.add(this.agent.think());\n\treturn t;\n};\n\n/**\n * Setup HUD buttons.\n * @param {Object} options - The options for the buttons\n *                           Supply like this: { buttons: {...}, yesnos: {...} }.\n *                           NOTE: .method and .onClick will be set in this function.\n */\nNumberGame.prototype.setupButtons = function (options) {\n\tvar _this = this;\n\tif (options.buttons) {\n\t\toptions.buttons.method = this.method;\n\t\toptions.buttons.onClick = function (number) { _this.pushNumber(number); };\n\t\tthis.buttons = new ButtonPanel(this.game, this.amount, this.representation, options.buttons);\n\t\tthis.buttons.visible = false;\n\t\tthis.hudGroup.add(this.buttons);\n\t}\n\n\tif (options.yesnos) {\n\t\toptions.yesnos.onClick = function (value) { _this.pushYesNo(value); };\n\t\tthis.yesnos = new ButtonPanel(this.game, 2, GLOBAL.NUMBER_REPRESENTATION.yesno, options.yesnos);\n\t\tthis.yesnos.visible = false;\n\t\tthis.hudGroup.add(this.yesnos);\n\t}\n};\n\n/**\n * Setup drag and goal objects.\n * created in the same way as the buttons\n */\nNumberGame.prototype.setUpDragObject = function(options){\n\tvar _this = this;\n\tif(options.dragObject){\n\t\toptions.dragObject.onClick = function (number) {_this.pushNumber(number);};\n\t\tthis.dragObject = new ObjectPanel(this.game,this.amount, options.dragObject);\n\t\tthis.dragObject.visible = false;\n\t\tthis.hudGroup.add(this.dragObject);\n\t}\n\n\tif(options.goalObject){\n\t\tthis.goalObject = new ObjectPanel(this.game,this.amount, options.goalObject);\n\t\tthis.goalObject.visible = false;\n\t\tthis.hudGroup.add(this.goalObject);\n\t}\n\tif(options.finalDragObject){\n\t\toptions.finalDragObject.onClick = function(){_this.moveObject();};\n\t\tthis.finalDragObject = new ObjectPanel(this.game, this.amount, options.finalDragObject);\n\t\tthis.finalDragObject.visible = false;\n\t\tthis.hudGroup.add(this.finalDragObject);\n\t}\n};\n\n/* Function to trigger when a button or object in the number panel is pushed/dropped.\n * if you want to trigger nextRound call it from within run Number*/\nNumberGame.prototype.pushNumber = function (number) {\n\tthis.saidAgentWrong = false;\n\treturn this.runNumber(number);\n\n};\n\n/* Function triggered when a finalDragObject is drooped on the correct position*/\nNumberGame.prototype.moveObject = function(){\n\tthis.hideWinObject();\n\treturn this.win().addCallback(this.nextRound, null, null, this);\n\n};\n\n/* Function to trigger when a button in the yes-no panel is pushed. */\nNumberGame.prototype.pushYesNo = function (value) {\n\tif (!value) {\n\t\tthis.saidAgentWrong = true;\n\t\tif (this.speech) {\n\t\t\tthis.agent.say(this.agent.speech, 'wrongShow').play('wrongShow');\n\t\t}\n\t\tthis.showNumbers();\n\t} else {\n\t\tthis.yesButton = true;\n\t\tthis.pushNumber(this.agent.lastGuess);\n\t}\n};\n\n/*Shows the drag object on win hides the goalObject*/\nNumberGame.prototype.showWinObject = function(){\n\tthis.disable(false);\n\n\tif(this.finalDragObject) {\n\t\tutil.fade(this.finalDragObject, true);\n\t}\n\tif (this.dragObject) {\n\t\tutil.fade(this.dragObject, false);\n\t}\n\tif (this.goalObject) {\n\t\tutil.fade(this.goalObject, false);\n\t}\n};\n\n// Hides the finalDragObject\nNumberGame.prototype.hideWinObject = function(){\n\tthis.disable(false);\n\tif(this.finalDragObject) {\n\t\tutil.fade(this.finalDragObject, false);\n\t}\n};\n\n// Shows teh goalObject\nNumberGame.prototype.showGoalObject = function(){\n\tif(this.goalObject){\n\t\tif(this.isRelative){\n\t\t\tthis.updateObjects();\n\t\t}\n\t\tutil.fade(this.goalObject, true).eventCallback('onComplete', this.disable, false, this);\n\t}\n};\n/* Show the number panel, hide the yes/no panel and enable input. */\nNumberGame.prototype.showNumbers = function () {\n\tthis.disable(true);\n\tif (this.buttons) {\n\t\tthis.buttons.reset();\n\t\tif (this.isRelative) {\n\t\t\tthis.updateButtons();\n\t\t}\n\t\tutil.fade(this.buttons, true).eventCallback('onComplete', this.disable, false, this);\n\t}\n\n\tif(this.dragObject){\n\t\tthis.dragObject.reset();\n\t\tif(this.isRelative){\n\t\t\tthis.updateObjects();\n\t\t}\n\t\tutil.fade(this.dragObject, true).eventCallback('onComplete', this.disable, false, this);\n\t}\n\tif(this.goalObject){\n\t\tif(this.isRelative){\n\t\t\tthis.updateObjects();\n\t\t}\n\t\tutil.fade(this.goalObject, true).eventCallback('onComplete', this.disable, false, this);\n\t}\n\n\tif (this.yesnos) {\n\t\tutil.fade(this.yesnos, false);\n\t}\n\n\tif (this.agent.visible) {\n\t\tutil.fade(this.agent.thought, false);\n\t\tthis.agent.eyesFollowPointer();\n\t}\n};\n\n/* Show the yes/no panel, hide the number panel and enable input. */\nNumberGame.prototype.showYesnos = function () {\n\tthis.disable(true);\n\tif (this.buttons) {\n\t\tutil.fade(this.buttons, false);\n\t}\n\tif (this.yesnos) {\n\t\tthis.yesnos.reset();\n\t\tutil.fade(this.yesnos, true).eventCallback('onComplete', this.disable, false, this);\n\t}\n\n\tif (this.agent.visible) { this.agent.eyesFollowPointer(); }\n};\n\n/* Hide the number and yes/no panel. */\nNumberGame.prototype.hideButtons = function () {\n\tthis.disable(true);\n\tif (this.buttons) {\n\t\tutil.fade(this.buttons, false);\n\t}\n\tif (this.yesnos) {\n\t\tutil.fade(this.yesnos, false);\n\t}\n\tif (this.dragObject) {\n\t\tutil.fade(this.dragObject, false);\n\t}\n\tif(this.goalObject){\n\t\tutil.fade(this.goalObject, false);\n\t}\n\n\tif (this.agent.visible) { this.agent.eyesStopFollow(); }\n};\n\n/* Update the values of the button panel. */\nNumberGame.prototype.updateButtons = function () {\n\tif (this.buttons) {\n\t\tvar range = this._getRange();\n\t\tthis.buttons.setRange(range.min, range.max);\n\t}\n};\n\nNumberGame.prototype.updateObjects = function(){\n\tvar range = this._getRange();\n\tif(this.dragObject ){\n\t\trange = this._getRange();\n\t\tthis.dragObject.setRange(range.min, range.max,this.currentNumber);\n\t}\n\tif(this.goalObject){\n\t\trange = this._getRange();\n\t\tthis.goalObject.setRange(range.min,range.max, this.currentNumber);\n\t}\n\n};\n\n/* Update the relative value. */\nNumberGame.prototype.updateRelative = function () {\n\tif (this.isRelative) {\n\t\tthis.addToNumber = this.atValue;\n\t}\n};\n/*set relative true*/\nNumberGame.prototype.setRelative = function (correct){\n\tif (correct === true){\n\t\tthis.isRelative = true;\n\t}\n\telse {\n\t\tthis.isRelative = false;\n\t}\n};\n\n/*Set relative false*/\nNumberGame.prototype.setRelativefalse = function (){\n\tthis.isRelative = true;\n};\n\n/* Instructions for the yes - no panel */\nNumberGame.prototype.instructionYesNo = function () {\n\tvar t = new TimelineMax();\n\tt.addSound(this.agent.speech, this.agent, 'willYouHelpMe');\n\tt.add(util.fade(this.yesnos, true), 0);\n\tt.addLabel('green', '+=0.7');\n\tt.addSound(this.agent.speech, this.agent, 'instructionGreen', 'green');\n\tt.add(this.yesnos.children[0].highlight(3), 'green');\n\tt.addLabel('red');\n\tt.addSound(this.agent.speech, this.agent, 'instructionRed', 'red');\n\tt.add(this.yesnos.children[1].highlight(3), 'red');\n\treturn t;\n};\n\n/* Start the game. */\nNumberGame.prototype.startGame = function () {\n\tthis._nextNumber();\n\tthis.helpButton.visible = true;\n\n\tSubgame.prototype.startGame.call(this);\n\n\tEventSystem.publish(GLOBAL.EVENT.numbergameStarted, [this.method, this.amount, this.representation]);\n};\n\n\n/* The following functions should be overshadowed in the game object. */\nNumberGame.prototype.pos = { agent: { start: { x: 0, y: 0 }, scale: 1 } };\nNumberGame.prototype.instructionCount = function () {};\nNumberGame.prototype.instructionSteps = function () {};\nNumberGame.prototype.instructionAdd = function () {};\nNumberGame.prototype.instructionSubtract = function () {};\nNumberGame.prototype.instructionAddSubtract = function () {};\nNumberGame.prototype.startStop = function () {};\nNumberGame.prototype.startBelow = function () {};\nNumberGame.prototype.startAbove = function () {};\nNumberGame.prototype.startThink = function () {};\nNumberGame.prototype.returnToStart = function () {};\nNumberGame.prototype.returnNone = function () {};\nNumberGame.prototype.returnToPreviousIfHigher = function () {};\nNumberGame.prototype.returnToPreviousIfLower = function () {};","var NumberGame = require('./NumberGame.js');\r\nvar SharkGameApe = require('./SharkGameApe.js');\r\nvar GLOBAL = require('../../global.js');\r\nvar LANG = require('../../language.js');\r\nvar util = require('../../utils.js');\r\n\r\nmodule.exports = SharkGame;\r\n\r\nSharkGame.prototype = Object.create(NumberGame.prototype);\r\nSharkGame.prototype.constructor = SharkGame;\r\nfunction SharkGame () {\r\n    NumberGame.call(this); // Call parent constructor.\r\n}\r\n\r\nSharkGame.prototype.pos = {\r\n    home: {\r\n        x: 110, y: 700\r\n    },\r\n    ape: {\r\n        x: 120, y: 300,\r\n        homeScale: 0.8\r\n    },\r\n    agent: {\r\n        start: { x: 1200, y: 400 },\r\n        stop: { x: 777, y: 360 },\r\n        scale: 0.35\r\n    }\r\n};\r\n/* Phaser state function */\r\nSharkGame.prototype.preload = function () {\r\n    this.load.audio('apeSpeech', LANG.SPEECH.sharkgame.speech);\r\n    this.load.audio('beeMusic', ['audio/subgames/beeflight/music.m4a', 'audio/subgames/beeflight/music.ogg', 'audio/subgames/beeflight/music.mp3']);\r\n    this.load.atlasJSONHash('ape', 'img/subgames/beeflight/atlas.png', 'img/subgames/beeflight/atlas.json');\r\n    this.load.atlasJSONHash('shark', 'img/subgames/sharkgame/atlas.png', 'img/subgames/sharkgame/atlas.json');\r\n    this.load.atlasJSONHash('apa', 'img/subgames/sharkgame/apa.png', 'img/subgames/sharkgame/apa.json');\r\n    this.load.atlasJSONHash('numbers', 'img/objects/numbers.png', 'img/objects/numbers.json');\r\n};\r\n\r\nSharkGame.prototype.buttonColor = 0xface3d;\r\n\r\nSharkGame.prototype.create = function () {\r\n    // Setup additional game objects on top of NumberGame.init\r\n  this.setupButtons({\r\n        yesnos: {\r\n            x: 150,\r\n            y: 25,\r\n            size: this.world.width - 300\r\n        }\r\n    });\r\n    this.dropPlaceX = 200;\r\n    this.dropPlaceY = 200;\r\n   this.setUpDragObject({\r\n       dragObject:{\r\n           x: 100,\r\n           y: 670,\r\n           size: this.world.width - 300,\r\n           dropPlaceX: this.dropPlaceX,\r\n           dropPlaceY: this.dropPlaceY,\r\n           id: 'dragObject'\r\n       },\r\n       goalObject:{\r\n           x: this.dropPlaceX,\r\n           y: this.dropPlaceY,\r\n           size: this.world.width - 300,\r\n           id: 'goalObject'\r\n       },\r\n       finalDragObject:{\r\n           x: this.dropPlaceX,\r\n           y: this.dropPlaceY,\r\n           size: this.world.width - 300,\r\n           dropPlaceX: -100,\r\n           dropPlaceY: 450,\r\n           id: 'finalDragObject'\r\n       }\r\n    });\r\n\r\n    this.add.sprite(0, 0, 'shark', 'island.png', this.gameGroup);\r\n\r\n    //Sprites for the equation\r\n    var cloud1 = this.gameGroup.create(-1000, 10, 'objects', 'cloud2');\r\n    var cloud2 = this.gameGroup.create(-1000, 150, 'objects', 'cloud1');\r\n    this.number1 = this.gameGroup.create(50, 200, 'numbers', '1.png');\r\n    this.plus = this.gameGroup.create(120, 180, 'numbers', '+.png');\r\n    this.number2 = this.gameGroup.create(150, 200, 'numbers', '1.png');\r\n    this.equal = this.gameGroup.create(200, 200, 'numbers', '=.png');\r\n    this.answer = this.gameGroup.create(250, 200, 'numbers', '10.png');\r\n    this.number1.visible = false;\r\n    this.plus.visible = false;\r\n    this.number2.visible = false;\r\n    this.equal.visible = false;\r\n    this.answer.visible = false;\r\n\r\n\r\n    TweenMax.fromTo(cloud1, 380, { x: -cloud1.width }, { x: this.world.width, repeat: -1 });\r\n    TweenMax.fromTo(cloud2, 290, { x: -cloud2.width }, { x: this.world.width, repeat: -1 });\r\n\r\n    //To Do: Make the shark a real goal object\r\n    var shark = this.add.sprite(this.pos.home.x, this.pos.home.y, 'shark', 'Shark_angry.png', this.gameGroup);\r\n    shark.anchor.set(0.5, 1);\r\n    this.agent.thought.y += 100;\r\n    this.gameGroup.bringToTop(this.agent);\r\n    this.aGuess = true;\r\n    this.speech = util.createAudioSheet('apeSpeech', LANG.SPEECH.sharkgame.markers);\r\n    this.visualAid = this.gameGroup.create(355, 200, 'cookie', 'cookie1.png');\r\n    this.visualAid.width = 75;\r\n    this.visualAid.height = 75;\r\n    this.visualAid.visible = false;\r\n    this.visualAid.tint = 0xCC7A00;\r\n    // Setup ape\r\n    this.ape = new SharkGameApe(this.game, 450, 500);\r\n    this.ape.scale.set(this.pos.ape.homeScale);\r\n    if (this.method === GLOBAL.METHOD.additionSubtraction) {\r\n        this.ape.addThought(170, -75, this.representation[0], true);\r\n        this.ape.thought.toScale = 0.7;\r\n    }\r\n    this.gameGroup.add(this.ape);\r\n\r\n    this.add.music('apeMusic', 0.1, true).play();\r\n\r\n\r\n};\r\n\r\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\r\n/*                    Number chosen and return functions                     */\r\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\r\nSharkGame.prototype.runNumber = function (number, simulate) {\r\n    var sum = number + this.addToNumber;\r\n    var result = simulate ? sum - this.currentNumber : this.tryNumber(number, this.addToNumber);\r\n    var correct = false;\r\n    this.disable(true);\r\n    this.visualAid.visible = false;\r\n    var t = new TimelineMax();\r\n    if (GLOBAL.debug) { t.skippable(); }\r\n\r\n    /* Correct :) */\r\n    if (!result) {\r\n        correct = true;\r\n        t.addCallback(function () {\r\n            this.showWinObject();\r\n        }, null, null, this);\r\n        //Setting the sprites correlating to the equation\r\n        var goalNumber = (10 - number);\r\n        this.number1.frameName = number +'.png';\r\n        this.number2.frameName = goalNumber +'.png';\r\n        this.number1.visible = true;\r\n        this.plus.visible = true;\r\n        this.number2.visible = true;\r\n        this.equal.visible = true;\r\n        this.answer.visible = true;\r\n        this.atValue = 0;\r\n        this.aGuess = true;\r\n        this.setRelative(correct);\r\n        /* Incorrect :( */\r\n    } else {\r\n        correct = false;\r\n        t.addSound(this.speech, this.ape, 'wrong');\r\n        //If the current mode is agentTry the drag objects and the visualAid sprite should be shown when you are wrong\r\n        /*To Do: instead of using the visualAid sprite use the DraggableObjects visual feedback algorithm before showNumbers\r\n          see DragableObjects stopDrag function for more info*/\r\n        if(this.currentMode === GLOBAL.MODE.agentTry){\r\n            this.visualAid.frame = this.agent.lastGuess + 8;\r\n            if(this.lastTry !== 0 && this.yesButton === true) {\r\n                this.showNumbers();\r\n                if (this.lastTry > 0) {\r\n                    this.visualAid.x = 280;\r\n                } else if (this.lastTry < 0) {\r\n                    this.visualAid.x = 355;\r\n\r\n                }\r\n                this.visualAid.visible = true;\r\n\r\n            }\r\n\r\n        }\r\n        this.aGuess = false;\r\n        this.setRelative(correct);\r\n        this.nextRound();\r\n\r\n    }\r\n\r\n    t.addCallback(this.updateRelative, null, null, this);\r\n    return t;\r\n};\r\n\r\n//Triggerd when the complete cookie is fed to the shark\r\nSharkGame.prototype.win = function(){\r\n    var t = new TimelineMax();\r\n    this.number1.visible = false;\r\n    this.plus.visible = false;\r\n    this.number2.visible = false;\r\n    this.equal.visible = false;\r\n    this.answer.visible = false;\r\n    //If the last correct choice the final wining sound will be played otherwise the correct cookie sound will be played\r\n    if(this._totalCorrect !== 9) {\r\n        t.skippable();\r\n        t.addSound(this.speech, this.ape, 'correct');\r\n    }\r\n    else{\r\n        t.skippable();\r\n        t.addSound(this.speech, this.ape, 'win');\r\n    }\r\n    return t;\r\n};\r\n\r\n\r\n//The intro dialouge is played\r\nSharkGame.prototype.modeIntro = function () {\r\n    var t = new TimelineMax().skippable();\r\n    t.addSound(this.speech, this.ape, 'intro');\r\n    t.addSound(this.speech, this.ape, 'shark');\r\n    t.addSound(this.speech, this.ape, 'intro2');\r\n    t.addSound(this.speech, this.ape, 'intro3');\r\n    t.addCallback(this.nextRound, null, null, this);\r\n};\r\n\r\n\r\nSharkGame.prototype.modePlayerDo = function (intro, tries) {\r\n    if (tries > 0) {\r\n        this.showNumbers();\r\n    } else { // if intro or first try\r\n        var t = new TimelineMax();\r\n        t.addCallback(this.showNumbers, null, null, this);\r\n    }\r\n};\r\n\r\n\r\nSharkGame.prototype.modePlayerShow = function (intro, tries) {\r\n    if (tries > 0) {\r\n        this.showNumbers();\r\n    } else { // if intro or first try\r\n        var t = new TimelineMax();\r\n        if (intro) {\r\n            t.skippable();\r\n            t.add(this.agent.moveTo.start());\r\n            t.addSound(this.speech, this.agent, 'agentIntro');\r\n            t.addSound(this.speech, this.ape, 'watch');\r\n        }\r\n        t.addCallback(this.showNumbers, null, null, this);\r\n    }\r\n};\r\n\r\nSharkGame.prototype.modeAgentTry = function (intro, tries) {\r\n    var t = new TimelineMax();\r\n\r\n\r\n     // if intro or first try\r\n    if (intro) {\r\n        t.skippable();\r\n        t.addSound(this.speech, this.agent,'agentTry');\r\n        t.addSound(this.speech, this.ape,'try');\r\n    }\r\n\r\n    this.yesButton = false;\r\n\r\n    t.addCallback(this.showGoalObject, null, null, this);\r\n    if(this.aGuess === true) {\r\n        t.add(this.agentGuess(), '+=0.3');\r\n        t.addCallback(this.showYesnos, null, null, this);\r\n    }\r\n\r\n};\r\n","var Character = require('../../agent/Character.js');\r\n\r\nmodule.exports = SharkGameApe;\r\n\r\n/* Humfrid, the bee you are helping. */\r\nSharkGameApe.prototype = Object.create(Character.prototype);\r\nSharkGameApe.prototype.constructor = SharkGameApe;\r\nfunction SharkGameApe (game, x, y) {\r\n    Character.call(this, game); // Parent constructor.\r\n    this.turn = true;\r\n    this.x = x || 0;\r\n    this.y = y || 0;\r\n\r\n    this.body = this.create(0, 90, 'apa', 'Chimp_empty_cup.png');\r\n    this.body.anchor.set(0.5);\r\n    this.mouth = this.create(0, 0, 'apa', 'Chimp_sadTalking.png');\r\n    this.mouth.anchor.set(0.5);\r\n    //this.wings = this.create(-25, -43, 'bee', 'wings1');\r\n    //this.wings.anchor.set(0.5);\r\n\r\n    this.talk = TweenMax.to(this.mouth, 0.2, {\r\n        frame: this.mouth.frame+1, roundProps: 'frame', ease: Power0.easeInOut, repeat: -1, yoyo: true, paused: true\r\n    });\r\n\r\n}\r\n/*\r\nSharkGameApe.prototype.flap = function (on) {\r\n    if (on) {\r\n        if (this._flap.paused()) {\r\n            this.wings.frameName = 'wings1';\r\n            this._flap.restart(0);\r\n        }\r\n    } else {\r\n        this._flap.pause(0);\r\n        this.wings.frameName = 'wings0';\r\n    }\r\n};*/\r\n","var SuperState = require('../SuperState.js');\nvar GLOBAL = require('../../global.js');\nvar LANG = require('../../language.js');\nvar EventSystem = require('../../pubsub.js');\nvar Counter = require('../../objects/Counter.js');\nvar Cover = require('../../objects/Cover.js');\nvar Menu = require('../../objects/Menu.js');\n\nmodule.exports = Subgame;\n\n/**\n * Superclass for all games.\n * Holds shared logic for mode and round handling. Also some graphic setups.\n * Also see subclass NumberGame.\n *\n * SETUP THESE IN THE SUBCLASS:\n * They are called with two parameters (ifFirstTime, triesSoFar).\n * modeIntro:      Introduce the game, call nextRound to start next mode.\n * modePlayerDo:   Player only\n * modePlayerShow: Player is showing the TA\n * modeAgentTry:   TA is guessing and the player is helping out\n * modeAgentDo:    TA only\n * modeOutro:      The game is finished, celebrate!\n *\n * VARIABLES THE SUBCLASS CAN USE:\n * Add game objects to:     this.gameGroup\n * Add buttons and HUD to:  this.hudGroup\n * Use agent with:          this.agent (default visibility = false)\n *\n * FUNCTIONS THE SUBCLASS CAN USE:\n * Disable/Enable input:    this.disable(true/false) - default = true = disabled (publishes disabled event)\n * Run next round:          this.nextRound() - will change mode automatically when needed\n * Add water to the can:    this.addWater(fromX, fromY) - Adds a water drop to the can\n */\nSubgame.prototype = Object.create(SuperState.prototype);\nSubgame.prototype.constructor = Subgame;\nfunction Subgame () {}\n\n/* \n * Phaser state function.\n */\nSubgame.prototype.init = function (options) {\n\t/* \"Private\" variables */\n\tvar _this = this; // Event subscriptions does not have access to this\n\tthis._token = options.token || Date.now();\n\tthis._modes = options.mode || [\n\t\tGLOBAL.MODE.intro,\n\t\tGLOBAL.MODE.playerDo,\n\t\tGLOBAL.MODE.playerShow,\n\t\tGLOBAL.MODE.agentTry,\n\t\t// GLOBAL.MODE.agentDo,\n\t\tGLOBAL.MODE.outro\n\t];\n\tthis._mode = null;\n\tthis._pendingMode = null;\n\tthis._first = true;\n\t/* Keep track of how many rounds that have been played */\n\tthis._counter = new Counter(options.roundsPerMode || 3, true);\n\t/* When enough rounds have been played, trigger a mode change */\n\tthis._counter.onMax = function () {\n\t\t_this._nextMode();\n\t};\n\tthis._currentTries = 0;\n\tthis._totalTries = 0;\n\tthis._totalCorrect = 0;\n\n\t// Instruction options\n\tthis.instructions = typeof options.instructions !== 'undefined' ? options.instructions : true;\n\tthis.instructionsAgent = typeof options.instructionsAgent !== 'undefined' ? options.instructionsAgent : true;\n\n\t/* Public variables */\n\tthis.currentMode = null; // The current mode running\n\n\t/* Setup game objects */\n\tthis.gameGroup = this.add.group();\n\tthis.agent = this.game.player.createAgent();\n\tthis.agent.visible = false;\n\tthis.gameGroup.add(this.agent);\n\n\tthis.hudGroup = this.add.group();\n\n\tvar disabler = new Cover(this.game, '#ffffff', 0);\n\tthis.world.add(disabler);\n\tthis.disable = function (value) {\n\t\tif (disabler.visible !== value) {\n\t\t\tEventSystem.publish(GLOBAL.EVENT.disabled, [value]);\n\t\t}\n\t\tdisabler.visible = value;\n\t};\n\n\t/* Setup menu objects */\n\tthis._menuGroup = this.add.group();\n\tthis._menuGroup.visible = false;\n\t//this._waterCan = new WaterCan(this.game);\n\t//this._menuGroup.add(this._waterCan);\n\tthis.menuBack = { state: GLOBAL.STATE.garden, text: LANG.TEXT.gotoGarden };\n\tthis._menuGroup.add(new Menu(this.game));\n\n\t/* For cleanup when shutting down state */\n\tthis._origAudio = Object.keys(this.game.cache._sounds);\n\tthis._origImages = Object.keys(this.game.cache._images);\n};\n\n/* Phaser state function */\nSubgame.prototype.shutdown = function () {\n\tvar key;\n\tfor (key in this.game.cache._sounds) {\n\t\tif (this._origAudio.indexOf(key) < 0) {\n\t\t\tthis.game.cache.removeSound(key);\n\t\t}\n\t}\n\n\tfor (key in this.game.cache._images) {\n\t\tif (this._origImages.indexOf(key) < 0) {\n\t\t\tthis.game.cache.removeImage(key);\n\t\t}\n\t}\n\n\tSuperState.prototype.shutdown.call(this);\n};\n\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                            Private functions                              */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\n\n/** Change to the next mode in the queue. */\nSubgame.prototype._nextMode = function () {\n\tvar newMode = this._modes.shift();\n\tthis._decideMode(newMode);\n\tthis._pendingMode = newMode;\n\tthis._first = true;\n};\n\n/**\n * Translate from integer to mode function\n * @param {number}\n */\nSubgame.prototype._decideMode = function (mode) {\n\tif (mode === GLOBAL.MODE.intro) {\n\t\tthis._mode = this.modeIntro;\n\t} else if (mode === GLOBAL.MODE.playerDo) {\n\t\tthis._mode = this.modePlayerDo;\n\t} else if (mode === GLOBAL.MODE.playerShow) {\n\t\tthis._mode = this.modePlayerShow;\n\t} else if (mode === GLOBAL.MODE.agentTry) {\n\t\tthis._mode = this.modeAgentTry;\n\t} else if (mode === GLOBAL.MODE.agentDo) {\n\t\tthis._mode = this.modeAgentDo;\n\t} else if (mode === GLOBAL.MODE.outro) {\n\t\tthis._mode = this.modeOutro;\n\t} else {\n\t\tthis._mode = this.endGame;\n\t}\n};\n\n/** Skip the current mode. */\nSubgame.prototype._skipMode = function () {\n\tthis._nextMode();\n\tthis.nextRound();\n};\n\n\n/*MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM*/\n/*                            Public functions                               */\n/*WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW*/\n\n/**\n * Calls the current mode function. It will be called with two parameters:\n * 1) If it is the first time on this mode.\n * 2) How many tries that have been made on the current number.\n * Publishes modeChange event (first time a mode runs).\n */\nSubgame.prototype.nextRound = function () {\n\t// Special case: intro and outro only have one round\n\tif ((this.currentMode === GLOBAL.MODE.intro ||\n\t\tthis.currentMode === GLOBAL.MODE.outro) &&\n\t\tthis.currentMode === this._pendingMode) {\n\t\tthis._nextMode();\n\t}\n\t// Publish event when it it is the first time it runs\n\tif (this._first) {\n\t\tEventSystem.publish(GLOBAL.EVENT.modeChange, [this._pendingMode]);\n\t}\n\n\t// Run mode and update properties\n\tthis.currentMode = this._pendingMode;\n\tthis._mode(this._first, this._currentTries);\n\tthis._first = false;\n};\n\n/**\n * Adds water to the water can.\n * Water will only be added in modes playerShow, agentTry and agentDo.\n * @param {number} The x position where the drop will begin.\n * @param {number} The y position where the drop will begin.\n * @param {boolean} Override mode restrictions and force drop to be added.\n * @return {Object} The drop animation from x, y to water can.\n */\n/*Subgame.prototype.addWater = function (x, y) {\n\tvar drop = this.add.sprite(x, y, 'objects', 'drop', this._menuGroup);\n\tdrop.anchor.set(0.5);\n\tdrop.scale.set(0.7, 0);\n\n\t// Show drop\n\treturn new TimelineMax().to(drop.scale, 1.5, { y: 0.7, ease:Elastic.easeOut })\n\t\t// Move drop\n\t\t.to(drop, 1.5, { x: this._waterCan.x + 50, y: this._waterCan.y + 30, ease:Power2.easeOut })\n\t\t// Hide drop and add water\n\t\t.to(drop, 0.5, { height: 0,\n\t\t\tonStart: function () { this.game.player.water++; },\n\t\t\tonStartScope: this,\n\t\t\tonComplete: function () { drop.destroy(); }\n\t\t});\n};\n*/\n/**\n * Start the game!\n * Publishes subgameStarted event.\n */\nSubgame.prototype.startGame = function () {\n\t/* Send event that subgame is started. */\n\tEventSystem.publish(GLOBAL.EVENT.subgameStarted, [this.game.state.current, this._token]);\n\n\tthis._menuGroup.visible = true;\n\tthis._nextMode();\n\tthis.nextRound();\n};\n\n/** End the game. */\nSubgame.prototype.endGame = function () {\n\tthis.state.start(GLOBAL.STATE.beach);\n};\n\n\n/* The following functions should be overshadowed in the game object. */\nSubgame.prototype.modeIntro      = Subgame.prototype._skipMode;\nSubgame.prototype.modePlayerDo   = Subgame.prototype._skipMode;\nSubgame.prototype.modePlayerShow = Subgame.prototype._skipMode;\nSubgame.prototype.modeAgentTry   = Subgame.prototype._skipMode;\nSubgame.prototype.modeAgentDo    = Subgame.prototype._skipMode;\nSubgame.prototype.modeOutro      = Subgame.prototype._skipMode;","var GLOBAL = require('./global.js');\nvar EventSystem = require('./pubsub.js');\n\n/**\n * Fade in or out an object.\n * NOTE: The returned tween has both an onStart and onComplete function.\n * @param {Object} what - The object to fade, needs to have an alpha property.\n * @param {boolean} typ - Fade in = true, out = false, toggle = undefined (default: toggle).\n * @param {number} duration - Fade duration in seconds (default: 0.5).\n *                            NOTE: The tween will have 0 duration if state is correct.\n * @param {number} to - The alpha to fade to (only used when fading in) (default: 1).\n *                      NOTE: You can fade to a lower alpha using fade in.\n * @return {Object} The animation TweenMax.\n */\nexports.fade = function (what, typ, duration, to) {\n\tduration = duration || 0.5;\n\n\treturn TweenMax.to(what, duration, {\n\t\tonStart: function () {\n\t\t\t/* If this object is fading, stop it! */\n\t\t\tif (what.isFading) {\n\t\t\t\twhat.isFading.kill();\n\t\t\t}\n\n\t\t\t/* No specified type: Toggle the current one. */\n\t\t\tif (typeof typ === 'undefined' || typ === null) {\n\t\t\t\ttyp = !what.visible || what.alpha === 0;\n\t\t\t}\n\n\t\t\t/* Not visible? Set alpha to 0 and make it visible if it should be. */\n\t\t\tif (!what.visible) {\n\t\t\t\twhat.alpha = 0;\n\t\t\t\tif (typ) {\n\t\t\t\t\twhat.visible = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* If we are fading in, fade to the specified alpha, otherwise 0. */\n\t\t\tto = typ > 0 ? (to || 1) : 0;\n\t\t\tif (what.alpha !== to) {\n\t\t\t\tthis.updateTo({ alpha: to });\n\t\t\t} else {\n\t\t\t\t/* We are already at correct state, cut the duration. */\n\t\t\t\tthis.duration(0);\n\t\t\t}\n\n\t\t\twhat.isFading = this;\n\t\t},\n\t\tonComplete: function () {\n\t\t\tif (!typ) {\n\t\t\t\twhat.visible = false;\n\t\t\t}\n\t\t\tdelete what.isFading;\n\t\t}\n\t});\n};\n\n/**\n * Easily tween an objects tint. It tweens from the current tint value.\n * @param {Object} what - The object to fade, needs to have an alpha property.\n * @param {number} toColor - The color to fade to.\n * @param {number} duration - Tween duration in seconds (default: 1).\n * @return {Object} The animation TweenMax.\n */\nexports.tweenTint = function (what, toColor, duration) {\n\tduration = duration || 1;\n\tvar color = Phaser.Color.getRGB(what.tint);\n\tvar endColor =  Phaser.Color.getRGB(toColor);\n\n\treturn TweenMax.to(color, duration, {\n\t\tr: endColor.r,\n\t\tg: endColor.g,\n\t\tb: endColor.b,\n\t\tonUpdate: function () {\n\t\t\twhat.tint = Phaser.Color.getColor(color.r, color.g, color.b);\n\t\t}\n\t});\n};\n\n/**\n * Easily create an audio sheet.\n * @param {string} key - The key of the audio object.\n * @param {Object} markers - The Markers of the audio object.\n * @return {Object} The audio object.\n */\nexports.createAudioSheet = function (key, markers) {\n\tvar a = GLOBAL.game.add.audio(key);\n\tfor (var marker in markers) {\n\t\ta.addMarker(marker, markers[marker][0], markers[marker][1]);\n\t}\n\treturn a;\n};\n\n/**\n* Creates a new Sound object as background music\n*\n* @method Phaser.GameObjectFactory#music\n* @param {string} key - The Game.cache key of the sound that this object will use.\n* @param {number} [volume=1] - The volume at which the sound will be played.\n* @param {boolean} [loop=false] - Whether or not the sound will loop.\n* @param {boolean} [connect=true] - Controls if the created Sound object will connect to the master gainNode of the SoundManager when running under WebAudio.\n* @return {Phaser.Sound} The newly created text object.\n*/\nPhaser.GameObjectFactory.prototype.music = function (key, volume, loop, connect) {\n\tvar music = this.game.sound.add(key, volume, loop, connect);\n\tmusic.volume = music.maxVolume * this.game.sound.bgVolume;\n\tthis.game.sound._music.push(music);\n\treturn music;\n};\n\n/**\n* @name Phaser.SoundManager#fgVolume\n* @property {number} fgVolume - Gets or sets the foreground volume of the SoundManager, a value between 0 and 1.\n*/\nObject.defineProperty(Phaser.SoundManager.prototype, 'fgVolume', {\n\tget: function () {\n\t\treturn this._fgVolume;\n\t},\n\tset: function (value) {\n\t\tthis._fgVolume = value;\n\t\tfor (var i = 0; i < this._sounds.length; i++) {\n\t\t\tif (this._music.indexOf(this._sounds[i]) < 0) {\n\t\t\t\tthis._sounds[i].volume = this._sounds[i].maxVolume * value;\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n* @name Phaser.SoundManager#bgVolume\n* @property {number} bgVolume - Gets or sets the background volume of the SoundManager, a value between 0 and 1.\n*/\nObject.defineProperty(Phaser.SoundManager.prototype, 'bgVolume', {\n\tget: function () {\n\t\treturn this._bgVolume;\n\t},\n\tset: function (value) {\n\t\tthis._bgVolume = value;\n\t\tfor (var i = 0; i < this._sounds.length; i++) {\n\t\t\tif (this._music.indexOf(this._sounds[i]) >= 0) {\n\t\t\t\tthis._sounds[i].volume = this._sounds[i].maxVolume * value;\n\t\t\t}\n\t\t}\n\t}\n});\n\n/**\n * Randomize array element order in-place.\n * Using Fisher-Yates shuffle algorithm.\n * @param {Array} The array to shuffle. (Use .splice(0) if you need to copy an array.)\n * @returns {Array} The input array in shuffled order.\n */\nPhaser.RandomDataGenerator.prototype.shuffle = function (array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array;\n};\n\n/**\n * A function to easily add sound to a tween timeline.\n * @param {string|Object} what - The name of the sound file, or the sound object, to play.\n * @param {Object} who - If someone should say it (object must have \"say\" function) (optional).\n * @param {string} marker - For playing a specific marker in a sound file (optional).\n * @param {number} position - The position to put the sound (default is '+=0').\n * @return {Object} The TimelineMax object.\n */\nTimelineMax.prototype.addSound = function (what, who, marker, position) {\n\tvar a = (who && who.say) ? who.say(what, marker) :\n\t\t((typeof what === 'string') ? GLOBAL.game.add.audio(what) : what);\n\n\tif (typeof position === 'undefined' || position === null) {\n\t\tposition = '+=0';\n\t}\n\n\tvar end;\n\tif (marker) {\n\t\tthis.addCallback(function () { a.play(marker); }, position);\n\t\tend = a.markers[marker].duration;\n\t} else {\n\t\tthis.addCallback(function () { a.play(); }, position);\n\t\tend = GLOBAL.game.cache.getSound(a.key).data.duration;\n\t}\n\n\tif (isNaN(position)) {\n\t\t// The position might be a label. Try to get its position.\n\t\tvar label = this.getLabelTime(position);\n\t\tif (label >= 0) {\n\t\t\t// Label present, add to its time.\n\t\t\tend = label + end;\n\t\t} else {\n\t\t\t// Relative position.\n\t\t\tvar time = parseFloat(position.substr(0, 1) + position.substr(2)) + end;\n\t\t\tend = (time < 0 ? '-=' : '+=') + Math.abs(time);\n\t\t}\n\t} else {\n\t\tend += position;\n\t}\n\tthis.addCallback(function () { a.stop(); }, end);\n\n\treturn this;\n};\n\n/**\n * Skip a timeline.\n * Publishes skippable event.\n * NOTE: You can not skip part of a timeline.\n * NOTE: See menu object for more information about skipping.\n * @returns: 'this' TimelineMax object, enables chaining.\n */\nTimelineMax.prototype.skippable = function () {\n\tthis.addCallback(function () {\n\t\tEventSystem.publish(GLOBAL.EVENT.skippable, [this]);\n\t\tthis.addCallback(function () { EventSystem.publish(GLOBAL.EVENT.skippable); });\n\t}, 0, null, this);\n\treturn this;\n};\n\n/**\n * When you want a yoyo animation to go back to the beginning.\n * @param {number} total - The total duration for the animation.\n * @param {number} each - The duration of one direction (half of the loop from start back to start).\n * @return {number} The amount of times to repeat the animation\n */\nTweenMax.prototype.calcYoyo = function (total, each) {\n\tvar times = parseInt(total / each);\n\treturn times + (times % 2 === 0 ? 1 : 0); // Odd number will make the animation return to origin.\n};\n\n/**\n * Make an animation loop from start back to the origin.\n * @param {number} total - The total duration of the animation.\n *                 NOTE: This is not exact time, depending on how well animation duration and total match.\n * @return {Object} The TweenMax object.\n */\nTweenMax.prototype.backForth = function (total) {\n\tthis.yoyo(true);\n\tthis.repeat(this.calcYoyo(total, this.duration()));\n\treturn this;\n};\n\n/**\n * Adds a rounded rectangle to the built-in rendering context.\n * @param {number} x - The x position\n * @param {number} y - The y position\n * @param {number} w - The width\n * @param {number} h - The height\n * @param {number} r - The radius\n * @return {Object} The CanvasRenderingContext2D object\n */\nCanvasRenderingContext2D.prototype.roundRect = function (x, y, w, h, r) {\n\tif (w < 2 * r) { r = w / 2; }\n\tif (h < 2 * r) { r = h / 2; }\n\tthis.beginPath();\n\tthis.moveTo(x+r, y);\n\tthis.arcTo(x+w, y,   x+w, y+h, r);\n\tthis.arcTo(x+w, y+h, x,   y+h, r);\n\tthis.arcTo(x,   y+h, x,   y,   r);\n\tthis.arcTo(x,   y,   x+w, y,   r);\n\tthis.closePath();\n\treturn this;\n};\n\n/**\n * @property {number} PI2 - Math.PI * 2.\n */\nMath.PI2 = Math.PI*2;"]}